<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCapture.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>