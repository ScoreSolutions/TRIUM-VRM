<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Neurotec.Devices</name>
    </assembly>
    <members>
        <member name="T:Neurotec.Devices.ComponentModel.NDeviceEventDescriptor">
            <summary>
            Provides custom event descriptor management functionality.
            </summary>
        </member>
        <member name="P:Neurotec.Devices.ComponentModel.NDeviceEventDescriptor.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="T:Neurotec.Devices.ComponentModel.NDeviceMethodDescriptor">
            <summary>
            Provides custom method descriptor management functionality.
            </summary>
        </member>
        <member name="P:Neurotec.Devices.ComponentModel.NDeviceMethodDescriptor.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="T:Neurotec.Devices.ComponentModel.NDevicePropertyDescriptor">
            <summary>
            Provides custom property descriptor management functionality.
            </summary>
        </member>
        <member name="P:Neurotec.Devices.ComponentModel.NDevicePropertyDescriptor.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="T:Neurotec.DeviceManager.CameraVideoFormat">
            <summary>
            Camera's video format structure.
            </summary>                      
        </member>
        <member name="M:Neurotec.DeviceManager.CameraVideoFormat.ToString">
            <summary>
            Gets a formated string of video format.
            </summary>
            <returns>
            A string representation of a video format.
            </returns>                                
        </member>
        <member name="P:Neurotec.DeviceManager.CameraVideoFormat.FrameWidth">
            <summary>
            Gets or sets frame's width.
            </summary>                 
        </member>
        <member name="P:Neurotec.DeviceManager.CameraVideoFormat.FrameHeight">
            <summary>
            Gets or sets frame height.
            </summary>                
        </member>
        <member name="P:Neurotec.DeviceManager.CameraVideoFormat.FrameRate">
            <summary>
            Gets or sets frame's video rate.
            </summary>                      
        </member>
        <member name="T:Neurotec.DeviceManager.Camera">
            <summary>
            Provides methods for handling a camera as a physical device.
            </summary>
            <remarks>
            One instance represents one physical device.
            </remarks>                                                  
        </member>
        <member name="F:Neurotec.DeviceManager.Camera.ParameterMirrorHorizontal">
            <summary>
            Identifier specifying horizontal mirroring of the frame. 
            </summary>                                               
        </member>
        <member name="F:Neurotec.DeviceManager.Camera.ParameterMirrorVertical">
            <summary>
            Identifier specifying horizontal mirroring of the frame. 
            </summary>                                               
        </member>
        <member name="F:Neurotec.DeviceManager.Camera.ParameterAutomaticSettings">
            <summary>
            Identifier that enables automatic control of camera settings.
            
            </summary>                                                   
        </member>
        <member name="F:Neurotec.DeviceManager.Camera.ParameterGain">
            <summary>
            Identifier that controls camera gain. The gain range can be
            acquired using Neurotec.DeviceManager.Camera.ParameterGainMix
            and Neurotec.DeviceManager.Camera.ParameterGainMax.
            </summary>
            <remarks>
            This parameter is used only when automatic settings is
            disabled. See
            Neurotec.DeviceManager.Camera.ParameterAutomaticSettings
            </remarks>                                                   
        </member>
        <member name="F:Neurotec.DeviceManager.Camera.ParameterGainMin">
            <summary>
            Identifier specifying minimal camera gain.
            </summary>
            <remarks>
            This parameter is used only when automatic settings is
            disabled. See Neurotec.DeviceManager.Camera.ParameterAutomaticSettings
            
            </remarks>                                                            
        </member>
        <member name="F:Neurotec.DeviceManager.Camera.ParameterGainMax">
            <summary>
            Identifier specifying maximal camera gain.
            </summary>
            <remarks>
            This parameter is used only when automatic settings is
            disabled. See Neurotec.DeviceManager.Camera.ParameterAutomaticSettings
            
            </remarks>                                                            
        </member>
        <member name="F:Neurotec.DeviceManager.Camera.ParameterExposure">
            <summary>
            Identifier that controls camera exposure (total amount of
            light allowed to fall on the camera during taking video
            frame). The exposure range can be acquired using Neurotec.DeviceManager.Camera.ParameterExposureMin
            and Neurotec.DeviceManager.Camera.ParameterExposureMax.
            </summary>
            <remarks>
            This parameter is used only when automatic settings is
            disabled. See
            Neurotec.DeviceManager.Camera.ParameterAutomaticSettings 
            </remarks>                                                                                         
        </member>
        <member name="F:Neurotec.DeviceManager.Camera.ParameterExposureMin">
            <summary>
            Identifier specifying minimal camera exposure.
            </summary>
            <remarks>
            This parameter is used only when automatic settings is
            disabled. See Neurotec.DeviceManager.Camera.ParameterAutomaticSettings
            
            </remarks>                                                            
        </member>
        <member name="F:Neurotec.DeviceManager.Camera.ParameterExposureMax">
            <summary>
            Identifier specifying maximal camera exposure.
            </summary>
            <remarks>
            This parameter is used only when automatic settings is
            disabled. See Neurotec.DeviceManager.Camera.ParameterAutomaticSettings
            
            </remarks>                                                            
        </member>
        <member name="F:Neurotec.DeviceManager.Camera.ParameterIpUserName">
            <summary>
            Identifier specifying Cisco IP camera user name. 
            </summary>                                     
        </member>
        <member name="F:Neurotec.DeviceManager.Camera.ParameterIpPassword">
            <summary>
            Identifier specifying Cisco IP camera password. 
            </summary>                                     
        </member>
        <member name="F:Neurotec.DeviceManager.Camera.ParameterIpChannelId">
            <summary>
            Identifier specifying Cisco IP camera streaming Channel Id. 
            </summary>                                     
        </member>
        <member name="F:Neurotec.DeviceManager.Camera.ParameterIpChannelName">
            <summary>
            Identifier specifying Cisco IP camera streaming Channel name. 
            </summary>                                     
        </member>
        <member name="F:Neurotec.DeviceManager.Camera.ParameterVideoFileName">
            <summary>
            Identifier specifying Virtual video file camera video file name. 
            </summary>                                     
        </member>
        <member name="F:Neurotec.DeviceManager.Camera.ParameterVideoDropFrames">
            <summary>
            Identifier specifying whether Virtual video file camera should drop frames or not. 
            Default is set to False so that every returned frame is the next frame in video file.
            </summary>                                     
        </member>
        <member name="M:Neurotec.DeviceManager.Camera.#ctor(Neurotec.Interop.HNObject,Neurotec.DeviceManager.CameraMan)">
            <summary>
            Initializes a new instance of Camera class.
            </summary>                                 
        </member>
        <member name="M:Neurotec.DeviceManager.Camera.GetVideoFormats">
            <summary>
            Gets available video formats for the capture device.
            </summary>
            <returns>
            An array that contains video format values.
            </returns>                                          
        </member>
        <member name="M:Neurotec.DeviceManager.Camera.StartCapturing">
            <summary>
            Starts capturing.
            </summary>       
        </member>
        <member name="M:Neurotec.DeviceManager.Camera.StopCapturing">
            <summary>
            Stops capturing.
            </summary>      
        </member>
        <member name="M:Neurotec.DeviceManager.Camera.GetCurrentFrame">
            <summary>
            Gets current frame from capture device.
            </summary>
            <returns>
            A frame which type is NImage.
            </returns>                             
        </member>
        <member name="P:Neurotec.DeviceManager.Camera.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.DeviceManager.Camera.Owner">
            <summary>
            Gets owner of the object.
            </summary>
            <value>
            Object (owner) of CameraMan type. 
            </value>                          
        </member>
        <member name="P:Neurotec.DeviceManager.Camera.Device">
            <summary>
            Gets the device of the object.
            </summary>
        </member>
        <member name="P:Neurotec.DeviceManager.Camera.Id">
            <summary>
            Gets associated device identifier.
            </summary>
            <value>
            An associated device identifier.
            </value>                          
        </member>
        <member name="P:Neurotec.DeviceManager.Camera.IsCapturing">
            <summary>
            Checks camera status.
            </summary>
            <value>
            A boolean value indicating a camera status. If the camera is
            capturing the return value is true. Otherwise the return
            value is false. 
            </value>                                                    
        </member>
        <member name="P:Neurotec.DeviceManager.Camera.MirrorHorizontal">
            <summary>
            Gets or sets horizontal mirroring of the frame.
            </summary>
            <value>
            <b>true</b> if the frame is mirroring horizontally;
            otherwise, <b>false</b>. 
            </value>                                           
        </member>
        <member name="P:Neurotec.DeviceManager.Camera.MirrorVertical">
            <summary>
            Gets or sets vertical mirroring of the frame.
            </summary>
            <value>
            <b>true</b> if the frame is mirroring vertically; otherwise, <b>false</b>.
            
            </value>                                                                  
        </member>
        <member name="P:Neurotec.DeviceManager.Camera.AutomaticSettings">
            <summary>
            Gets or sets automatic control of camera settings.
            </summary>
            <value>
            <b>true</b> if automatic control of camera is enabled;
            otherwise <b>false</b>. 
            </value>                                              
        </member>
        <member name="P:Neurotec.DeviceManager.Camera.VideoFormat">
            <summary>
            Gets or sets camera video format. Can not be set while the
            camera is capturing.
            </summary>
            <value>
            Camera video format description.
            </value>                                                  
        </member>
        <member name="P:Neurotec.DeviceManager.Camera.Gain">
            <summary>
            Gets or sets camera gain. The gain range can be acquired
            using Neurotec.DeviceManager.CameraParameter.GainMin and
            Neurotec.DeviceManager.Camera.GainMax.
            </summary>
            <value>
            Integer specifying camera gain.
            </value>
            <remarks>
            This parameter is used only when automatic settings is
            disabled. See
            Neurotec.DeviceManager.Camera.ParameterAutomaticSettings 
            </remarks>                                               
        </member>
        <member name="P:Neurotec.DeviceManager.Camera.GainMin">
            <summary>
            Gets minimal camera gain.
            </summary>
            <value>
            Integer specifying minimal possible camera gain.
            </value>
            <remarks>
            This parameter is used only when automatic settings is
            disabled. See
            Neurotec.DeviceManager.Camera.ParameterAutomaticSettings 
            </remarks>                                               
        </member>
        <member name="P:Neurotec.DeviceManager.Camera.GainMax">
            <summary>
            Gets maximal camera gain.
            </summary>
            <value>
            Integer specifying maximal possible camera gain.
            </value>
            <remarks>
            This parameter is used only when automatic settings is
            disabled. See
            Neurotec.DeviceManager.Camera.ParameterAutomaticSettings 
            </remarks>                                               
        </member>
        <member name="P:Neurotec.DeviceManager.Camera.Exposure">
            <summary>
            Gets or sets camera exposure (total amount of light allowed
            to fall on the camera during taking video frame). The
            exposure range can be acquired using
            Neurotec.DeviceManager.Camera.ExposureMax and
            Neurotec.DeviceManager.Camera.ExposureMix..
            </summary>
            <value>
            Integer specifying camera exposure.
            </value>
            <remarks>
            This parameter is used only when automatic settings is
            disabled. See
            Neurotec.DeviceManager.Camera.ParameterAutomaticSettings 
            </remarks>                                                 
        </member>
        <member name="P:Neurotec.DeviceManager.Camera.ExposureMin">
            <summary>
            Gets minimal camera exposure.
            </summary>
            <value>
            Integer specifying minimal possible camera exposure.
            </value>
            <remarks>
            This parameter is used only when automatic settings is
            disabled. See
            Neurotec.DeviceManager.Camera.ParameterAutomaticSettings 
            </remarks>                                               
        </member>
        <member name="P:Neurotec.DeviceManager.Camera.ExposureMax">
            <summary>
            Gets maximal camera exposure.
            </summary>
            <value>
            Integer specifying maximal possible camera exposure.
            </value>
            <remarks>
            This parameter is used only when automatic settings is
            disabled. See
            Neurotec.DeviceManager.Camera.ParameterAutomaticSettings 
            </remarks>                                               
        </member>
        <member name="P:Neurotec.DeviceManager.Camera.IpUserName">
            <summary>
            Gets/sets Cisco IP camera user name.
            </summary>
            <value>
            String specifying camera login information 
            </value>                                   
        </member>
        <member name="P:Neurotec.DeviceManager.Camera.IpPassword">
            <summary>
            Gets/sets Cisco IP camera password.
            </summary>
            <value>
            String specifying camera login information 
            </value>                                   
        </member>
        <member name="P:Neurotec.DeviceManager.Camera.IpChannelName">
            <summary>
            Gets/sets Cisco IP camera streaming Channel name.
            </summary>
            <value>
            String specifying camera streaming information 
            </value>                                         
        </member>
        <member name="P:Neurotec.DeviceManager.Camera.IpChannelId">
            <summary>
            Gets/sets Cisco IP camera streaming Channel Id.
            </summary>
            <value>
            String specifying camera streaming information 
            </value>                                       
        </member>
        <member name="P:Neurotec.DeviceManager.Camera.VideoFileName">
            <summary>
            Gets or sets the name of the video file.
            </summary>
        </member>
        <member name="P:Neurotec.DeviceManager.Camera.VideoDropFrames">
            <summary>
            Gets or sets whether the video drops frames.
            </summary>
        </member>
        <member name="T:Neurotec.DeviceManager.CameraMan">
            <summary>
            Provides functionality for managing cameras.
            </summary>
        </member>
        <member name="M:Neurotec.DeviceManager.CameraMan.#ctor">
            <summary>
            Initializes a new instance the CameraMan class.
            </summary>
        </member>
        <member name="M:Neurotec.DeviceManager.CameraMan.#ctor(System.ComponentModel.ISynchronizeInvoke)">
            <summary>
            Initializes a new instance the CameraMan class.
            </summary>
            <param name="synInvoke">A reference to an interface that
                                    provides a way to synchronously or
                                    asynchronously execute a delegate.</param>
        </member>
        <member name="M:Neurotec.DeviceManager.CameraMan.#ctor(System.Threading.SynchronizationContext)">
            <summary>
            Initializes a new instance the CameraMan class.
            </summary>
            <param name="synchronizationContext">An SynchronizationContext object.</param>
        </member>
        <member name="M:Neurotec.DeviceManager.CameraMan.GetCameraFromDevice(Neurotec.Devices.NCamera)">
            <summary>
            Gets the camera from the specified device.
            </summary>
            <param name="device">The device.</param>
            <returns>Camera object.</returns>
        </member>
        <member name="P:Neurotec.DeviceManager.CameraMan.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.DeviceManager.CameraMan.DeviceManager">
            <summary>
            Gets the device manager of the current object.
            </summary>
        </member>
        <member name="P:Neurotec.DeviceManager.CameraMan.Cameras">
            <summary>
            Gets CameraMan.CameraCollection collection.
            </summary>
            <value>
            A collection of cameras.
            </value>
            <exception cref="T:System.ObjectDisposedException">The exception that
                                                      is thrown when an
                                                      operation is
                                                      performed on a
                                                      disposed object.</exception>
        </member>
        <member name="T:Neurotec.DeviceManager.CameraMan.CameraCollection">
            <summary>
            Represents the collection of Camera objects.
            </summary>                                  
        </member>
        <member name="T:Neurotec.DeviceManager.ObjectModel.DeviceCollection`1">
            <summary>
            Provides device collection management.
            </summary>
        </member>
        <member name="M:Neurotec.DeviceManager.ObjectModel.DeviceCollection`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the current collection to a compatible one-dimensional array, starting at the specified index of the target array. 
            </summary>
            <param name="array">Destination array.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Neurotec.DeviceManager.ObjectModel.DeviceCollection`1.IndexOf(`0)">
            <summary>
            Gets the index of the specified item in the collection.
            </summary>
            <param name="item">The specified item.</param>
            <returns>The index of the item.</returns>
        </member>
        <member name="M:Neurotec.DeviceManager.ObjectModel.DeviceCollection`1.IndexOf(System.IntPtr)">
            <summary>
            Gets the index of the item.
            </summary>
            <param name="hItem">The handle of the object to be searched
                                 in the collection.</param>
            <returns>
            Integer index of the item. The index value of -1 means that
            item was not found in the collection. 
            </returns>                                                  
        </member>
        <member name="M:Neurotec.DeviceManager.ObjectModel.DeviceCollection`1.Contains(System.IntPtr)">
            <summary>
            Checks if the collection contains specific item.
            </summary>
            <param name="hItem">The handle of the item to be checked.</param>
            <returns>
            True if the item exists in the collection. 
            </returns>                                        
        </member>
        <member name="M:Neurotec.DeviceManager.ObjectModel.DeviceCollection`1.IndexOf(Neurotec.Interop.HNObject)">
            <summary>
            Gets index of an item specified by a handle.
            </summary>
            <param name="handle">Item handle.</param>
            <returns>Index of the item.</returns>
        </member>
        <member name="M:Neurotec.DeviceManager.ObjectModel.DeviceCollection`1.Contains(Neurotec.Interop.HNObject)">
            <summary>
            Checks whether the current collection contains an item specified by a handle.
            </summary>
            <param name="handle">Item handle.</param>
            <returns>NTrue, if the colledction contains the item; else NFalse.</returns>
        </member>
        <member name="P:Neurotec.DeviceManager.ObjectModel.DeviceCollection`1.Count">
            <summary>
            Retrieves the number of items in the collection.
            </summary>
        </member>
        <member name="P:Neurotec.DeviceManager.ObjectModel.DeviceCollection`1.Item(System.IntPtr)">
            <summary>
            Gets an item specified by pointer.
            </summary>
            <param name="hItem">Pointer to the item.</param>
            <returns>The item.</returns>
        </member>
        <member name="P:Neurotec.DeviceManager.ObjectModel.DeviceCollection`1.Item(Neurotec.Interop.HNObject)">
            <summary>
            Gets an item specified by handle.
            </summary>
            <param name="handle">Handle to the item.</param>
            <returns>The item.</returns>
        </member>
        <member name="M:Neurotec.DeviceManager.CameraMan.CameraCollection.IndexOf(System.String)">
            <summary>
            Searches for the specified Camera and returns the zero-based
            index of the first occurrence within the entire
            CameraCollection.
            </summary>
            <param name="id">string id of Camera to be found</param>
            <returns>
            The zero-based index of the first occurrence of value within
            the entire CameraCollection, if found;
            
            otherwise, -1.
            </returns>                                                  
        </member>
        <member name="P:Neurotec.DeviceManager.CameraMan.CameraCollection.Item(System.String)">
            <summary>
            Gets Camera from collection by ID.
            </summary>
            <param name="id">An associated device identifier.</param>
            
            <returns>
            A Camera object. 
            </returns>                                               
        </member>
        <member name="T:Neurotec.DeviceManager.FPScannerImageScannedEventArgs">
            <summary>
            The class contains data of event ImageScanned.
            </summary>                                    
        </member>
        <member name="M:Neurotec.DeviceManager.FPScannerImageScannedEventArgs.#ctor(Neurotec.Images.NGrayscaleImage)">
            <summary>Initializes a new instance of the FPScannerImageScannedEventArgs  class.</summary>
            <param name="image">The NGrayscaleImage image.</param>
        </member>
        <member name="P:Neurotec.DeviceManager.FPScannerImageScannedEventArgs.Image">
            <summary>Gets scanned image.</summary>
            <value>The NGrayscaleImage object.</value>
        </member>
        <member name="T:Neurotec.DeviceManager.FPScannerImageScannedEventHandler">
            <summary>
            Represents the method that will handle the ImageScanned event
            of a FPScanner.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="ea">A FPScannerImageScannedEventArgs that
                             contains the<para></para>event data.</param>
        </member>
        <member name="T:Neurotec.DeviceManager.FPScanner">
            <summary>
            One instance represents one physical device.
            </summary>                                  
        </member>
        <member name="M:Neurotec.DeviceManager.FPScanner.StartCapturing">
            <summary>Starts capturing fingerprint image from certain device.</summary>
        </member>
        <member name="M:Neurotec.DeviceManager.FPScanner.StartCapturing(Neurotec.Biometrics.NFImpressionType)">
            <summary>Starts capturing fingerprint image from certain device for specified impression type.</summary>
        </member>
        <member name="M:Neurotec.DeviceManager.FPScanner.StartCapturingForOneImage">
            <summary>
            Starts capturing one fingerprint image from certain device.
            </summary>
            <remarks>
            Scanner is stopped automatically when fingerprint is scanned.
            </remarks>                                                   
        </member>
        <member name="M:Neurotec.DeviceManager.FPScanner.StartCapturingForOneImage(Neurotec.Biometrics.NFImpressionType)">
            <summary>
            Starts capturing one fingerprint image from certain device for specified impression type.
            </summary>
            <remarks>
            Scanner is stopped automatically when fingerprint is scanned.
            </remarks>                                                   
        </member>
        <member name="M:Neurotec.DeviceManager.FPScanner.StopCapturing">
            <summary>
            Stops capturing fingerprint image.
            </summary>
            <returns>
            True if capturing stopped successfully; false otherwise. 
            </returns>                                               
        </member>
        <member name="P:Neurotec.DeviceManager.FPScanner.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.DeviceManager.FPScanner.Owner">
            <summary>
            Gets owner of the object.
            </summary>
            <value>
            Object (owner) of FPScannerMan type. 
            </value>                             
        </member>
        <member name="P:Neurotec.DeviceManager.FPScanner.Device">
            <summary>
            Gets the finger scanner device.
            </summary>
        </member>
        <member name="P:Neurotec.DeviceManager.FPScanner.Id">
            <summary>
            Gets associated device identifier.
            </summary>
            <value>
            An associated device identifier.
            </value>                          
        </member>
        <member name="P:Neurotec.DeviceManager.FPScanner.IsCapturing">
            <summary>Checks scanner status.</summary>
            <value>true if capturing from scanner was started; otherwise, false.</value>
        </member>
        <member name="E:Neurotec.DeviceManager.FPScanner.IsCapturingChanged">
            <summary>
            Occurs when capturing from scanner was started, stpped for or
            capturing was started for one image.
            </summary>                                                   
        </member>
        <member name="E:Neurotec.DeviceManager.FPScanner.FingerPlaced">
            <summary>
            Occurs when finger is placed on scanner.
            </summary>                              
        </member>
        <member name="E:Neurotec.DeviceManager.FPScanner.FingerRemoved">
            <summary>
            Occurs when finger is removed from scanner.
            </summary>                                 
        </member>
        <member name="E:Neurotec.DeviceManager.FPScanner.ImageScanned">
            <summary>
            Occurs when image is scanned from scanner.
            </summary>                                
        </member>
        <member name="T:Neurotec.DeviceManager.FPScannerManScannerEventArgs">
            <summary>
            Provides data for ImageScanned event.
            </summary>                           
        </member>
        <member name="M:Neurotec.DeviceManager.FPScannerManScannerEventArgs.#ctor(Neurotec.DeviceManager.FPScanner)">
            <summary>Initializes a new instance of the FPScannerManScannerEventArgs class.</summary>
            <param name="scanner">The FPScanner object.</param>
        </member>
        <member name="P:Neurotec.DeviceManager.FPScannerManScannerEventArgs.Scanner">
            <summary>Gets the FPScanner object.</summary>
            <value>The FPScanner object.</value>
        </member>
        <member name="T:Neurotec.DeviceManager.FPScannerManScannerEventHandler">
            <summary>
            Represent the method that will handle ScannerAdded,
            ScannerRemoved events of a FPScannerMan.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A FPScannerManScannerEventArgs that
                            contains the event data.</param>     
        </member>
        <member name="T:Neurotec.DeviceManager.FPScannerMan">
            <summary>
            Scanners manager enumerates, creates scanners.
            </summary>                                    
        </member>
        <member name="M:Neurotec.DeviceManager.FPScannerMan.GetAvailableModules">
            <summary>
            Gets the list of scanners separated by semicolons.
            </summary>
            <returns>
            A string that contains the list of scanners separated by
            semicolons. 
            </returns>                                              
        </member>
        <member name="M:Neurotec.DeviceManager.FPScannerMan.#ctor">
            <summary>Initializes a new instance of the FPScannerMan class.</summary>
        </member>
        <member name="M:Neurotec.DeviceManager.FPScannerMan.#ctor(System.String)">
            <summary>
            Initializes a new instance of the FPScannerMan class.
            </summary>
            <param name="modules">A string that contains the list of
                                  scanners separated by semicolons. </param>
        </member>
        <member name="M:Neurotec.DeviceManager.FPScannerMan.#ctor(System.ComponentModel.ISynchronizeInvoke)">
            <summary>Initializes a new instance of the FPScannerMan class.</summary>
            <param name="synInvoke">An ISynchronizeInvoke object.</param>
        </member>
        <member name="M:Neurotec.DeviceManager.FPScannerMan.#ctor(System.String,System.ComponentModel.ISynchronizeInvoke)">
            <summary>
            Initializes a new instance of the FPScannerMan class.
            </summary>
            <param name="modules">A string that contains the list of
                                  scanners separated by semicolons. </param>
            <param name="synInvoke">An ISynchronizeInvoke object.</param>   
        </member>
        <member name="M:Neurotec.DeviceManager.FPScannerMan.#ctor(System.String,System.Threading.SynchronizationContext)">
            <summary>
            Initializes a new instance of the FPScannerMan class.
            </summary>
            <param name="modules">A string that contains the list of
                                  scanners separated by semicolons. </param>
            <param name="synchronizationContext">An SynchronizationContext object.</param>   
        </member>
        <member name="M:Neurotec.DeviceManager.FPScannerMan.GetScannerFromDevice(Neurotec.Devices.NCamera)">
            <summary>
            Gets the fingerprint scanner object from the specified device.
            </summary>
            <param name="device">The device.</param>
            <returns>FPScanner object.</returns>
        </member>
        <member name="P:Neurotec.DeviceManager.FPScannerMan.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.DeviceManager.FPScannerMan.DeviceManager">
            <summary>
            Gets the device manager of the current object.
            </summary>
        </member>
        <member name="P:Neurotec.DeviceManager.FPScannerMan.Scanners">
            <summary>
            FPScanner collection.
            </summary>
            <returns>
            FPScanner collection.
            </returns>           
        </member>
        <member name="E:Neurotec.DeviceManager.FPScannerMan.ScannerAdded">
            <summary>
            Occurs when scanner is connected.
            </summary>                       
        </member>
        <member name="E:Neurotec.DeviceManager.FPScannerMan.ScannerRemoved">
            <summary>
            Occurs when scanner is disconnected.
            </summary>                          
        </member>
        <member name="T:Neurotec.DeviceManager.FPScannerMan.FPScannerCollection">
            <summary>
            Represents the collection of FPScanner. 
            </summary>                              
        </member>
        <member name="M:Neurotec.DeviceManager.FPScannerMan.FPScannerCollection.IndexOf(System.String)">
            <summary>
            \Reports the index of the first occurrence of FPScanner.
            </summary>
            <param name="id">An associated device identifier.</param>
            <returns>
            The index of the FPScanner. 
            </returns>                                               
        </member>
        <member name="P:Neurotec.DeviceManager.FPScannerMan.FPScannerCollection.Item(System.String)">
            <summary>
            Gets FPScanner from collection by scanner Id.
            </summary>
            <param name="id">An associated device identifier.</param>
            <returns>
            A FPScanner object. 
            </returns>                                               
        </member>
        <member name="T:Neurotec.DeviceManager.IrisCameraIrisesAcquiredEventArgs">
            <summary>
            A class that is passed to event handler and through which
            event data can be accessed.
            </summary>                                               
        </member>
        <member name="M:Neurotec.DeviceManager.IrisCameraIrisesAcquiredEventArgs.#ctor(Neurotec.Images.NGrayscaleImage,Neurotec.Images.NGrayscaleImage)">
            <summary>
            Initializes a new instance of the IrisCameraEventArgs class.
            </summary>
            <param name="leftIris">image of the left iris</param>
            <param name="rightIris">image of the right iris</param>     
        </member>
        <member name="P:Neurotec.DeviceManager.IrisCameraIrisesAcquiredEventArgs.LeftIris">
            <summary>
            Gets image of the left iris.
            </summary>
            <value>
            NGrayscaleImage object.
            </value>                    
        </member>
        <member name="P:Neurotec.DeviceManager.IrisCameraIrisesAcquiredEventArgs.RightIris">
            <summary>
            Gets image of the right iris
            </summary>
            <value>
            NGrayscaleImage object.
            </value>                    
        </member>
        <member name="T:Neurotec.DeviceManager.IrisCameraIrisesAcquiredEventHandler">
            <summary>
            Represent the method that will handle IrisesAcquired event of
            a IrisCamera.
            </summary>
            \+
            
            <param name="sender">The source of the event.</param>
            <param name="ea">A IrisCameraEventArgs that contains the
                             event data.</param>                         
        </member>
        <member name="T:Neurotec.DeviceManager.IrisCamera">
            <summary>
            Provides methods for handling a camera as a physical device.
            </summary>
            <remarks>
            One instance represents one physical device.
            </remarks>                                                  
        </member>
        <member name="M:Neurotec.DeviceManager.IrisCamera.#ctor(Neurotec.Interop.HNObject,Neurotec.DeviceManager.IrisCameraMan)">
            <summary>
            Initializes a new instance of Camera class.
            </summary>                                 
        </member>
        <member name="M:Neurotec.DeviceManager.IrisCamera.StartCapturing">
            <summary>
            Starts capturing.
            </summary>       
        </member>
        <member name="M:Neurotec.DeviceManager.IrisCamera.StopCapturing">
            <summary>
            Stops capturing.
            </summary>
            <returns>
            True if capturing stopped successfully; false otherwise. 
            </returns>                                               
        </member>
        <member name="M:Neurotec.DeviceManager.IrisCamera.GetImages(Neurotec.Images.NImage@,Neurotec.Images.NImage@)">
            <summary>
            Gets images of both irises from capture device.
            </summary>
            <param name="leftIris">[out] image of the left iris</param>
            <param name="rightIris">[out] image of the right iris</param>
        </member>
        <member name="P:Neurotec.DeviceManager.IrisCamera.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.DeviceManager.IrisCamera.Owner">
            <summary>
            Gets owner of the object.
            </summary>
            <value>
            Object (owner) of IrisCameraMan type. 
            </value>                              
        </member>
        <member name="P:Neurotec.DeviceManager.IrisCamera.Device">
            <summary>
            Gets the iris scanner device.
            </summary>
        </member>
        <member name="P:Neurotec.DeviceManager.IrisCamera.Id">
            <summary>
            Gets associated device identifier.
            </summary>
            <value>
            An associated device identifier.
            </value>                          
        </member>
        <member name="P:Neurotec.DeviceManager.IrisCamera.IsCapturing">
            <summary>
            Checks camera status.
            </summary>
            <value>
            A boolean value indicating a camera status. If the camera is
            capturing the return value is true. Otherwise the return
            value is false. 
            </value>                                                    
        </member>
        <member name="E:Neurotec.DeviceManager.IrisCamera.IrisesAcquired">
            <summary>
            This event is fired when irises are acquired.
            </summary>                                   
        </member>
        <member name="T:Neurotec.DeviceManager.IrisCameraMan">
            <summary>
            Provides functionality for managing cameras.
            </summary>                                  
        </member>
        <member name="M:Neurotec.DeviceManager.IrisCameraMan.#ctor">
            <summary>
            Initializes a new instance the IrisCameraMan class.
            </summary>
        </member>
        <member name="M:Neurotec.DeviceManager.IrisCameraMan.#ctor(System.ComponentModel.ISynchronizeInvoke)">
            <summary>
            Initializes a new instance the IrisCameraMan class.
            </summary>
            <param name="synInvoke">A reference to an interface that
                                    provides a way to synchronously or
                                    asynchronously execute a delegate.</param>
        </member>
        <member name="M:Neurotec.DeviceManager.IrisCameraMan.#ctor(System.Threading.SynchronizationContext)">
            <summary>
            Initializes a new instance the IrisCameraMan class.
            </summary>
            <param name="synchronizationContext">An SynchronizationContext object.</param>
        </member>
        <member name="M:Neurotec.DeviceManager.IrisCameraMan.GetCameraFromDevice(Neurotec.Devices.NIrisScanner)">
            <summary>
            Gets the iris camera from the the specified device.
            </summary>
            <param name="device">The device.</param>
            <returns>The iris camera.</returns>
        </member>
        <member name="P:Neurotec.DeviceManager.IrisCameraMan.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.DeviceManager.IrisCameraMan.DeviceManager">
            <summary>
            Gets the device manager of the current object.
            </summary>
        </member>
        <member name="P:Neurotec.DeviceManager.IrisCameraMan.Cameras">
            <summary>
            Gets IrisCameraMan.IrisCameraCollection collection.
            </summary>
            <value>
            A collection of cameras.
            </value>
            <exception cref="T:System.ObjectDisposedException">The exception that
                                                      is thrown when an
                                                      operation is
                                                      performed on a
                                                      disposed object.</exception>
        </member>
        <member name="P:Neurotec.DeviceManager.IrisCameraMan.IrisCameras">
            <summary>
            Retrieves the collection of iris cameras.
            </summary>
        </member>
        <member name="T:Neurotec.DeviceManager.IrisCameraMan.IrisCameraCollection">
            <summary>
            Represents the collection of IrisCamera objects.
            </summary>                                  
        </member>
        <member name="M:Neurotec.DeviceManager.IrisCameraMan.IrisCameraCollection.IndexOf(System.String)">
            <summary>
            Searches for the specified IrisCamera and returns the
            zero-based index of the first occurrence within the entire
            IrisCameraCollection
            </summary>
            <param name="id">string id of IrisCamera to be found</param>
            <returns>
            The zero-based index of the first occurrence of value within
            the entire IrisCameraCollection , if found;
            
            otherwise, -1.
            </returns>                                                  
        </member>
        <member name="P:Neurotec.DeviceManager.IrisCameraMan.IrisCameraCollection.Item(System.String)">
            <summary>
            Gets IrisCamera from collection by Id.
            </summary>
            <param name="id">An associated device identifier.</param>
            <returns>
            An IrisCamera object. 
            </returns>                                               
        </member>
        <member name="T:Neurotec.Devices.NBiometricDevice">
            <summary>
            Provides methods to retrieve information about biometric
            device.
            </summary>
        </member>
        <member name="T:Neurotec.Devices.NDevice">
            <summary>
            Provides functionality for retrieving device information.
            </summary>                                               
        </member>
        <member name="P:Neurotec.Devices.NDevice.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Devices.NDevice.NDeviceTypeNativeType">
            <summary>
            Defines the native type of the device type.
            </summary>
        </member>
        <member name="P:Neurotec.Devices.NDevice.Owner">
            <summary>
            Gets the owner of the device manager.
            </summary>
        </member>
        <member name="P:Neurotec.Devices.NDevice.Plugin">
            <summary>
            Gets device plugin.
            </summary>
            <value>
            Device plugin.
            </value>           
        </member>
        <member name="P:Neurotec.Devices.NDevice.DeviceType">
            <summary>
            Gets the type of multimodal device.
            </summary>
            <value>
            Device type value.
            </value>                           
        </member>
        <member name="P:Neurotec.Devices.NDevice.IsAvailable">
            <summary>
            Checks if the device is available.
            </summary>
            <value>
            Boolean value indicating if the device is available.
            </value>                                            
        </member>
        <member name="P:Neurotec.Devices.NDevice.IsPrivate">
            <summary>
            Checks if the device is private.
            </summary>
            <value>
            Boolean value indicating if the device is private.
            </value>                                          
        </member>
        <member name="P:Neurotec.Devices.NDevice.IsDisconnectable">
            <summary>
            Checks whether the device is disconnectable.
            </summary>
        </member>
        <member name="P:Neurotec.Devices.NDevice.Parent">
            <summary>
            Gets the parent of specified multimodal device module.
            </summary>
            <value>
            Parent of multimodal device.
            </value>                                              
        </member>
        <member name="P:Neurotec.Devices.NDevice.Id">
            <summary>
            Gets device Id.
            </summary>
            <value>
            String containing device Id.
            </value>                    
        </member>
        <member name="P:Neurotec.Devices.NDevice.DisplayName">
            <summary>
            Gets device name
            </summary>
            <value>
            String containing device display name.
            </value>                              
        </member>
        <member name="P:Neurotec.Devices.NDevice.Make">
            <summary>
            Gets device manufacturer.
            </summary>
            <value>
            String containing device manufacturer.
            </value>                              
        </member>
        <member name="P:Neurotec.Devices.NDevice.Model">
            <summary>
            Gets model of current biometric device.
            </summary>
            <value>
            String containing device model name.
            </value>                               
        </member>
        <member name="P:Neurotec.Devices.NDevice.SerialNumber">
            <summary>
            Gets serial number of current biometric device.
            </summary>
            <value>
            String containing device serial number.
            </value>                                       
        </member>
        <member name="P:Neurotec.Devices.NDevice.Children">
            <summary>
            Gets children collections of specified multimodal device.
            </summary>
            <value>
            Device children collection.
            </value>                                                 
        </member>
        <member name="T:Neurotec.Devices.NDevice.ChildCollection">
            <summary>
            Children collection of specified multimodal device.
            </summary>                                         
        </member>
        <member name="M:Neurotec.Devices.NBiometricDevice.Cancel">
            <summary>
            Stops capturing and cancels NBiometricDevice (NFScanner or
            NIrisScanner)
            </summary>
            <remarks>
            Also EndSequence method can be called which cancels device
            and stops sequence.
            </remarks>                                                
        </member>
        <member name="M:Neurotec.Devices.NBiometricDevice.StartSequence">
            <summary>
            Starts sequence which prepares device for multiple capture
            operations.
            </summary>
            <remarks>
            <paraattr align="justify">
            Some devices do not support multiple capturing (sequences).
            When called for such devices, this method does nothing.
            </paraattr>
            StartSequence method does not start capturing. Capturing
            should be started using Capture methods. This method should
            be called for each fingerprint/palmprint or iris image.
            
            If capturing sequence was started, after capturing it should
            be ended by calling EndSequence method.
            </remarks>                                                  
        </member>
        <member name="M:Neurotec.Devices.NBiometricDevice.EndSequence">
            <summary>
            Ends multiple images capturing sequence.
            </summary>                              
        </member>
        <member name="P:Neurotec.Devices.NBiometricDevice.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Devices.NBiometricDevice.BiometricType">
            <summary>
            Gets the type of biometric device.
            </summary>
            <value>
            Device biometric type.
            </value>                          
        </member>
        <member name="P:Neurotec.Devices.NBiometricDevice.VendorId">
            <summary>
            Gets device vendor Id.
            </summary>
            <value>
            Device vendor Id.
            </value>              
        </member>
        <member name="P:Neurotec.Devices.NBiometricDevice.ProductId">
            <summary>
            Gets product device Id.
            </summary>
            <value>
            Product Id. 
            </value>               
        </member>
        <member name="P:Neurotec.Devices.NBiometricDevice.IsSpoofDetectionSupported">
            <summary>
            Checks if the device is capable to detect spoof objects.
            </summary>
            <value>
            true if device is capable to detect spoof objects; otherwise
            false.
            </value>                                                    
        </member>
        <member name="P:Neurotec.Devices.NBiometricDevice.SpoofDetection">
            <summary>
            Gets or sets spoof detection value for biometric device.
            </summary>
            <value>
            true if device is used to detect spoof objects; otherwise
            false.
            </value>                                                 
        </member>
        <member name="T:Neurotec.Devices.NCameraStatus">
            <summary>
            Enumerates camera status values.
            </summary>
        </member>
        <member name="F:Neurotec.Devices.NCameraStatus.Ok">
            Reserved for future use.
        </member>
        <member name="F:Neurotec.Devices.NCameraStatus.AutoFocusFailure">
            Indicates that camera is ready to use.
        </member>
        <member name="F:Neurotec.Devices.NCameraStatus.LensClosed">
            Indicates that camera failed to auto focus an object.
        </member>
        <member name="F:Neurotec.Devices.NCameraStatus.MirrorUp">
            Indicates that camera lens are closed.
        </member>
        <member name="F:Neurotec.Devices.NCameraStatus.SensorCleaning">
            Indicates that camera mirror is up (when DSLR is used).
        </member>
        <member name="F:Neurotec.Devices.NCameraStatus.SilentOperation">
            Indicates that camera is performing sensor cleaning.
        </member>
        <member name="F:Neurotec.Devices.NCameraStatus.StroboCharge">
            Indicates that camera is operating in silent mode.
        </member>
        <member name="F:Neurotec.Devices.NCameraStatus.NoLens">
            Indicates that camera strobe is charging.
        </member>
        <member name="T:Neurotec.Devices.NCameraStillCapturedEventArgs">
            <summary>
            Contains NCamera still image capture event arguments.
            </summary>
        </member>
        <member name="M:Neurotec.Devices.NCameraStillCapturedEventArgs.#ctor(System.IO.Stream,System.Object,Neurotec.NPropertyBag)">
            <summary>
            Creates a new instance of NCameraStillCapturedEventArgs class.
            </summary>
            <param name="stream">Data stream.</param>
            <param name="id">Camera ID.</param>
            <param name="properties">Event properties.</param>
        </member>
        <member name="P:Neurotec.Devices.NCameraStillCapturedEventArgs.Stream">
            <summary>
            Retrieves the data stream.
            </summary>
        </member>
        <member name="P:Neurotec.Devices.NCameraStillCapturedEventArgs.Id">
            <summary>
            Retrieves the camera ID.
            </summary>
        </member>
        <member name="P:Neurotec.Devices.NCameraStillCapturedEventArgs.Properties">
            <summary>
            Retrieves the event properties.
            </summary>
        </member>
        <member name="T:Neurotec.Devices.NCamera">
            <summary>
            Provides methods for working with cameras.
            </summary>                                
        </member>
        <member name="T:Neurotec.Devices.NCaptureDevice">
            <summary>
            Provides methods for working with capture devices.
            </summary>                                        
        </member>
        <member name="M:Neurotec.Devices.NCaptureDevice.StartCapturing">
            <summary>
            Starts capturing.
            </summary>       
        </member>
        <member name="M:Neurotec.Devices.NCaptureDevice.StopCapturing">
            <summary>
            Stops capturing.
            </summary>      
        </member>
        <member name="M:Neurotec.Devices.NCaptureDevice.GetFormats">
            <summary>
            Gets all supported formats by the capture device.
            </summary>
            <returns>
            Array of supported media formats for the current capture
            device.
            </returns>                                              
        </member>
        <member name="M:Neurotec.Devices.NCaptureDevice.GetCurrentFormat">
            <summary>
            Gets current media format of the capture device.
            </summary>
            <returns>
            Current media format of capture device. 
            </returns>                                      
        </member>
        <member name="M:Neurotec.Devices.NCaptureDevice.SetCurrentFormat(Neurotec.Media.NMediaFormat)">
            <summary>
            Sets current media format for the capture device.
            </summary>
            <param name="format">Current media format to set.</param>
        </member>
        <member name="P:Neurotec.Devices.NCaptureDevice.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Devices.NCaptureDevice.IsCapturing">
            <summary>
            Checks if the device is capturing.
            </summary>
            <value>
            bool type value indicating if the device is capturing.
            </value>                                              
        </member>
        <member name="P:Neurotec.Devices.NCaptureDevice.MediaType">
            <summary>
            Gets the media type.
            </summary>
        </member>
        <member name="E:Neurotec.Devices.NCaptureDevice.IsCapturingChanged">
            <summary>
            Gets or sets
            </summary>
            <value>
            Value
            </value>    
        </member>
        <member name="M:Neurotec.Devices.NCamera.GetFrame">
            <summary>
            Gets current frame from the capture device.
            </summary>
            <returns>
            Frame image.
            </returns>                                 
        </member>
        <member name="M:Neurotec.Devices.NCamera.ResetFocus">
            <summary>
            Resets camera focus.
            </summary>
        </member>
        <member name="M:Neurotec.Devices.NCamera.Focus">
            <summary>
            Adjusts camera focus.
            </summary>
            <returns>NCameraStatus object.</returns>
        </member>
        <member name="M:Neurotec.Devices.NCamera.GetStillFormats">
            <summary>
            Gets still image formats supported by specified camera.
            </summary>
            <returns>The allocated array of NVideoFormat structures describing all supported formats for the current capture device (camera).</returns>
        </member>
        <member name="M:Neurotec.Devices.NCamera.GetCurrentStillFormat">
            <summary>
            Gets the current still image format.
            </summary>
            <returns>One of NVideoFormat values.</returns>
        </member>
        <member name="M:Neurotec.Devices.NCamera.SetCurrentStillFormat(Neurotec.Media.NVideoFormat)">
            <summary>
            Sets the current still image format.
            </summary>
            <param name="format">One of NVideoFormat values.</param>
        </member>
        <member name="M:Neurotec.Devices.NCamera.CaptureStill">
            <summary>
            Gets a still image from capture device (camera).
            </summary>
            <returns>NCameraStatus object.</returns>
            <remarks>Captured still image (NImage) is retrieved by calling NCameraAddStillCapturedCallback (user defined function).</remarks>
        </member>
        <member name="P:Neurotec.Devices.NCamera.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Devices.NCamera.NCameraStatusNativeType">
            <summary>
            Defines the native type of the camera status.
            </summary>
        </member>
        <member name="P:Neurotec.Devices.NCamera.IsFocusSupported">
            <summary>
            Checks whether the focus is supported.
            </summary>
        </member>
        <member name="P:Neurotec.Devices.NCamera.IsFocusRegionSupported">
            <summary>
            Checks whether the focus region is supported.
            </summary>
        </member>
        <member name="P:Neurotec.Devices.NCamera.FocusRegion">
            <summary>
            Gets or sets the focus region.
            </summary>
        </member>
        <member name="P:Neurotec.Devices.NCamera.IsStillCaptureSupported">
            <summary>
            Checks whether still capture is supported.
            </summary>
        </member>
        <member name="T:Neurotec.Devices.NDeviceType">
            <summary>
            Enumerates device type values.
            </summary>
        </member>
        <member name="F:Neurotec.Devices.NDeviceType.None">
            <summary>
            This value is used for primitive devices (e.g. for parent devices). NDeviceManager has such devices only
            if NDeviceManager was created using <i>Any</i> value for NDeviceType.
            </summary>
        </member>
        <member name="F:Neurotec.Devices.NDeviceType.Camera">
            <summary>
            Indicates that device type is camera.
            </summary>
        </member>
        <member name="F:Neurotec.Devices.NDeviceType.BiometricDevice">
            <summary>
            Indicates FingerScanner and IrisScanner values of this enumeration.
            For instance, if this value is returned by DeviceTypes property, it means that NDeviceManager type is one of the following: FingerScanner or IrisScanner.
            </summary>
        </member>
        <member name="F:Neurotec.Devices.NDeviceType.FScanner">
            <summary>
            Indicates that device is a scanner which can be used for friction ridges (fingers or palms) scanning.
            If FScanner value is passed to on of NDeviceManager constructors, it means that device which supports
            all friction ridge scanning devices will be created.
            </summary>
        </member>
        <member name="F:Neurotec.Devices.NDeviceType.FingerScanner">
            <summary>
            Indicates that device type is fingerprints scanner (FScanner scanner which can also scan fingerprints).
            </summary>
        </member>
        <member name="F:Neurotec.Devices.NDeviceType.PalmScanner">
            <summary>
            Indicates that device type is palmprints scanner (FScanner scanner which can also scan palmprints).
            </summary>
        </member>
        <member name="F:Neurotec.Devices.NDeviceType.IrisScanner">
            <summary>
            Indicates that device type is iris scanner.
            </summary>
        </member>
        <member name="F:Neurotec.Devices.NDeviceType.CaptureDevice">
            <summary>
            Indicates that device type is capture device.
            </summary>
        </member>
        <member name="F:Neurotec.Devices.NDeviceType.Microphone">
            <summary>
            Indicates that device type is microphone.
            </summary>
        </member>
        <member name="F:Neurotec.Devices.NDeviceType.Any">
            <summary>
            This value indicates that NDeviceManager supports all available device types. For instance, when Any value is
            passed to one of NDeviceManager constructors, new NDeviceManager which supports all device modules (cameras,
            fingerprint, iris, palmprint scanners, etc.) is created.
            
            Also this value is returned when NDeviceManager does not recognize device's type (e.g. device's module version is newer
            than NDeviceManager).
            NDeviceManager type can be retrieved using DeviceTypes property.
            </summary>
        </member>
        <member name="T:Neurotec.Devices.NDeviceManagerDeviceEventArgs">
            <summary>
            Contains device manager device event arguements.
            </summary>
        </member>
        <member name="M:Neurotec.Devices.NDeviceManagerDeviceEventArgs.#ctor(Neurotec.Devices.NDevice)">
            <summary>
            Initializes a new instance of NDeviceManagerDeviceEventArgs class.
            </summary>
            <param name="device">The device.</param>
        </member>
        <member name="P:Neurotec.Devices.NDeviceManagerDeviceEventArgs.Device">
            <summary>
            Gets the device.
            </summary>
        </member>
        <member name="T:Neurotec.Devices.NDeviceManager">
            <summary>
            Provides functionality for managing devices.
            </summary>                                  
        </member>
        <member name="M:Neurotec.Devices.NDeviceManager.IsConnectToDeviceSupported(Neurotec.Plugins.NPlugin)">
            <summary>
            Checks whether the specified plugin supports connection to device.
            </summary>
            <param name="plugin">The device plugin.</param>
            <returns>true if connection is supported; else false.</returns>
        </member>
        <member name="M:Neurotec.Devices.NDeviceManager.GetConnectToDeviceParameters(Neurotec.Plugins.NPlugin)">
            <summary>
            Gets connection parameters for a device from a specified plugin.
            </summary>
            <param name="plugin">The device plugin.</param>
            <returns>An array of connection parameters supported by specified plugin.</returns>
        </member>
        <member name="M:Neurotec.Devices.NDeviceManager.#ctor">
            <summary>
            Initializes a new instance of the NDeviceManager class.
            </summary>
        </member>
        <member name="M:Neurotec.Devices.NDeviceManager.#ctor(Neurotec.Devices.NDeviceType)">
            <summary>
            Initializes a new instance of the NDeviceManager class.
            </summary>
            <param name="deviceTypes">Device types supported by
                                      NDeviceManager. If value Any is
                                      specified, new NDeviceManager will
                                      support all device types.</param>
        </member>
        <member name="M:Neurotec.Devices.NDeviceManager.#ctor(Neurotec.Devices.NDeviceType,System.Boolean)">
            <summary>
            Initializes a new instance of the NDeviceManager class.
            </summary>
            <param name="deviceTypes">Device types supported by
                                      NDeviceManager. If value Any is
                                      specified, new NDeviceManager will
                                      support all device types.</param>
            <param name="autoPlug">Bool value for automatic devices
                                   listing. If set to true,
                                   NDeviceManager automatically
                                   plugs\-in devices and adds them to
                                   a list. </param>
        </member>
        <member name="M:Neurotec.Devices.NDeviceManager.#ctor(Neurotec.Devices.NDeviceType,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the NDeviceManager class.
            </summary>
            <param name="deviceTypes">Device types supported by
                                      NDeviceManager. If value Any is
                                      specified, new NDeviceManager will
                                      support all device types.</param>
            <param name="autoPlug">Bool value for automatic devices
                                   listing. If set to true,
                                   NDeviceManager automatically
                                   plugs\-in devices and adds them to
                                   a list. </param>
            <param name="autoUpdate">Bool value for automatic devices
                                     update. If set to true,
                                     NDeviceManager will automatically
                                     update devices list when new
                                     device is added or removed. </param>
        </member>
        <member name="M:Neurotec.Devices.NDeviceManager.#ctor(Neurotec.Devices.NDeviceType,System.Boolean,System.Boolean,System.ComponentModel.ISynchronizeInvoke)">
            <summary>
            Initializes a new instance of the NDeviceManager class.
            </summary>
            <param name="deviceTypes">Device types supported by
                                      NDeviceManager. If value Any is
                                      specified, new NDeviceManager will
                                      support all device types.</param>
            <param name="autoPlug">Bool value for automatic devices
                                   listing. If set to true,
                                   NDeviceManager automatically
                                   plugs\-in devices and adds them to
                                   a list. </param>
            <param name="autoUpdate">Bool value for automatic devices
                                     update. If set to true,
                                     NDeviceManager will automatically
                                     update devices list when new
                                     device is added or removed. </param>
            <param name="synInvoke">An ISynchronizeInvoke object.</param>
        </member>
        <member name="M:Neurotec.Devices.NDeviceManager.#ctor(Neurotec.Devices.NDeviceType,System.Boolean,System.Boolean,System.Threading.SynchronizationContext)">
            <summary>
            Initializes a new instance of the NDeviceManager class.
            </summary>
            <param name="deviceTypes">Device types supported by
                                      NDeviceManager. If value Any is
                                      specified, new NDeviceManager will
                                      support all device types.</param>
            <param name="autoPlug">Bool value for automatic devices
                                   listing. If set to true,
                                   NDeviceManager automatically
                                   plugs\-in devices and adds them to
                                   a list. </param>
            <param name="autoUpdate">Bool value for automatic devices
                                     update. If set to true,
                                     NDeviceManager will automatically
                                     update devices list when new
                                     device is added or removed. </param>
            <param name="synchronizationContext">An SynchronizationContext object.</param>
        </member>
        <member name="M:Neurotec.Devices.NDeviceManager.Refresh">
            <summary>
            Refreshes plugged devices list.
            </summary>
            <remarks>
            When NDeviceManager object was created using false value for
            autoUpdate parameter, user should call this method to refresh
            devices list. When autoUpdate was set to true, Refresh method
            is called automatically by NDeviceManager.
            </remarks>                                                   
        </member>
        <member name="M:Neurotec.Devices.NDeviceManager.ConnectToDevice(Neurotec.Plugins.NPlugin,Neurotec.NPropertyBag)">
            <summary>
            Connects to specified device using NPlugin and NPropertyBag parameters.
            </summary>
            <param name="plugin">Device plugin used to establish a connection.</param>
            <param name="parameters">Properties used for connection.</param>
            <returns>NDevice to which a connection was established.</returns>
        </member>
        <member name="M:Neurotec.Devices.NDeviceManager.ConnectToDevice(System.String,System.String)">
            <summary>
            Connects to a device using specified plugin and connection parameters.
            </summary>
            <param name="plugin">String containing plugin name (e.g. "Media").</param>
            <param name="parameters">String containing camera parameters (e.g. "FileName=C:\video.avi;MediaType=nmtVideo").</param>
            <returns>NDevice to which a connection was established.</returns>
        </member>
        <member name="M:Neurotec.Devices.NDeviceManager.DisconnectFromDevice(Neurotec.Devices.NDevice)">
            <summary>
            Disconnects from specified device.
            </summary>
            <param name="device">The device to disconnect.</param>
        </member>
        <member name="P:Neurotec.Devices.NDeviceManager.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Devices.NDeviceManager.PluginManager">
            <summary>
            Gets the plugin manager of the current object.
            </summary>
        </member>
        <member name="P:Neurotec.Devices.NDeviceManager.DeviceTypes">
            <summary>
            Gets supported device types by NDeviceManager.
            </summary>
            <value>
            Supported device types.
            </value>                                      
        </member>
        <member name="P:Neurotec.Devices.NDeviceManager.AutoUpdate">
            <summary>
            Checks whether NDeviceManager automatically updates devices
            list.
            </summary>
            <value>
            true, if NDevice manager automatically updates devices list.
            otherwise false. 
            </value>                                                    
        </member>
        <member name="P:Neurotec.Devices.NDeviceManager.Devices">
            <summary>
            Gets devices collection of the current NDeviceManager object.
            </summary>
            <value>
            Device collection containing all devices of the current
            NDeviceManager. 
            </value>                                                     
        </member>
        <member name="E:Neurotec.Devices.NDeviceManager.DevicesChanging">
            <summary>
            Represents the method to handle device changing event. 
            </summary>
        </member>
        <member name="E:Neurotec.Devices.NDeviceManager.DevicesChanged">
            <summary>
            Represents the method to handle device changed event. 
            </summary>
        </member>
        <member name="E:Neurotec.Devices.NDeviceManager.DeviceAdded">
            <summary>
            Represents the method to handle device added event. 
            </summary>                                          
        </member>
        <member name="E:Neurotec.Devices.NDeviceManager.DeviceRemoved">
            <summary>
            Represents the method to handle device removed event. 
            </summary>                                            
        </member>
        <member name="E:Neurotec.Devices.NDeviceManager.DevicesRefreshed">
            <summary>
            Represents the method to handle devices refreshed event. 
            </summary>
        </member>
        <member name="T:Neurotec.Devices.NDeviceManager.DeviceCollection">
            <summary>
            Holds all devices data of the current NDeviceManager object. 
            </summary>                                                   
        </member>
        <member name="M:Neurotec.Devices.NDeviceManager.DeviceCollection.IndexOf(System.String)">
            <summary>
            Retrieves device's index in a collection by specified device
            Id.
            </summary>
            <param name="id">Device identifier. </param>
            <returns>
            Device index in the collection. 
            </returns>                                                  
        </member>
        <member name="P:Neurotec.Devices.NDeviceManager.DeviceCollection.Item(System.String)">
            <summary>
            Gets NDevice object specified by Id.
            </summary>
            <param name="id">Device Id. </param>
            <returns>
            NDevice object. 
            </returns>                          
        </member>
        <member name="T:Neurotec.DeviceManager.NDeviceManager">
            <summary>
            Provides functions for device library information management.
            </summary>
        </member>
        <member name="M:Neurotec.DeviceManager.NDeviceManager.GetInfo">
            <summary>
            Gets NDevices library info.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Neurotec.Devices.NDevices">
            <summary>
            Provides functionality for retrieving information about
            NDevices library. 
            </summary>                                             
        </member>
        <member name="F:Neurotec.Devices.NDevices.DllName">
            <summary>
            NDevices library's Dll name.
            </summary>                   
        </member>
        <member name="M:Neurotec.Devices.NDevices.GetInfo">
            <summary>
            Gets information about the library.
            </summary>
            <returns>
            NLibraryInfo structure with library information.
            </returns>                                      
        </member>
        <member name="P:Neurotec.Devices.NDevices.NativeModule">
            <summary>
            Defines the native module of the object.
            </summary>
        </member>
        <member name="T:Neurotec.Devices.NFingerScanner">
            <summary>
            Represents fingerprints scanner.
            </summary>                      
        </member>
        <member name="T:Neurotec.Devices.NFScanner">
            <summary>
            Represents fingerprints and palmprints scanning device.
            </summary>
        </member>
        <member name="M:Neurotec.Devices.NFScanner.GetSupportedImpressionTypes">
            <summary>
            Gets impression types supported by the specified device.
            </summary>
            <returns>
            Array of impression types supported by the current device.
            </returns>                                                
        </member>
        <member name="M:Neurotec.Devices.NFScanner.GetSupportedPositions">
            <summary>
            Gets fingerprint positions supported by the specified device.
            </summary>
            <returns>
            Array of fingerprint positions supported by the current
            device.
            </returns>                                                   
        </member>
        <member name="M:Neurotec.Devices.NFScanner.Capture">
            <summary>
            Captures fingerprint or palmprint image.
            </summary>
            <returns>
            Fingerprint or palmprint image.
            </returns>                              
        </member>
        <member name="M:Neurotec.Devices.NFScanner.Capture(System.TimeSpan)">
            <summary>
            Captures fingerprint or palmprint image.
            </summary>
            <param name="timeout">Maximum time to wait for device
                                  response (to start capturing).</param>
            <returns>
            Captured fingerprint or palmprint image. 
            </returns>                                                  
        </member>
        <member name="M:Neurotec.Devices.NFScanner.Capture(System.Int32)">
            <summary>
            Captures fingerprint or palmprint image.
            </summary>
            <param name="timeoutMilliseconds">Maximum time to wait for
                                              device response (to start
                                              capturing).</param>
            <returns>
            Captured fingerprint or palmprint image. 
            </returns>                                                 
        </member>
        <member name="M:Neurotec.Devices.NFScanner.Capture(Neurotec.Biometrics.NFImpressionType,Neurotec.Biometrics.NFPosition)">
            <summary>
            Captures fingerprint or palmprint image.
            </summary>
            <param name="impressionType">Fingerprint impression type.</param>
            <param name="position">Fingerprint position value.</param>
            <returns>
            Captured fingerprint or palmprint image. 
            </returns>                                                       
        </member>
        <member name="M:Neurotec.Devices.NFScanner.Capture(Neurotec.Biometrics.NFImpressionType,Neurotec.Biometrics.NFPosition,System.TimeSpan)">
            <summary>
            Captures fingerprint or palmprint image.
            </summary>
            <param name="impressionType">Fingerprint impression type.</param>
            <param name="position">Fingerprint position value.</param>
            <param name="timeout">Maximum time to wait for device
                                  response (to start capturing).</param>
            <returns>
            Captured fingerprint or palmprint image. 
            </returns>                                                       
        </member>
        <member name="M:Neurotec.Devices.NFScanner.Capture(Neurotec.Biometrics.NFImpressionType,Neurotec.Biometrics.NFPosition,System.Int32)">
            <summary>
            Captures fingerprint or palmprint image.
            </summary>
            <param name="impressionType">Fingerprint impression
                                         type.</param>
            <param name="position">Fingerprint position
                                   value.</param>
            <param name="timeoutMilliseconds">Maximum time (milliseconds)
                                              to wait for device
                                              response (to start
                                              capturing).</param>
            <returns>
            Captured fingerprint or palmprint image. 
            </returns>                                                   
        </member>
        <member name="M:Neurotec.Devices.NFScanner.Capture(Neurotec.Biometrics.NFImpressionType,Neurotec.Biometrics.NFPosition,Neurotec.Biometrics.NFPosition[],System.Boolean,System.Int32,Neurotec.Biometrics.NBiometricStatus@)">
            <summary>
            Captures fingerprint or palmprint image.
            </summary>
            <param name="impressionType">Fingerprint impression
                                         type.</param>
            <param name="position">Fingerprint position
                                   value.</param>
            <param name="missingPositions">Array of missing
                                           fingerprint positions (e.g.
                                           amputated) in scanned
                                           image.</param>
            <param name="automatic">Value which allows the
                                    scanner to decide about
                                    the image quality. When
                                    true is set scanning
                                    device checks image
                                    quality and decides when
                                    this image should be
                                    returned for a user. When
                                    false is set user can can
                                    control image quality and
                                    capturing process himself.
                                    In this case Preview event
                                    should be used to change
                                    device status (e.g. when
                                    image quality is
                                    acceptable and scanner
                                    operator press stop
                                    scanning key, nbsOk value
                                    for NBiometricStatus can
                                    be set).<para></para><b>Default</b>\:
                                    It is recommended to use
                                    true value.</param>
            <param name="timeoutMilliseconds">Maximum time
                                              (milliseconds) to wait for
                                              device response (to start
                                              capturing).</param>
            <param name="status">Biometric status of
                                 scanning device.</param>
            <returns>
            Captured fingerprint or palmprint image. 
            </returns>                                                   
        </member>
        <member name="M:Neurotec.Devices.NFScanner.Capture(Neurotec.Biometrics.NFImpressionType,Neurotec.Biometrics.NFPosition,Neurotec.Biometrics.NFPosition[],System.Boolean,System.Int32,Neurotec.Biometrics.NBiometricStatus@,Neurotec.Biometrics.NFAttributes[]@)">
            <summary>
            Captures fingerprint or palmprint image.
            </summary>
            <param name="impressionType">Fingerprint impression
                                         type.</param>
            <param name="position">Fingerprint position
                                   value.</param>
            <param name="missingPositions">Array of missing
                                           fingerprint positions (e.g.
                                           amputated) in scanned
                                           image.</param>
            <param name="automatic">Value which allows the
                                    scanner to decide about
                                    the image quality. When
                                    true is set scanning
                                    device checks image
                                    quality and decides when
                                    this image should be
                                    returned for a user. When
                                    false is set user can can
                                    control image quality and
                                    capturing process himself.
                                    In this case Preview event
                                    should be used to change
                                    device status (e.g. when
                                    image quality is
                                    acceptable and scanner
                                    operator press stop
                                    scanning key, nbsOk value
                                    for NBiometricStatus can
                                    be set).<para></para><b>Default</b>\:
                                    It is recommended to use
                                    true value.</param>
            <param name="timeoutMilliseconds">Maximum time
                                              (milliseconds) to wait for
                                              device response (to start
                                              capturing).</param>
            <param name="status">[out] Biometric status of
                                 scanning device.</param>
            <param name="objects">[out] Array which contains
                                  information about objects
                                  (fingerprints, palmprint
                                  parts) in scanned image.
                                  The same objects are also
                                  returned with Preview
                                  event.</param>
            <returns>
            Captured fingerprint or palmprint image. 
            </returns>                                                   
        </member>
        <member name="P:Neurotec.Devices.NFScanner.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="E:Neurotec.Devices.NFScanner.Preview">
            <summary>
            Adds or removes image preview event handler.
            </summary>
            <remarks>
            This event is invoked when scanning device receives
            fingerprint or palmprint image and can display it to user. 
            </remarks>                                                 
        </member>
        <member name="P:Neurotec.Devices.NFingerScanner.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="T:Neurotec.Devices.NFScannerPreviewEventArgs">
            <summary>
            Contains image preview event arguments.
            </summary>                             
        </member>
        <member name="M:Neurotec.Devices.NFScannerPreviewEventArgs.#ctor(Neurotec.Images.NImage,Neurotec.Biometrics.NBiometricStatus,System.Collections.Generic.IList{Neurotec.Biometrics.NFAttributes})">
            <summary>
            Initializes a new instance of NFScannerPreviewEventArgs class.
            </summary>
            <param name="image">The preview image.</param>
            <param name="status">The biometric status.</param>
            <param name="objects">List of attributes.</param>
        </member>
        <member name="M:Neurotec.Devices.NFScannerPreviewEventArgs.#ctor(Neurotec.Images.NImage,Neurotec.Biometrics.NBiometricStatus,Neurotec.Biometrics.NFAttributes[])">
            <summary>
            Initializes a new instance of NFScannerPreviewEventArgs class. 
            </summary>
            <param name="image">The preview image.</param>
            <param name="status">The biometric status.</param>
            <param name="objects">Array of attributes.</param>
        </member>
        <member name="P:Neurotec.Devices.NFScannerPreviewEventArgs.Image">
            <summary>
            Gets NImage which was scanned by a device.
            </summary>
            <value>
            NImage type image.
            </value>                                  
        </member>
        <member name="P:Neurotec.Devices.NFScannerPreviewEventArgs.Status">
            <summary>
            Gets device biometric status.
            </summary>
            <value>
            Device biometric status.
            </value>                     
        </member>
        <member name="P:Neurotec.Devices.NFScannerPreviewEventArgs.Objects">
            <summary>
            Gets a list of NFAttributes objects.
            </summary>
        </member>
        <member name="T:Neurotec.Devices.NIrisScannerPreviewEventArgs">
            <summary>
            Contains image preview event arguments. 
            </summary>                              
        </member>
        <member name="M:Neurotec.Devices.NIrisScannerPreviewEventArgs.#ctor(Neurotec.Images.NImage,Neurotec.Biometrics.NBiometricStatus,System.Collections.Generic.IList{Neurotec.Biometrics.NEAttributes})">
            <summary>
            Initializes a new instance of NIrisScannerPreviewEventArgs class.
            </summary>
            <param name="image">The preview image.</param>
            <param name="status">The biometric status.</param>
            <param name="objects">Attribute list.</param>
        </member>
        <member name="M:Neurotec.Devices.NIrisScannerPreviewEventArgs.#ctor(Neurotec.Images.NImage,Neurotec.Biometrics.NBiometricStatus,Neurotec.Biometrics.NEAttributes[])">
            <summary>
            Initializes a new instance of NIrisScannerPreviewEventArgs class.
            </summary>
            <param name="image">The preview image.</param>
            <param name="status">The biometric status.</param>
            <param name="objects">Attribute array.</param>
        </member>
        <member name="P:Neurotec.Devices.NIrisScannerPreviewEventArgs.Image">
            <summary>
            Gets NImage which was scanned by a device.
            </summary>
            <value>
            NImage type image. 
            </value>                                  
        </member>
        <member name="P:Neurotec.Devices.NIrisScannerPreviewEventArgs.Status">
            <summary>
            Gets device biometric status.
            </summary>
            <value>
            Device biometric status. 
            </value>                     
        </member>
        <member name="P:Neurotec.Devices.NIrisScannerPreviewEventArgs.Objects">
            <summary>
            Gets the list of attributes.
            </summary>
        </member>
        <member name="T:Neurotec.Devices.NIrisScanner">
            <summary>
            Represents irises scanning device. 
            </summary>                         
        </member>
        <member name="M:Neurotec.Devices.NIrisScanner.GetSupportedPositions">
            <summary>
            Gets iris positions supported by the specified device.
            </summary>
            <returns>
            Array of iris positions supported by the current device. 
            </returns>                                               
        </member>
        <member name="M:Neurotec.Devices.NIrisScanner.Capture(Neurotec.Biometrics.NEPosition)">
            <summary>
            Captures iris image.
            </summary>
            <param name="position">Iris position value.</param>
            <returns>
            Captured iris image. 
            </returns>                                         
        </member>
        <member name="M:Neurotec.Devices.NIrisScanner.Capture(Neurotec.Biometrics.NEPosition,System.TimeSpan)">
            <summary>
            Captures iris image.
            </summary>
            <param name="position">Iris position value.</param>
            <param name="timeout">Maximum time to wait for device
                                  response (to start capturing).</param>
            <returns>
            Captured iris image. 
            </returns>                                                  
        </member>
        <member name="M:Neurotec.Devices.NIrisScanner.Capture(Neurotec.Biometrics.NEPosition,System.Int32)">
            <summary>
            Captures iris image.
            </summary>
            <param name="position">Iris position value.</param>
            <param name="timeoutMilliseconds">Maximum time to wait for
                                              device response (to start
                                              capturing).</param>
            <returns>
            Captured iris image. 
            </returns>                                                 
        </member>
        <member name="M:Neurotec.Devices.NIrisScanner.Capture(Neurotec.Biometrics.NEPosition,Neurotec.Biometrics.NEPosition[],System.Boolean,System.Int32,Neurotec.Biometrics.NBiometricStatus@)">
            <summary>
            Captures iris image.
            </summary>
            <param name="position">Iris position value.</param>
            <param name="missingPositions">Array of missing iris
                                           positions in scanned
                                           image.</param>
            <param name="automatic">Value which allows the
                                    scanner to decide about
                                    the image quality. When
                                    true is set scanning
                                    device checks image
                                    quality and decides when
                                    this image should be
                                    returned for a user. When
                                    false is set user can can
                                    control image quality and
                                    capturing process himself.
                                    In this case Preview event
                                    should be used to change
                                    device status (e.g. when
                                    image quality is
                                    acceptable and scanner
                                    operator press stop
                                    scanning key, nbsOk value
                                    for NBiometricStatus can
                                    be set).<para></para><b>Default</b>\:
                                    It is recommended to use
                                    true value.</param>
            <param name="timeoutMilliseconds">Maximum time
                                              (milliseconds) to wait for
                                              device response (to start
                                              capturing).</param>
            <param name="status">[out] Biometric status of
                                 scanning device.</param>
            <returns>
            Captured iris image. 
            </returns>                                                   
        </member>
        <member name="M:Neurotec.Devices.NIrisScanner.Capture(Neurotec.Biometrics.NEPosition,Neurotec.Biometrics.NEPosition[],System.Boolean,System.Int32,Neurotec.Biometrics.NBiometricStatus@,Neurotec.Biometrics.NEAttributes[]@)">
            <summary>
            Captures iris image.
            </summary>
            <param name="position">Iris position value.</param>
            <param name="missingPositions">Array of missing iris
                                           positions in scanned
                                           image.</param>
            <param name="automatic">Value which allows the
                                    scanner to decide about
                                    the image quality. When
                                    true is set scanning
                                    device checks image
                                    quality and decides when
                                    this image should be
                                    returned for a user. When
                                    false is set user can can
                                    control image quality and
                                    capturing process himself.
                                    In this case Preview event
                                    should be used to change
                                    device status (e.g. when
                                    image quality is
                                    acceptable and scanner
                                    operator press stop
                                    scanning key, nbsOk value
                                    for NBiometricStatus can
                                    be set).<para></para><b>Default</b>\:
                                    It is recommended to use
                                    true value.</param>
            <param name="timeoutMilliseconds">Maximum time
                                              (milliseconds) to wait for
                                              device response (to start
                                              capturing).</param>
            <param name="status">[out] Biometric status of
                                 scanning device.</param>
            <param name="objects">[out] Array which contains
                                  information about objects in
                                  scanned image. The same
                                  objects are also returned
                                  with Preview event.</param>
            <returns>
            Captured iris image. 
            </returns>                                                   
        </member>
        <member name="P:Neurotec.Devices.NIrisScanner.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="E:Neurotec.Devices.NIrisScanner.Preview">
            <summary>
            Adds or removes image preview event handler.
            </summary>
            <remarks>
            This event is invoked when scanning device receives iris
            image and can display it to user. 
            </remarks>                                              
        </member>
        <member name="T:Neurotec.Devices.NMicrophone">
            <summary>
            Provides methods for working with sound recording devices
            (microphones).
            </summary>                                               
        </member>
        <member name="M:Neurotec.Devices.NMicrophone.GetSoundSample">
            <summary>
            Gets sound sample from the recording device.
            </summary>
            <returns>
            Sound buffer object which receives sound sample from
            recording device. 
            </returns>                                          
        </member>
        <member name="P:Neurotec.Devices.NMicrophone.NativeType">
            <summary>
            Defines the native type.
            </summary>
        </member>
        <member name="T:Neurotec.Devices.NPalmScanner">
            <summary>
            Represents palmprints scanner.
            </summary>                    
        </member>
        <member name="P:Neurotec.Devices.NPalmScanner.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
    </members>
</doc>
