<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Neurotec.Biometrics</name>
    </assembly>
    <members>
        <member name="T:Neurotec.Biometrics.NemSpeed">
            <summary>Specifies iris matching speed.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NemSpeed.Low">
            <summary>
            Low matching speed (faster but less accurate).
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NemSpeed.Medium">
            <summary>
            Medium matching speed (slower but more accurate).
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NemSpeed.High">
            <summary>
            High matching speed (slower but more accurate).
            </summary>
        </member>
        <member name="T:Neurotec.Biometrics.NEMatcher">
            <summary>
            Provides functionality for NETemplate matching.
            </summary>
            Note
            NEMatcher is obsolete. Use NMatcher instead.   
        </member>
        <member name="F:Neurotec.Biometrics.NEMatcher.ParameterMatchingThreshold">
            <summary>
            Template matching threshold.
            </summary>                  
        </member>
        <member name="F:Neurotec.Biometrics.NEMatcher.ParameterMatchingSpeed">
            <summary>
            Matching speed parameter of NEMatcher object.
            </summary>                                   
        </member>
        <member name="F:Neurotec.Biometrics.NEMatcher.ParameterMaximalRotation">
            <summary>
            Identifier specifying modulus of maximal rotation allowed
            between two matched NERecords parameter of type byte.
            Parameter value is specified in 180/128 degrees units and
            cannot be greater than 128 (180 degrees).
            </summary>                                               
        </member>
        <member name="M:Neurotec.Biometrics.NEMatcher.#ctor">
            <summary>
            Initializes a new instance of the NEMatcher class.
            </summary>                                        
        </member>
        <member name="M:Neurotec.Biometrics.NEMatcher.Verify(System.IntPtr,System.Int32,System.IntPtr,System.Int32)">
            <summary>
            Compares two templates.
            </summary>
            <param name="template1">Pointer to memory buffer
                                    containing first record (NERecord).</param>
            <param name="template1Size">First template size in bytes.</param>
            <param name="template2">Pointer to memory buffer
                                    containing second record (NERecord).</param>
            <param name="template2Size">Second template size in bytes.</param>
            <returns>
            Matching score. 
            </returns>                                                          
        </member>
        <member name="M:Neurotec.Biometrics.NEMatcher.Verify(System.IntPtr,System.Int32,System.IntPtr,System.Int32,Neurotec.Biometrics.NemMatchDetails@)">
            <summary>
            Compares two templates.
            </summary>
            <param name="template1">Pointer to memory buffer
                                    containing first record (NERecord).</param>
            <param name="template1Size">First template size in bytes.</param>
            <param name="template2">Pointer to memory buffer
                                    containing second record (NERecord).</param>
            <param name="template2Size">Second template size in bytes.</param>
            <param name="matchDetails">Matching details.</param>
            <returns>
            Matching score. 
            </returns>                                                          
        </member>
        <member name="M:Neurotec.Biometrics.NEMatcher.Verify(System.Byte[],System.Byte[])">
            <summary>
            Compares two templates.
            </summary>
            <param name="template1">Array of bytes containing first record
                                    (NERecord).</param>
            <param name="template2">Array of bytes containing second record
                                    (NERecord).</param>
            <returns>
            Matching score. 
            </returns>                                                     
        </member>
        <member name="M:Neurotec.Biometrics.NEMatcher.Verify(System.Byte[],System.Byte[],Neurotec.Biometrics.NemMatchDetails@)">
            <summary>
            Compares two templates.
            </summary>
            <param name="template1">Array of bytes containing first record
                                    (NERecord).</param>
            <param name="template2">Array of bytes containing second record
                                    (NERecord).</param>
            <param name="matchDetails">Matching details.</param>
            <returns>
            Matching score. 
            </returns>                                                     
        </member>
        <member name="M:Neurotec.Biometrics.NEMatcher.IdentifyStart(System.IntPtr,System.Int32)">
            <summary>
            Starts identification process.
            </summary>
            <param name="template">Pointer to memory buffer
                                   containing NERecord.</param>
            <param name="templateSize">Template size in bytes.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NEMatcher.IdentifyStart(System.IntPtr,System.Int32,Neurotec.Biometrics.NemMatchDetails@)">
            <summary>
            Starts identification process.
            </summary>
            <param name="template">Pointer to memory buffer
                                   containing NERecord.</param>
            <param name="templateSize">Template size in bytes.</param>
            <param name="matchDetails">Matching details.</param>      
        </member>
        <member name="M:Neurotec.Biometrics.NEMatcher.IdentifyStart(System.Byte[])">
            <summary>
            Starts identification process.
            </summary>
            <param name="template">Array of bytes containing containing NERecord.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NEMatcher.IdentifyStart(System.Byte[],Neurotec.Biometrics.NemMatchDetails@)">
            <summary>
            Starts identification process.
            </summary>
            <param name="template">Array of bytes containing
                                   containing NERecord.</param>
            <param name="matchDetails">Matching details.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NEMatcher.IdentifyNext(System.IntPtr,System.Int32)">
            <summary>
            Compares specified template against the one specified in the
            IdentifyStart function.
            </summary>
            <param name="template">Pointer to memory buffer
                                   containing NERecord.</param>
            <param name="templateSize">Template size in bytes.</param>
            <returns>
            Matching score
            </returns>                                                  
        </member>
        <member name="M:Neurotec.Biometrics.NEMatcher.IdentifyNext(System.IntPtr,System.Int32,Neurotec.Biometrics.NemMatchDetails)">
            <summary>
            Compares specified template against the one specified in the
            IdentifyStart function.
            </summary>
            <param name="template">Pointer to memory buffer
                                   containing NERecord.</param>
            <param name="templateSize">Template size in bytes.</param>
            <param name="matchDetails">Matching details.</param>
            <returns>
            Matching score
            </returns>                                                  
        </member>
        <member name="M:Neurotec.Biometrics.NEMatcher.IdentifyNext(System.Byte[])">
            <summary>
            Compares specified template against the one specified in the
            IdentifyStart function.
            </summary>
            <param name="template">Array of bytes containing NERecord.</param>
            <returns>
            Matching score
            </returns>                                                        
        </member>
        <member name="M:Neurotec.Biometrics.NEMatcher.IdentifyNext(System.Byte[],Neurotec.Biometrics.NemMatchDetails)">
            <summary>
            Compares specified template against the one specified in the
            IdentifyStart function.
            </summary>
            <param name="template">Array of bytes containing NERecord.</param>
            <param name="matchDetails">Matching details.</param>
            <returns>
            Matching score
            </returns>                                                        
        </member>
        <member name="M:Neurotec.Biometrics.NEMatcher.IdentifyEnd">
            <summary>
            Ends identification process.
            </summary>                  
        </member>
        <member name="P:Neurotec.Biometrics.NEMatcher.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NEMatcher.NemSpeedNativeType">
            <summary>
            Defines the native type of the iris matcher speed.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NEMatcher.MatchingThreshold">
            <summary>
            Matching threshold property of NEMatcher object.
            </summary>
            <returns>
            Matching threshold property of NEMatcher object.
            </returns>                                      
        </member>
        <member name="P:Neurotec.Biometrics.NEMatcher.MatchingSpeed">
            <summary>
            Matching speed property of NEMatcher object.
            </summary>
            <returns>Matching speed property of NEMatcher object.</returns>
        </member>
        <member name="P:Neurotec.Biometrics.NEMatcher.MaximalRotation">
            <summary>
            Gets or sets the maximal rotation allowed
            between two matched irises.
            It is specified in 180/128 degrees units and
            cannot be greater than 128 (180 degrees).
            </summary>
            <returns>
            The maximal rotation allowed between two matched
            irises.
            </returns>                                      
        </member>
        <member name="T:Neurotec.Biometrics.NemMatchDetails">
            <summary>
            Stores matching details of two templates.
            </summary>                               
        </member>
        <member name="M:Neurotec.Biometrics.NemMatchDetails.Deserialize(System.IntPtr,System.Int32)">
            <summary>
            Deserializes matching details.
            </summary>
            <param name="pBuffer">Pointer to buffer containing
                                 serialized matching details.</param>
            <param name="bufferSize">Size of the buffer.</param>
            <returns>NemMatchDetails object.</returns>   
        </member>
        <member name="M:Neurotec.Biometrics.NemMatchDetails.Deserialize(System.Byte[])">
            <summary>
            Deserializes matching details.
            </summary>
            <param name="buffer">An array of bytes containing serialized
                                 matching details.</param>
            <returns>NemMatchDetails object.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NemMatchDetails.Deserialize(Neurotec.IO.NBuffer)">
            <summary>
            Deserializes matching details.
            </summary>
            <param name="buffer">NBuffer containing serialized matching details.</param>
            <returns>NemMatchDetails object.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NemMatchDetails.Deserialize(System.IO.Stream)">
            <summary>
            Deserializes matching details.
            </summary>
            <param name="stream">Stream object containing serialized
                                 matching details.</param>
            <returns>NemMatchDetails object.</returns>  
        </member>
        <member name="M:Neurotec.Biometrics.NemMatchDetails.Serialize">
            <summary>
            Serializes matching details.
            </summary>
            <returns>Memory buffer containing serialized matching details.</returns>         
        </member>
        <member name="M:Neurotec.Biometrics.NemMatchDetails.Serialize(System.IO.Stream)">
            <summary>
            Serializes matching details.
            </summary>
            <returns>Memory buffer containing serialized matching details.</returns>
            <param name="stream">Stream object to which serialize
                                 matching details.</param>           
        </member>
        <member name="P:Neurotec.Biometrics.NemMatchDetails.Score">
            <summary>
            Matching score.
            </summary>     
        </member>
        <member name="T:Neurotec.Biometrics.NemMatchDetails.MatchDetailsData">
            <summary>
            Stores matching details data. 
            </summary>                    
        </member>
        <member name="F:Neurotec.Biometrics.NemMatchDetails.MatchDetailsData.Score">
            <summary>
            Matching score.
            </summary>     
        </member>
        <member name="T:Neurotec.Biometrics.NesMatcher">
            <summary>
            Provides functionality for multiple NETemplate matching.
            </summary>
            Note
            This class and all methods in this class are obsolete. Use
            NMatcher instead.                                         
        </member>
        <member name="F:Neurotec.Biometrics.NesMatcher.PartNone">
            <summary>
            Identifier specifying that retrieving or setting parameter
            for NesMatcher.
            </summary>                                                
        </member>
        <member name="F:Neurotec.Biometrics.NesMatcher.PartNem">
            <summary>
            Identifier specifying that retrieving or setting parameter
            for NEMatcher contained in NesMatcher.
            </summary>                                                
        </member>
        <member name="F:Neurotec.Biometrics.NesMatcher.ParameterMatchingThreshold">
            <summary>
            Identifier specifying matching threshold (biggest allowed
            FAR) parameter of type int. Parameter value is equal to - 12
            \* log10(FAR) and must be not less than zero (for example, 48
            for FAR = 0.01%).
            </summary>                                                   
        </member>
        <member name="M:Neurotec.Biometrics.NesMatcher.#ctor">
            <summary>
            Initializes a new instance of the NesMatcher class.
            </summary>                                         
        </member>
        <member name="M:Neurotec.Biometrics.NesMatcher.Verify(System.IntPtr,System.Int32,System.IntPtr,System.Int32)">
            <summary>
            Verifies two NETemplate.
            </summary>
            <param name="template1">Pointer to memory buffer
                                    containing the NETemplate or
                                    NERecord.</param>
            <param name="template1Size">Template size.</param>
            <param name="template2">Pointer to memory buffer
                                    containing the NETemplate or
                                    NERecord.</param>
            <param name="template2Size">Template size.</param>
            <returns>
            Matching score.
            </returns>                                          
        </member>
        <member name="M:Neurotec.Biometrics.NesMatcher.Verify(System.IntPtr,System.Int32,System.IntPtr,System.Int32,Neurotec.Biometrics.NesmMatchDetails@)">
            <summary>
            Verifies two NETemplate.
            </summary>
            <param name="template1">Pointer to memory buffer
                                    containing the NETemplate or
                                    NERecord.</param>
            <param name="template1Size">Template size.</param>
            <param name="template2">Pointer to memory buffer
                                    containing the NETemplate or
                                    NERecord.</param>
            <param name="template2Size">Template size.</param>
            <param name="matchDetails">Matching details of the
                                       templates.</param>
            <returns>
            Matching score.
            </returns>                                          
        </member>
        <member name="M:Neurotec.Biometrics.NesMatcher.Verify(System.Byte[],System.Byte[])">
            <summary>
            Verifies two NETemplate.
            </summary>
            <param name="template1">First NETemplate or NERecord.</param>
            <param name="template2">Second NETemplate or NERecord.</param>
            <returns>
            Matching score.
            </returns>                                                    
        </member>
        <member name="M:Neurotec.Biometrics.NesMatcher.Verify(System.Byte[],System.Byte[],Neurotec.Biometrics.NesmMatchDetails@)">
            <summary>
            Verifies two NETemplate.
            </summary>
            <param name="template1">First NETemplate or NERecord.</param>
            <param name="template2">Second NETemplate or NERecord.</param>
            <param name="matchDetails">Matcing details of the templates.</param>
            <returns>
            Matching score.
            </returns>                                                          
        </member>
        <member name="M:Neurotec.Biometrics.NesMatcher.IdentifyStart(System.IntPtr,System.Int32)">
            <summary>
            Starts identification process.
            </summary>
            <param name="template">Pointer to memory buffer
                                   containing NERecord or NETemplate,
                                   which will be later compared
                                   against templates in the
                                   database.</param>
            <param name="templateSize">Size of the template.</param> 
        </member>
        <member name="M:Neurotec.Biometrics.NesMatcher.IdentifyStart(System.IntPtr,System.Int32,Neurotec.Biometrics.NesmMatchDetails@)">
            <summary>
            Starts identification process.
            </summary>
            <param name="template">Pointer to memory buffer
                                   containing NERecord or NETemplate,
                                   which will be later compared
                                   against templates in the
                                   database.</param>
            <param name="templateSize">Size of the template.</param>
            <param name="matchDetails">Matching details object.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NesMatcher.IdentifyStart(System.Byte[])">
            <summary>
            Starts identification process.
            </summary>
            <param name="template">NERecord or NETemplate which will be
                                   later compared against templates in
                                   the database. </param>              
        </member>
        <member name="M:Neurotec.Biometrics.NesMatcher.IdentifyStart(System.Byte[],Neurotec.Biometrics.NesmMatchDetails@)">
            <summary>
            Starts identification process.
            </summary>
            <param name="template">NERecord or NETemplate which will
                                   be later compared against
                                   templates in the database. </param>
            <param name="matchDetails">Matching details object.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NesMatcher.IdentifyNext(System.IntPtr,System.Int32)">
            <summary>
            Compares the specified NETemplate with one identification was
            started with.
            </summary>
            <param name="template">Pointer to memory buffer
                                   containing NERecord or NETemplate
                                   which will be compared with the
                                   one specified in the
                                   IdentifyStart function.</param>
            <param name="templateSize">Size of the template.</param>
            <returns>
            Matching score.
            </returns>                                                   
        </member>
        <member name="M:Neurotec.Biometrics.NesMatcher.IdentifyNext(System.IntPtr,System.Int32,Neurotec.Biometrics.NesmMatchDetails)">
            <summary>
            Compares the specified NETemplate with one identification was
            started with.
            </summary>
            <param name="template">Pointer to memory buffer
                                   containing NERecord or NETemplate
                                   which will be compared with the
                                   one specified in the
                                   IdentifyStart function.</param>
            <param name="templateSize">Size of the template.</param>
            <param name="matchDetails">Template matching details.</param>
            <returns>
            Matching score.
            </returns>                                                   
        </member>
        <member name="M:Neurotec.Biometrics.NesMatcher.IdentifyNext(System.Byte[])">
            <summary>
            Compares the specified NETemplate with one identification was
            started with.
            </summary>
            <param name="template">NERecord or NETemplate which will be
                                   compared with the one specified in
                                   the IdentifyStart function.</param>
            <returns>
            Matching score.
            </returns>                                                   
        </member>
        <member name="M:Neurotec.Biometrics.NesMatcher.IdentifyNext(System.Byte[],Neurotec.Biometrics.NesmMatchDetails)">
            <summary>
            Compares the specified NETemplate with one identification was
            started with.
            </summary>
            <param name="template">NERecord or NETemplate which will
                                   be compared with the one
                                   specified in the IdentifyStart
                                   function.</param>
            <param name="matchDetails">Template matching details.</param>
            <returns>
            Matching score.
            </returns>                                                   
        </member>
        <member name="M:Neurotec.Biometrics.NesMatcher.IdentifyEnd">
            <summary>
            Ends identification process.
            </summary>                  
        </member>
        <member name="P:Neurotec.Biometrics.NesMatcher.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NesMatcher.MatchingThreshold">
            <summary>
            Matching threshold properties of NesMatcher object.
            </summary>
            <returns>Matching threshold properties of the NesMatcher object.</returns>
        </member>
        <member name="P:Neurotec.Biometrics.NesMatcher.MatchingSpeed">
            <summary>
            Matching speed property of NesMatcher.
            </summary>
            <returns>Matching speed property of the NesMatcher object.</returns>   
        </member>
        <member name="T:Neurotec.Biometrics.NesmIrisMatchDetails">
            <summary>
            Iris matching result details.
            </summary>                   
        </member>
        <member name="P:Neurotec.Biometrics.NesmIrisMatchDetails.Score">
            <summary>
            Matched iris similarity score.
            </summary>                    
        </member>
        <member name="P:Neurotec.Biometrics.NesmIrisMatchDetails.MatchedIndex">
            <summary>
            Matched iris index.
            </summary>
            <returns>Matched iris from iris collection index.</returns>
        </member>
        <member name="P:Neurotec.Biometrics.NesmIrisMatchDetails.NemMatchDetails">
            <summary>
            Gets structure NemMatchDetails of matching details of two
            templates.
            </summary>
            <returns>
            Structure of NemMatchDetails.
            </returns>                                               
        </member>
        <member name="T:Neurotec.Biometrics.NesmMatchDetails">
            <summary>
            Iris matching using NesMatcher result details.
            </summary>                                    
        </member>
        <member name="M:Neurotec.Biometrics.NesmMatchDetails.Deserialize(System.IntPtr,System.Int32)">
            <summary>
            Deserializes matching details.
            </summary>
            <param name="pBuffer">Memory buffer containing
                                 serialized matching details.</param>
            <param name="bufferSize">Memory buffer size in bytes.</param>
            <returns>NesmMatchingDetails object.</returns>     
        </member>
        <member name="M:Neurotec.Biometrics.NesmMatchDetails.Deserialize(System.Byte[])">
            <summary>
            Deserializes matching details.
            </summary>
            <param name="buffer">An array of bytes containing serialized
                                 matching details.</param>
            <returns>NesmMatchingDetails object.</returns>   
        </member>
        <member name="M:Neurotec.Biometrics.NesmMatchDetails.Deserialize(Neurotec.IO.NBuffer)">
            <summary>
            Deserializes matching details.
            </summary>
            <param name="buffer">NBuffer containing serialized matching details.</param>
            <returns>NesmMatchingDetails object.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NesmMatchDetails.Deserialize(System.IO.Stream)">
            <summary>
            Deserializes matching details.
            </summary>
            <param name="stream">Memory stream containing serialized
                                 matching details.</param>
            <returns>NesmMatchingDetails object.</returns>   
        </member>
        <member name="M:Neurotec.Biometrics.NesmMatchDetails.Serialize">
            <summary>
            Serializes matching details.
            </summary>
            <returns>NBuffer object.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NesmMatchDetails.Serialize(System.IO.Stream)">
            <summary>
            Array of bytes containing serialized matching details.
            </summary>
            <param name="stream">Memory stream containing serialized
                                 matching details.</param>          
        </member>
        <member name="P:Neurotec.Biometrics.NesmMatchDetails.Score">
            <summary>
            Score of matched iris.
            </summary>
            <returns>Score of matched iris.</returns>
        </member>
        <member name="P:Neurotec.Biometrics.NesmMatchDetails.Irises">
            <summary>
            List of irises.
            </summary>
            <returns>Collection of irises.</returns>
        </member>
        <member name="T:Neurotec.Biometrics.NesmMatchDetails.NesmIrisMatchDetailsCollection">
            <summary>
            Iris match details collection.
            </summary>                    
        </member>
        <member name="M:Neurotec.Biometrics.NesmMatchDetails.NesmIrisMatchDetailsCollection.Contains(Neurotec.Biometrics.NesmIrisMatchDetails)">
            <summary>
            Determines whether the NesmIrisMatchDetailsCollection
            contains a specific value.
            </summary>
            <param name="value">The object to locate in the
                                NesmIrisMatchDetailsCollection.</param>
            <returns>A boolean value indicating whether a collection contains a value. The return value is true if the object
                                was found in the NesmIrisMatchDetailsCollection. Otherwise the return value is false.</returns>          
        </member>
        <member name="M:Neurotec.Biometrics.NesmMatchDetails.NesmIrisMatchDetailsCollection.IndexOf(Neurotec.Biometrics.NesmIrisMatchDetails)">
            <summary>
            Determines the index of a specific item in the
            NesmIrisMatchDetailsCollection.
            </summary>
            <param name="value">The NesmIrisMatchDetails object to
                                locate in the
                                NesmIrisMatchDetailsCollection.</param>
            <returns>The index of value if found in the list.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NesmMatchDetails.NesmIrisMatchDetailsCollection.GetEnumerator">
            <summary>
            \Returns an enumerator that iterates through the
            NesmIrisMatchDetailsCollection collection.
            </summary>
            <returns>An IEnumerator object that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Neurotec.Biometrics.NesmMatchDetails.NesmIrisMatchDetailsCollection.Item(System.Int32)">
            <summary>
            Gets the member from collection by index.
            </summary>
            <param name="index">The zero\-based index of the element.</param>
            <returns>
            A NesmFingerMatchDetails structure.
            </returns>                                                       
        </member>
        <member name="P:Neurotec.Biometrics.NesmMatchDetails.NesmIrisMatchDetailsCollection.Count">
            <summary>
            Gets the number of elements contained in the
            NesmIrisMatchDetailsCollection.
            </summary>
            <returns>The number of elements contained in the NesmIrisMatchDetailsCollection.</returns>
        </member>
        <member name="T:Neurotec.Biometrics.NfmSpeed">
            <summary>Specifies the matching speed.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NfmSpeed.Low">
            <summary>The low matching speed.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NfmSpeed.Medium">
            <summary>The medium matching speed.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NfmSpeed.High">
            <summary>The high matching speed.</summary>
        </member>
        <member name="T:Neurotec.Biometrics.NFMatcher">
            <summary>
            Provides methods for comparing Neurotechnology Finger Records
            (NFRecords) using algorithm encapsulated in Neurotechnology
            Finger Matcher (NFMatcher) object.
            </summary>
            Note
            NFMatcher is obsolete. Use NMatcher instead.                 
        </member>
        <member name="F:Neurotec.Biometrics.NFMatcher.ParameterMatchingThreshold">
            <summary>
            Identifier specifying matching threshold (biggest allowed
            FAR) parameter of type int. Parameter value is equal to - 12
            \* log10(FAR) and must be not less than zero (for example, 48
            for FAR = 0.01%). 
            </summary>                                                   
        </member>
        <member name="F:Neurotec.Biometrics.NFMatcher.ParameterMaximalRotation">
            <summary>
            Identifier specifying modulus of maximal rotation allowed
            between two matched NFRecords parameter of type byte.
            Parameter value is specified in 180/128 degrees units and
            cannot be greater than 128 (180 degrees).
            </summary>                                               
        </member>
        <member name="F:Neurotec.Biometrics.NFMatcher.ParameterMatchingSpeed">
            <summary>
            Identifier specifies the matching speed. Parameter value can
            be one of the NfmSpeed enumeration members.
            </summary>                                                  
        </member>
        <member name="F:Neurotec.Biometrics.NFMatcher.ParameterMode">
            <summary>
            Identifier specifying mode (parameter value set) parameter of
            type int. Parameter value can be one of the ModeXXX.
            </summary>                                                   
        </member>
        <member name="F:Neurotec.Biometrics.NFMatcher.ModeGeneral">
            <summary>
            Represents general scanner.
            </summary>                 
        </member>
        <member name="F:Neurotec.Biometrics.NFMatcher.ModeDigitalPersonaUareU">
            <summary>
            Represents Digital Persona U are U scanner.
            </summary>                                 
        </member>
        <member name="F:Neurotec.Biometrics.NFMatcher.ModeBiometrikaFX2000">
            <summary>
            Represents Biometrika FX2000 scanner.
            </summary>                           
        </member>
        <member name="F:Neurotec.Biometrics.NFMatcher.ModeBiometrikaFX3000">
            <summary>
            Represents Biometrika FX3000 scanner.
            </summary>                           
        </member>
        <member name="F:Neurotec.Biometrics.NFMatcher.ModeKeytronicSecureDesktop">
            <summary>
            Represents Keytronic Secure Desktop scanner. 
            </summary>                                   
        </member>
        <member name="F:Neurotec.Biometrics.NFMatcher.ModeIdentixTouchView">
            <summary>
            Represents Identix TouchView scanner.
            </summary>                           
        </member>
        <member name="F:Neurotec.Biometrics.NFMatcher.ModeIdentixDfr2090">
            <summary>
            Represents Identix Dfr2090 scanner.
            </summary>                         
        </member>
        <member name="F:Neurotec.Biometrics.NFMatcher.ModePreciseBiometrics100CS">
            <summary>
            Represents Precise Biometrics 100CS scanner. 
            </summary>                                   
        </member>
        <member name="F:Neurotec.Biometrics.NFMatcher.ModeUpekTouchChip">
            <summary>
            Represents Upek Touch Chip scanner. 
            </summary>                          
        </member>
        <member name="F:Neurotec.Biometrics.NFMatcher.ModeIdenticatorTechnologyDF90">
            <summary>
            Represents Identicator Technology DF90 scanner.
            </summary>                                     
        </member>
        <member name="F:Neurotec.Biometrics.NFMatcher.ModeAuthentecAFS2">
            <summary>
            Represents Authentec AFS2 scanner.
            </summary>                        
        </member>
        <member name="F:Neurotec.Biometrics.NFMatcher.ModeAuthentecAes4000">
            <summary>
            Represents Authentec Aes 4000 scanner.
            </summary>                            
        </member>
        <member name="F:Neurotec.Biometrics.NFMatcher.ModeAuthentecAes2501B">
            <summary>
            Represents Authentec Aes 2501B scanner.
            </summary>                             
        </member>
        <member name="F:Neurotec.Biometrics.NFMatcher.ModeAtmelFingerChip">
            <summary>
            Represents Atmel Finger Chip scanner.
            </summary>                           
        </member>
        <member name="F:Neurotec.Biometrics.NFMatcher.ModeBmfBlp100">
            <summary>
            Represents Bmf Blp 100 scanner.
            </summary>                     
        </member>
        <member name="F:Neurotec.Biometrics.NFMatcher.ModeSecugenHamster">
            <summary>
            Represents Secugen Hamster scanner. 
            </summary>                          
        </member>
        <member name="F:Neurotec.Biometrics.NFMatcher.ModeEthentica">
            <summary>
            Represents Ethentica scanner.
            </summary>                   
        </member>
        <member name="F:Neurotec.Biometrics.NFMatcher.ModeCrossMatchVerifier300">
            <summary>
            Represents Cross Match Verifier 300 scanner.
            </summary>                                  
        </member>
        <member name="F:Neurotec.Biometrics.NFMatcher.ModeNitgenFingkeyHamster">
            <summary>
            Represents Nitgen Fingkey Hamster scanner. 
            </summary>                                 
        </member>
        <member name="F:Neurotec.Biometrics.NFMatcher.ModeTestechBioI">
            <summary>
            Represents Testech Bio I scanner. 
            </summary>                        
        </member>
        <member name="F:Neurotec.Biometrics.NFMatcher.ModeDigentIzzix">
            <summary>
            Represents Digent Izzix scanner.
            </summary>                      
        </member>
        <member name="F:Neurotec.Biometrics.NFMatcher.ModeStartekFM200">
            <summary>
            Represents Startek FM200 scanner.
            </summary>                       
        </member>
        <member name="F:Neurotec.Biometrics.NFMatcher.ModeFujitsuMbf200">
            <summary>
            Represents Fujitsu Mbf200 scanner.
            </summary>                        
        </member>
        <member name="F:Neurotec.Biometrics.NFMatcher.ModeFutronicFS80">
            <summary>
            Represents Futronic FS80 scanner.
            </summary>                       
        </member>
        <member name="F:Neurotec.Biometrics.NFMatcher.ModeLighTuningLttC500">
            <summary>
            Represents Light Tuning LttC500 scanner. 
            </summary>                               
        </member>
        <member name="F:Neurotec.Biometrics.NFMatcher.ModeTacomaCmos">
            <summary>
            Represents Tacoma Cmos scanner. 
            </summary>                      
        </member>
        <member name="M:Neurotec.Biometrics.NFMatcher.#ctor">
            <summary>
            Initializes a new instance of the NFMatcher class.
            </summary>                                        
        </member>
        <member name="M:Neurotec.Biometrics.NFMatcher.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the NFMatcher class.
            </summary>
            <param name="isPalm">Indicates if NFMatcher contains palm
                                 prints.</param>                     
        </member>
        <member name="M:Neurotec.Biometrics.NFMatcher.Verify(System.IntPtr,System.Int32,System.IntPtr,System.Int32)">
            <summary>
            Compares two NFRecords.
            </summary>
            <param name="template1">Pointer to the memory block that
                                    contains packed NFRecord.</param>
            <param name="template1Size">The template size.</param>
            <param name="template2">Pointer to the memory block that
                                    contains packed NFRecord.</param>
            <param name="template2Size">The template size.</param>
            <returns>The matching score.</returns>
            <remarks>
            Method returns zero if similarity is less than matching
            threshold, i.e. two NFRecords do not match (see
            ParameterMatchingThreshold and SetParameter method), and
            \returns greater than or equal to matching threshold
            otherwise.
            </remarks>                                                
        </member>
        <member name="M:Neurotec.Biometrics.NFMatcher.Verify(System.IntPtr,System.Int32,System.IntPtr,System.Int32,Neurotec.Biometrics.NfmMatchDetails@)">
            <summary>
            Compares two NFRecords.
            </summary>
            <param name="template1">Pointer to the memory block that
                                    contains packed NFRecord.</param>
            <param name="template1Size">The template size.</param>
            <param name="template2">Pointer to the memory block that
                                    contains packed NFRecord.</param>
            <param name="template2Size">The template size.</param>
            <param name="matchDetails">The NfmMatchDetails object.</param>
            <returns>The matching score.</returns>
            <remarks>
            Method returns zero if similarity is less than matching
            threshold, i.e. two NFRecords do not match (see
            ParameterMatchingThreshold and SetParameter method), and
            \returns greater than or equal to matching threshold
            otherwise.
            </remarks>                                                    
        </member>
        <member name="M:Neurotec.Biometrics.NFMatcher.Verify(System.Byte[],System.Byte[])">
            <summary>
            Compares two NFRecords.
            </summary>
            <param name="template1">The byte array with packed NFRecord.</param>
            <param name="template2">The byte array with packed NFRecord.</param>
            <returns>The matching score.</returns>
            <remarks>
            Method returns zero if similarity is less than matching
            threshold, i.e. two NFRecords do not match (see
            ParameterMatchingThreshold and SetParameter method), and
            \returns greater than or equal to matching threshold
            otherwise. 
            </remarks>                                                          
        </member>
        <member name="M:Neurotec.Biometrics.NFMatcher.Verify(System.Byte[],System.Byte[],Neurotec.Biometrics.NfmMatchDetails@)">
            <summary>
            Compares two NFRecords.
            </summary>
            <param name="template1">The byte array with packed
                                    NFRecord.</param>
            <param name="template2">The byte array with packed
                                    NFRecord.</param>
            <param name="matchDetails">The NfmMatchDetails object.</param>
            <returns>The matching score.</returns>
            <remarks>
            Method returns zero if similarity is less than matching
            threshold, i.e. two NFRecords do not match (see
            ParameterMatchingThreshold and SetParameter method), and
            \returns greater than or equal to matching threshold
            otherwise. 
            </remarks>                                                    
        </member>
        <member name="M:Neurotec.Biometrics.NFMatcher.IdentifyStart(System.IntPtr,System.Int32)">
            <summary>
            Starts identification.
            </summary>
            <param name="template">Pointer to the memory block that
                                   contains packed NFRecord.</param>
            <param name="templateSize">The template size.</param>   
        </member>
        <member name="M:Neurotec.Biometrics.NFMatcher.IdentifyStart(System.IntPtr,System.Int32,Neurotec.Biometrics.NfmMatchDetails@)">
            <summary>
            Starts identification.
            </summary>
            <param name="template">Pointer to the memory block that
                                   contains packed NFRecord.</param>
            <param name="templateSize">The template size.</param>
            <param name="matchDetails">The NfmMatchDetails object.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NFMatcher.IdentifyStart(System.Byte[])">
            <summary>
            Starts identification.
            </summary>
            <param name="template">The byte array with packed NFRecord.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NFMatcher.IdentifyStart(System.Byte[],Neurotec.Biometrics.NfmMatchDetails@)">
            <summary>
            Starts identification.
            </summary>
            <param name="template">The byte array with packed
                                   NFRecord.</param>
            <param name="matchDetails">The NfmMatchDetails object.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NFMatcher.IdentifyNext(System.IntPtr,System.Int32)">
            <summary>
            Compares the specified NFRecord with the one identification
            was started with.
            </summary>
            <param name="template">Pointer to the memory block that
                                   contains packed NFRecord.</param>
            <param name="templateSize">The template size.</param>
            <returns>The matching score.</returns>
            <remarks>
            Method returns zero if similarity is less than matching
            threshold, i.e. two NFRecords do not match (see
            ParameterMatchingThreshold and SetParameter method), and
            \returns greater than or equal to matching threshold
            otherwise. 
            </remarks>                                                 
        </member>
        <member name="M:Neurotec.Biometrics.NFMatcher.IdentifyNext(System.IntPtr,System.Int32,Neurotec.Biometrics.NfmMatchDetails)">
            <summary>
            Compares the specified NFRecord with the one identification
            was started with.
            </summary>
            <param name="template">Pointer to the memory block that
                                   contains packed NFRecord.</param>
            <param name="templateSize">The template size.</param>
            <param name="matchDetails">The NfmMatchDetails object.</param>
            <returns>The matching score.</returns>
            <remarks>
            Method returns zero if similarity is less than matching
            threshold, i.e. two NFRecords do not match (see
            ParameterMatchingThreshold and SetParameter method), and
            \returns greater than or equal to matching threshold
            otherwise. 
            </remarks>                                                    
        </member>
        <member name="M:Neurotec.Biometrics.NFMatcher.IdentifyNext(System.Byte[])">
            <summary>
            Compares the specified NFRecord with the one identification
            was started with.
            </summary>
            <param name="template">The byte array with packed NFRecord.</param>
            <returns>The matching score.</returns>
            <remarks>
            Method returns zero if similarity is less than matching
            threshold, i.e. two NFRecords do not match (see
            ParameterMatchingThreshold and SetParameter method), and
            \returns greater than or equal to matching threshold
            otherwise. 
            </remarks>                                                         
        </member>
        <member name="M:Neurotec.Biometrics.NFMatcher.IdentifyNext(System.Byte[],Neurotec.Biometrics.NfmMatchDetails)">
            <summary>
            Compares the specified NFRecord with the one identification
            was started with.
            </summary>
            <param name="template">The byte array with packed
                                   NFRecord.</param>
            <param name="matchDetails">The NfmMatchDetails object.</param>
            <returns>The matching score.</returns>
            <remarks>
            Method returns zero if similarity is less than matching
            threshold, i.e. two NFRecords do not match (see
            ParameterMatchingThreshold and SetParameter method), and
            \returns greater than or equal to matching threshold
            otherwise. 
            </remarks>                                                    
        </member>
        <member name="M:Neurotec.Biometrics.NFMatcher.IdentifyEnd">
            <summary>
            Ends identification process.
            </summary>                  
        </member>
        <member name="P:Neurotec.Biometrics.NFMatcher.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NFMatcher.NfmSpeedNativeType">
            <summary>
            Defines the native type of the fingerprint matcher speed.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NFMatcher.IsPalm">
            <summary>
            Gets a value that indicates if the NFMatcher was created for
            palm prints matching.
            </summary>
            <value>
            Boolean value indicating if NFMatcher was created for palm
            prints matching. 
            </value>                                                    
        </member>
        <member name="P:Neurotec.Biometrics.NFMatcher.MatchingThreshold">
            <summary>
            Gets or sets the matching threshold.
            </summary>
            <returns>A matching threshold.</returns>
        </member>
        <member name="P:Neurotec.Biometrics.NFMatcher.MaximalRotation">
            <summary>
            Gets or sets maximal rotation.
            </summary>
            <returns>A maximal rotation.</returns>
        </member>
        <member name="P:Neurotec.Biometrics.NFMatcher.MatchingSpeed">
            <summary>
            Gets or sets a matching speed of NFMatcher.
            </summary>                                 
        </member>
        <member name="P:Neurotec.Biometrics.NFMatcher.Mode">
            <summary>
            Gets or sets scanners mode.
            </summary>
            <returns>One of the scanner types.</returns>
        </member>
        <member name="T:Neurotec.Biometrics.NfmMatchDetails">
            <summary>
            Specifies the matching information.
            </summary>                         
        </member>
        <member name="M:Neurotec.Biometrics.NfmMatchDetails.Deserialize(System.IntPtr,System.Int32)">
            <summary>
            Deserializes NfmMatchDetails.
            </summary>
            <param name="pBuffer">Pointer to memory buffer that
                                 contains serialized
                                 NfmMatchDetails.</param>
            <param name="bufferSize">Size of memory buffer that
                                       contains serialized
                                       NfmMatchDetails.</param>
            <returns>The NfmMatchDetails structure.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NfmMatchDetails.Deserialize(System.Byte[])">
            <summary>
            Deserializes NfmMatchDetails.
            </summary>
            <param name="buffer">The serialized NfmMatchDetails.</param>
            <returns>The NfmMatchDetails structure.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NfmMatchDetails.Deserialize(Neurotec.IO.NBuffer)">
            <summary>
            Deserializes NfmMatchDetails.
            </summary>
            <param name="buffer">The serialized NfmMatchDetails.</param>
            <returns>The NfmMatchDetails structure.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NfmMatchDetails.Deserialize(System.IO.Stream)">
            <summary>
            Deserializes NfmMatchDetails.
            </summary>
            <param name="stream">Memory stream that contains serialized
                                 NfmMatchDetails.</param>
            <returns>The NfmMatchDetails structure.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NfmMatchDetails.Serialize">
            <summary>
            Serializes NfmMatchDetails.
            </summary>
            <returns>The serialized NfmMatchDetails.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NfmMatchDetails.Serialize(System.IO.Stream)">
            <summary>
            Serializes NfmMatchDetails.
            </summary>
            <param name="stream">Memory stream that contains serialized
                                 NfmMatchDetails.</param>              
        </member>
        <member name="P:Neurotec.Biometrics.NfmMatchDetails.IsPalm">
            <summary>
            Specifies whether the NfmMatchDetails contains palmprint
            match details.
            </summary>                                              
        </member>
        <member name="P:Neurotec.Biometrics.NfmMatchDetails.Score">
            <summary>
            Gets score of two matched fingerprints.
            </summary>
            <value>
            The score of two matched fingerprints.
            </value>                               
        </member>
        <member name="P:Neurotec.Biometrics.NfmMatchDetails.CenterX">
            <summary>
            Gets X coordinate center of mass of the second.
            </summary>
            <returns>
            X coordinate of the center of mass. 
            </returns>                                     
        </member>
        <member name="P:Neurotec.Biometrics.NfmMatchDetails.CenterY">
            <summary>
            Gets Y coordinate center of mass of the second.
            </summary>
            <returns>
            Y coordinate of the center of mass.
            </returns>                                     
        </member>
        <member name="P:Neurotec.Biometrics.NfmMatchDetails.RawRotation">
            <summary>
            Rotation of second matched NFRecord against the first one in
            radians.
            </summary>                                                  
        </member>
        <member name="P:Neurotec.Biometrics.NfmMatchDetails.Rotation">
            <summary>
            Gets rotation of second matched NFRecord against the first
            one.
            </summary>
            <remarks>
            The rotation is specified in 180/128 degrees units in
            counterclockwise order. To eliminate rotation, the second
            NFRecord minutiae and singular points have to be rotated by
            the value around center of its minutiae bounding box. 
            </remarks>                                                 
        </member>
        <member name="P:Neurotec.Biometrics.NfmMatchDetails.TranslationX">
            <summary>
            Gets horizontal translation of second matched NFRecord
            against the first one.
            </summary>
            <remarks>
            To eliminate horizontal translation, the second NFRecord
            minutiae and singular points have to be shifted down by the
            value. Note that Rotation must be eliminated first. 
            </remarks>                                                 
        </member>
        <member name="P:Neurotec.Biometrics.NfmMatchDetails.TranslationY">
            <summary>
            Gets vertical translation of second matched NFRecord against
            the first one.
            </summary>
            <remarks>
            To eliminate vertical translation, the second NFRecord
            minutiae and singular points have to be shifted down by the
            value. Note that Rotation must be eliminated first. 
            </remarks>                                                  
        </member>
        <member name="P:Neurotec.Biometrics.NfmMatchDetails.MatedMinutiae">
            <summary>
            The NIndexPair structures array.
            </summary>
            <returns>The array of NIndexPair structures.</returns>   
        </member>
        <member name="T:Neurotec.Biometrics.NfsMatcher">
            <summary>
            Provides methods and properties for comparing Neurotechnology
            Fingers Templates (NFTemplates), encapsulated in
            Neurotechnology Fingers Matcher (NfsMatcher) object.
            </summary>
            Note
            This class and all methods in this class are obsolete. Use
            NMatcher instead.
        </member>
        <member name="F:Neurotec.Biometrics.NfsMatcher.PartNone">
            <summary>
            Identifier specifying that retrieving or setting parameter
            for NfsMatcher.
            </summary>                                                
        </member>
        <member name="F:Neurotec.Biometrics.NfsMatcher.PartNfm">
            <summary>
            Identifier specifying that retrieving or setting parameter
            for NFMatcher contained in NfsMatcher.
            </summary>                                                
        </member>
        <member name="F:Neurotec.Biometrics.NfsMatcher.ParameterMatchingThreshold">
            <summary>
            Identifier specifying matching threshold (biggest allowed
            FAR) parameter of type int. Parameter value is equal to - 12
            \* log10(FAR) and must be not less than zero (for example, 48
            for FAR = 0.01%).
            </summary>                                                   
        </member>
        <member name="F:Neurotec.Biometrics.NfsMatcher.ParameterMinMatchedFingerCount">
            <summary>
            Identifier specifying minimal number of fingerprints from
            probe template to match parameter of type int. Parameter
            value is from zero to NFTemplate.MaxRecordCount.
            </summary>
            Note
            Obsolete, use
            Neurotec.Biometrics.NMatcher.ParameterFingersMinMatchedCount
            instead.                                                    
        </member>
        <member name="F:Neurotec.Biometrics.NfsMatcher.ParameterMinMatchedFingerCountThreshold">
            <summary>
            Identifier specifying matching threshold (biggest allowed
            FAR) when matching is stopped (with respect to
            ParameterMinMatchedFingerCount parameter value) parameter of
            type int. Parameter value is equal to -12 * log10(FAR) and
            must be not less than zero (for example, 48 for FAR = 0.01%).
            </summary>                                                   
        </member>
        <member name="M:Neurotec.Biometrics.NfsMatcher.#ctor">
            <summary>Initializes a new instance of the NfsMatcher class.</summary>
        </member>
        <member name="M:Neurotec.Biometrics.NfsMatcher.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the NfsMatcher class.
            </summary>
            <param name="isPalm">Boolean value indicating NFMatcher
                                 type. If set to NTrue,then NFMatcher
                                 will be used for matching palmprints.
                                 Otherwise, NFMatcher will be used for
                                 matching<para></para>fingerprints.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NfsMatcher.Verify(System.IntPtr,System.Int32,System.IntPtr,System.Int32)">
            <summary>
            Verifies one NFTemplate against other.
            </summary>
            <param name="template1">Pointer to memory block that
                                    contains packed NFTemplate or
                                    NFRecord.</param>
            <param name="template1Size">The template size.</param>
            <param name="template2">Pointer to memory block that
                                    contains packed NFTemplate or
                                    NFRecord.</param>
            <param name="template2Size">The template size.</param>
            <returns>
            The matching score.
            </returns>
            <remarks>
            Method returns zero if similarity is less than matching
            threshold, i.e. two NFTemplates do not match (see
            ParameterMatchingThreshold and SetParameter method), and is
            greater than or equal to matching threshold otherwise. 
            </remarks>                                                 
        </member>
        <member name="M:Neurotec.Biometrics.NfsMatcher.Verify(System.IntPtr,System.Int32,System.IntPtr,System.Int32,Neurotec.Biometrics.NfsmMatchDetails@)">
            <summary>
            Verifies one NFTemplate against other.
            </summary>
            <param name="template1">Pointer to memory block that
                                    contains packed NFTemplate or
                                    NFRecord.</param>
            <param name="template1Size">The template size.</param>
            <param name="template2">Pointer to memory block that
                                    contains packed NFTemplate or
                                    NFRecord.</param>
            <param name="template2Size">The template size.</param>
            <param name="matchDetails">[out] The NfsmMatchDetails
                                       object.</param>
            <returns>
            The matching score.
            </returns>
            <remarks>
            Method returns zero if similarity is less than matching
            threshold, i.e. two NFTemplates do not match (see
            ParameterMatchingThreshold and SetParameter method), and is
            greater than or equal to matching threshold otherwise. 
            </remarks>                                                 
        </member>
        <member name="M:Neurotec.Biometrics.NfsMatcher.Verify(System.Byte[],System.Byte[])">
            <summary>
            Verifies one NFTemplate against other.
            </summary>
            <param name="template1">The byte array that contains packed NFTemplate
                                    or NFRecord.</param>
            <param name="template2">The byte array that contains packed NFTemplate
                                    or NFRecord.</param>
            <returns>
            The matching score.
            </returns>
            <remarks>
            Method returns zero if similarity is less than matching
            threshold, i.e. two NFTemplates do not match (see
            ParameterMatchingThreshold and SetParameter method), and is
            greater than or equal to matching threshold otherwise. 
            </remarks>                                                            
        </member>
        <member name="M:Neurotec.Biometrics.NfsMatcher.Verify(System.Byte[],System.Byte[],Neurotec.Biometrics.NfsmMatchDetails@)">
            <summary>
            Verifies one NFTemplate against other.
            </summary>
            <param name="template1">The byte array that contains
                                    packed NFTemplate or NFRecord.</param>
            <param name="template2">The byte array that contains
                                    packed NFTemplate or NFRecord.</param>
            <param name="matchDetails">The NfsmMatchDetails object.</param>
            <returns>
            The matching score.
            </returns>
            <remarks>
            Method returns zero if similarity is less than matching
            threshold, i.e. two NFTemplates do not match (see
            ParameterMatchingThreshold and SetParameter method), and is
            greater than or equal to matching threshold otherwise. 
            </remarks>                                                     
        </member>
        <member name="M:Neurotec.Biometrics.NfsMatcher.IdentifyStart(System.IntPtr,System.Int32)">
            <summary>
            Starts identification.
            </summary>
            <param name="template">Pointer to memory block that
                                   contains packed NFTemplate or
                                   NFRecord.</param>
            <param name="templateSize">The template size.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NfsMatcher.IdentifyStart(System.IntPtr,System.Int32,Neurotec.Biometrics.NfsmMatchDetails@)">
            <summary>
            Starts identification.
            </summary>
            <param name="template">Pointer to memory block that
                                   contains packed NFTemplate or
                                   NFRecord.</param>
            <param name="templateSize">The template size.</param>
            <param name="matchDetails">The NfsmMatchDetails object.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NfsMatcher.IdentifyStart(System.Byte[])">
            <summary>
            Starts identification.
            </summary>
            <param name="template">The byte array that contains packed NFTemplate
                                   or NFRecord.</param>                          
        </member>
        <member name="M:Neurotec.Biometrics.NfsMatcher.IdentifyStart(System.Byte[],Neurotec.Biometrics.NfsmMatchDetails@)">
            <summary>
            Starts identification.
            </summary>
            <param name="template">The byte array that contains
                                   packed NFTemplate or NFRecord.</param>
            <param name="matchDetails">The NfsmMatchDetails object.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NfsMatcher.IdentifyNext(System.IntPtr,System.Int32)">
            <summary>
            Compares the specified NFTemplate with one identification was
            started with.
            </summary>
            <param name="template">Pointer to memory block that
                                   contains packed NFTemplate or
                                   NFRecord.</param>
            <param name="templateSize">The template size.</param>
            <returns>
            The matching score.
            </returns>
            <remarks>
            Method returns zero if similarity is less than matching
            threshold, i.e. two NFTemplates do not match (see
            ParameterMatchingThreshold and SetParameter method), and is
            greater than or equal to matching threshold otherwise. 
            </remarks>                                                   
        </member>
        <member name="M:Neurotec.Biometrics.NfsMatcher.IdentifyNext(System.IntPtr,System.Int32,Neurotec.Biometrics.NfsmMatchDetails)">
            <summary>
            Compares the specified NFTemplate with one identification was
            started with.
            </summary>
            <param name="template">Pointer to memory block that
                                   contains packed NFTemplate or
                                   NFRecord.</param>
            <param name="templateSize">The template size.</param>
            <param name="matchDetails">The NfsmMatchDetails object.</param>
            <returns>
            The matching score.
            </returns>
            <remarks>
            Method returns zero if similarity is less than matching
            threshold, i.e. two NFTemplates do not match (see
            ParameterMatchingThreshold and SetParameter method), and is
            greater than or equal to matching threshold otherwise. 
            </remarks>                                                     
        </member>
        <member name="M:Neurotec.Biometrics.NfsMatcher.IdentifyNext(System.Byte[])">
            <summary>
            Compares the specified NFTemplate with one identification was
            started with.
            </summary>
            <param name="template">The byte array that contains packed NFTemplate
                                   or NFRecord.</param>
            <returns>
            The matching score.
            </returns>
            <remarks>
            Method returns zero if similarity is less than matching
            threshold, i.e. two NFTemplates do not match (see
            ParameterMatchingThreshold and SetParameter method), and is
            greater than or equal to matching threshold otherwise. 
            </remarks>                                                           
        </member>
        <member name="M:Neurotec.Biometrics.NfsMatcher.IdentifyNext(System.Byte[],Neurotec.Biometrics.NfsmMatchDetails)">
            <summary>
            Compares the specified NFTemplate with one identification was
            started with.
            </summary>
            <param name="template">Pointer to memory block that
                                   contains packed NFTemplate or
                                   NFRecord.</param>
            <param name="matchDetails">The NfsmMatchDetails object.</param>
            <returns>
            The matching score.
            </returns>
            <remarks>
            Method returns zero if similarity is less than matching
            threshold, i.e. two NFTemplates do not match (see
            ParameterMatchingThreshold and SetParameter method), and is
            greater than or equal to matching threshold otherwise. 
            </remarks>                                                     
        </member>
        <member name="M:Neurotec.Biometrics.NfsMatcher.IdentifyEnd">
            <summary>
            Ends identification process.
            </summary>                  
        </member>
        <member name="P:Neurotec.Biometrics.NfsMatcher.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NfsMatcher.IsPalm">
            <summary>
            Checks if the NfsMatcher is a palmprint matcher.
            </summary>
            <value>
            true if NfsMatcher is a palmprint matcher; otherwise, false. 
            </value>                                                     
        </member>
        <member name="P:Neurotec.Biometrics.NfsMatcher.MatchingThreshold">
            <summary>Gets or sets the matching threshold.</summary>
            <value>A matching threshold.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NfsMatcher.MinMatchedFingerCount">
            <summary>A minimal matched fingerprints (NFRecord) count.</summary>
            <value>A minimal matched fingerprints (NFRecord) count.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NfsMatcher.MinMatchedFingerCountThreshold">
            <summary>A minimal matched fingerprints (NFRecord) count threshold.</summary>
            <value>A minimal matched fingerprints (NFRecord) count threshold.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NfsMatcher.NfmMaximalRotation">
            <summary>Gets or sets maximal rotation.</summary>
            <value>The maximal rotation.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NfsMatcher.NfmMatchingSpeed">
            <summary>Gets or sets matching speed.</summary>
            <value>One of the NfmSpeed values.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NfsMatcher.NfmMode">
            <summary>Gets or sets scanners mode.</summary>
            <value>One of the Mode constants.</value>
        </member>
        <member name="T:Neurotec.Biometrics.NfsmFingerMatchDetails">
            <summary>
            Specifies the fingers matching information.
            </summary>                                 
        </member>
        <member name="P:Neurotec.Biometrics.NfsmFingerMatchDetails.Score">
            <summary>Specifies score of matched fingerprints.</summary>
            <value>The score of matched NFTemplates.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NfsmFingerMatchDetails.MatchedIndex">
            <summary>Specifies the zero-based index in the second NFTemplate.</summary>
            <value>The index of fingerprint template in NFTemplate.</value>
            <remarks>-1 no match found. The second template in the identification comes from the IdentifyNext  method. The first template comes from the IdentifyStart method.</remarks>
        </member>
        <member name="P:Neurotec.Biometrics.NfsmFingerMatchDetails.NfmMatchDetails">
            <summary>Specifies structure NfmMatchDetails that receives finger match details.</summary>
            <value>The NfmMatchDetails object.</value>
        </member>
        <member name="T:Neurotec.Biometrics.NfsmMatchDetails">
            <summary>
            Specifies the matching information.
            </summary>                         
        </member>
        <member name="M:Neurotec.Biometrics.NfsmMatchDetails.Deserialize(System.IntPtr,System.Int32)">
            <summary>
            Deserializes NfsmMatchDetails from memory buffer.
            </summary>
            <param name="pBuffer">Pointer to memory buffer that
                                 contains serialized
                                 NfsmMatchDetails.</param>
            <param name="bufferSize">Size of memory buffer that
                                       contains serialized
                                       NfsmMatchDetails.</param>
            <returns>
            The NfsmMatchDetails structure. 
            </returns>                                           
        </member>
        <member name="M:Neurotec.Biometrics.NfsmMatchDetails.Deserialize(System.Byte[])">
            <summary>
            Deserializes NfsmMatchDetails from byte array.
            </summary>
            <param name="buffer">The serialized NfsmMatchDetails.</param>
            <returns>
            The NfsmMatchDetails structure. 
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NfsmMatchDetails.Deserialize(Neurotec.IO.NBuffer)">
            <summary>
            Deserializes NfsmMatchDetails from byte array.
            </summary>
            <param name="buffer">The serialized NfsmMatchDetails.</param>
            <returns>The NfsmMatchDetails structure.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NfsmMatchDetails.Deserialize(System.IO.Stream)">
            <summary>
            Deserializes NfsmMatchDetails from stream.
            </summary>
            <param name="stream">Stream that contains serialized
                                 NfsmMatchDetails</param>
            <returns>
            The NfsmMatchDetails structure. 
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NfsmMatchDetails.Serialize">
            <summary>
            Serializes NfsmMatchDetails into NBuffer.
            </summary>
            <returns>
            NBuffer with serialized NfsmMatchDetails data.
            </returns>                                    
        </member>
        <member name="M:Neurotec.Biometrics.NfsmMatchDetails.Serialize(System.IO.Stream)">
            <summary>
            Serializes NfsmMatchDetails into stream.
            </summary>
            <param name="stream">Stream with serialized NfsmMatchDetails
                                 data. </param>                         
        </member>
        <member name="P:Neurotec.Biometrics.NfsmMatchDetails.IsPalm">
            <summary>
            Specifies whether the NfsmMatchDetails are palm prints match
            details. 
            </summary>                                                  
        </member>
        <member name="P:Neurotec.Biometrics.NfsmMatchDetails.Score">
            <summary>Gets the score of the matched fingerprints.</summary>
            <value>The score of the matched fingerprints.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NfsmMatchDetails.Fingers">
            <summary>
            Gets the collection of NfsmFingerMatchDetails structures.
            </summary>                                               
        </member>
        <member name="T:Neurotec.Biometrics.NfsmMatchDetails.NfsmFingerMatchDetailsCollection">
            <summary>
            Represents the collection of NfsmFingerMatchDetails.
            </summary>                                          
        </member>
        <member name="M:Neurotec.Biometrics.NfsmMatchDetails.NfsmFingerMatchDetailsCollection.#ctor(Neurotec.Biometrics.NfsmMatchDetails)">
            <summary>
            Represents the collection of NfsmFingerMatchDetails.
            </summary>                                          
        </member>
        <member name="M:Neurotec.Biometrics.NfsmMatchDetails.NfsmFingerMatchDetailsCollection.Contains(Neurotec.Biometrics.NfsmFingerMatchDetails)">
            <summary>
            Determines whether the collection contains a
            NfsmFingerMatchDetails.
            </summary>
            <param name="value">The NfsmFingerMatchDetails to locate in
                                the NfsmFingerMatchDetailsCollection.</param>
            <returns>
            true if the finger match details is found in the
            NfsmMatchDetails.NfsmFingerMatchDetailsCollection; otherwise,
            false.
            </returns>                                                       
        </member>
        <member name="M:Neurotec.Biometrics.NfsmMatchDetails.NfsmFingerMatchDetailsCollection.IndexOf(Neurotec.Biometrics.NfsmFingerMatchDetails)">
            <summary>Returns the index within the collection of the finger match details.</summary>
            <param name="value">A NfsmFingerMatchDetails object.</param>
            <returns>The zero-based index of the NfsmFingerMatchDetails in the collection.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NfsmMatchDetails.NfsmFingerMatchDetailsCollection.GetEnumerator">
            <summary>
            \Returns an enumerator for the entire
            NfsmFingerMatchDetailsCollection.
            </summary>
            <returns>
            An IEnumerator for the entire NfsmFingerMatchDetailsCollection.
            </returns>                                                     
        </member>
        <member name="P:Neurotec.Biometrics.NfsmMatchDetails.NfsmFingerMatchDetailsCollection.Item(System.Int32)">
            <summary>
            Gets the member from collection by index.
            </summary>
            <param name="index">The zero\-based index of the element.</param>
            <returns>
            A NfsmFingerMatchDetails structure. 
            </returns>                                                       
        </member>
        <member name="P:Neurotec.Biometrics.NfsmMatchDetails.NfsmFingerMatchDetailsCollection.Count">
            <summary>Gets the number of items in the collection.</summary>
            <value>The number of items in the collection</value>
        </member>
        <member name="T:Neurotec.Biometrics.NlmSpeed">
            <summary>Specifies the matching speed.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NlmSpeed.Low">
            <summary>The low matching speed.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NlmSpeed.High">
            <summary>The high matching speed.</summary>
        </member>
        <member name="T:Neurotec.Biometrics.NLMatcher">
            <summary>
            Provides functionality for comparing face feature templates
            using algorithm encapsulated in Neurotechnology NLMatcher
            object.
            </summary>
            Note
            NLMatcher is obsolete. Use NMatcher instead.               
        </member>
        <member name="F:Neurotec.Biometrics.NLMatcher.ParameterMatchingThreshold">
            <summary>Identifier specifying the threshold that distinguishes genuine from impostor. Templates that score more than threshold are considered to be of the same person. For possible values of this parameter see  section.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NLMatcher.ParameterMatchingSpeed">
            <summary>Identifier specifying matching speed parameter. Parameter value can be one of the NlmSpeed enumeration members.</summary>
        </member>
        <member name="M:Neurotec.Biometrics.NLMatcher.#ctor">
            <summary>Initializes a new instance of the NLMatcher class.</summary>
        </member>
        <member name="M:Neurotec.Biometrics.NLMatcher.Verify(System.IntPtr,System.Int32,System.IntPtr,System.Int32)">
            <summary>
            Method to verify to given templates.
            </summary>
            <param name="template1">Pointer to the memory block that
                                    contains first face feature
                                    template
                                    (Neurotec.Biometrics.NLRecord).
                                    This template must be
                                    uncompressed.</param>
            <param name="template1Size">The first template size.</param>
            <param name="template2">Pointer to the memory block that
                                    contains second face feature
                                    template
                                    (Neurotec.Biometrics.NLRecord).
                                    This template must be
                                    compressed.</param>
            <param name="template2Size">The second template size.</param>
            <returns>
            The matching score.
            </returns>
            <remarks>
            Method returns zero if similarity is less than matching
            threshold, i.e. two face feature templates do not match (see
            ParameterMatchingThreshold and SetParameter method), and is
            greater than or equal to matching threshold otherwise.
            
            
            
            It is recommended to use Neurotec.Biometrics.NMatcher instead
            of using Neurotec.Biometrics.NLMatcher. 
            </remarks>                                                   
        </member>
        <member name="M:Neurotec.Biometrics.NLMatcher.Verify(System.Byte[],System.Byte[])">
            <summary>
            Method to verify to given templates.
            </summary>
            <param name="template1">Byte array with first face feature
                                    template(Neurotec.Biometrics.NLRecord).
                                    This template must be uncompressed.</param>
            <param name="template2">Byte array with second face feature
                                    template(Neurotec.Biometrics.NLRecord).
                                    This template must be compressed.</param>
            <returns>
            The matching score.
            </returns>
            <remarks>
            Method returns zero if similarity is less than matching
            threshold, i.e. two face feature templates do not match (see
            ParameterMatchingThreshold and SetParameter method), and is
            greater than or equal to matching threshold otherwise.
            
            
            
            It is recommended to use NMatcher instead of using NLMatcher.
            </remarks>                                                         
        </member>
        <member name="M:Neurotec.Biometrics.NLMatcher.IdentifyStart(System.IntPtr,System.Int32)">
            <summary>
            Method to start identification procedure.
            </summary>
            <param name="template">Pointer to the memory block
                                   (Neurotec.Biometrics.NLRecord)
                                   that contains face feature
                                   template (NLRecord). This
                                   template must be uncompressed.</param>
            <param name="templateSize">The template size.</param>
            Note
            It is recommended to use Neurotec.Biometrics.NMatcher instead
            of using Neurotec.Biometrics.NLMatcher.                      
        </member>
        <member name="M:Neurotec.Biometrics.NLMatcher.IdentifyStart(System.Byte[])">
            <summary>
            Method to start identification procedure.
            </summary>
            <param name="template">Byte array with face feature template
                                   (Neurotec.Biometrics.NLRecord). This
                                   template must be uncompressed.</param>
            Note
            It is recommended to use Neurotec.Biometrics.NMatcher instead
            of using Neurotec.Biometrics.NLMatcher.                      
        </member>
        <member name="M:Neurotec.Biometrics.NLMatcher.IdentifyNext(System.IntPtr,System.Int32)">
            <summary>
            Method to verify one given template with the one that is
            being identified.
            </summary>
            <param name="template">Pointer to the memory block that
                                   contains face feature template
                                   (Neurotec.Biometrics.NLRecord).
                                   This template must be compressed.</param>
            <param name="templateSize">The template size.</param>
            <returns>
            The matching score.
            </returns>
            <remarks>
            Method returns zero if similarity is less than matching
            threshold, i.e. two face feature templates do not match (see
            ParameterMatchingThreshold and SetParameter method), and is
            greater than or equal to matching threshold otherwise.
            
            
            
            It is recommended to use Neurotec.Biometrics.NMatcher instead
            of using Neurotec.Biometrics.NLMatcher. 
            </remarks>                                                      
        </member>
        <member name="M:Neurotec.Biometrics.NLMatcher.IdentifyNext(System.Byte[])">
            <summary>
            Method to verify one given template with the one that is
            being identified.
            </summary>
            <param name="template">Byte array with face feature template
                                   (Neurotec.Biometrics.NLRecord). This
                                   template must be compressed.</param>
            <returns>
            The matching score.
            </returns>
            <remarks>
            Method returns zero if similarity is less than matching
            threshold, i.e. two face feature templates do not match (see
            ParameterMatchingThreshold and SetParameter method), and is
            greater than or equal to matching threshold otherwise.
            
            
            
            It is recommended to use Neurotec.Biometrics.NMatcher instead
            of using Neurotec.Biometrics.NLMatcher. 
            </remarks>                                                   
        </member>
        <member name="M:Neurotec.Biometrics.NLMatcher.IdentifyEnd">
            <summary>
            Method to end identification procedure.
            </summary>                             
        </member>
        <member name="P:Neurotec.Biometrics.NLMatcher.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NLMatcher.NlmSpeedNativeType">
            <summary>
            Defines the native type of the face matcher speed.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NLMatcher.MatchingThreshold">
            <summary>
            Gets or sets the threshold that distinguishes genuine from
            impostor. For possible values of this parameter see Matching
            threshold, similarity and score section.
            </summary>
            <value>
            The matching threshold. 
            </value>                                                    
        </member>
        <member name="P:Neurotec.Biometrics.NLMatcher.MatchingSpeed">
            <summary>
            Gets or sets matching speed.
            </summary>
            <value>
            One of the NlmSpeed values. 
            </value>                    
        </member>
        <member name="T:Neurotec.Biometrics.NlsMatcher">
            <summary>
            Provides methods and properties for comparing Neurotechnology
            Faces Templates (NLTemplates), encapsulated in
            Neurotechnology Faces Matcher (NlsMatcher) object.
            </summary>
            Note
            This class and all methods in this class are obsolete. Use
            NMatcher instead.                                            
        </member>
        <member name="F:Neurotec.Biometrics.NlsMatcher.PartNone">
            <summary>
            Identifier specifying that retrieving or setting parameter
            for NlsMatcher.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NlsMatcher.PartNlm">
            <summary>
            Identifier specifying that retrieving or setting parameter
            for NLMatcher contained in NlsMatcher.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NlsMatcher.ParameterMatchingThreshold">
            <summary>Identifier specifying matching threshold (biggest allowed FAR) parameter of type int. Parameter value is equal to - 12 * log10(FAR) and must be not less than zero (for example, 48 for FAR = 0.01%).</summary>
        </member>
        <member name="M:Neurotec.Biometrics.NlsMatcher.#ctor">
            <summary>Initializes a new instance of the NlsMatcher class.</summary>
        </member>
        <member name="M:Neurotec.Biometrics.NlsMatcher.Verify(System.IntPtr,System.Int32,System.IntPtr,System.Int32)">
            <summary>
            Compares two NLTempalte.
            </summary>
            <param name="template1">Pointer to memory block that
                                    contains packed NLTemplate or
                                    NLRecord.</param>
            <param name="template1Size">The template size.</param>
            <param name="template2">Pointer to memory block that
                                    contains packed NLTemplate or
                                    NLRecord.</param>
            <param name="template2Size">The template size.</param>
            <returns>
            The matching score.
            </returns>
            <remarks>
            Method returns zero if similarity is less than matching
            threshold, i.e. two NLTemplates do not match (see
            ParameterMatchingThreshold and SetParameter method), and is
            greater than or equal to matching threshold otherwise. 
            </remarks>                                                 
        </member>
        <member name="M:Neurotec.Biometrics.NlsMatcher.Verify(System.IntPtr,System.Int32,System.IntPtr,System.Int32,Neurotec.Biometrics.NlsmMatchDetails@)">
            <summary>
            Compares two NLTempalte.
            </summary>
            <param name="template1">Pointer to memory block that
                                    contains packed NLTemplate or
                                    NLRecord.</param>
            <param name="template1Size">The template size.</param>
            <param name="template2">Pointer to memory block that
                                    contains packed NLTemplate or
                                    NLRecord.</param>
            <param name="template2Size">The template size.</param>
            <param name="matchDetails">The NlsmMatchDetails object.</param>
            <returns>
            The matching score.
            </returns>
            <remarks>
            Method returns zero if similarity is less than matching
            threshold, i.e. two NLTemplates do not match (see
            ParameterMatchingThreshold and SetParameter method), and is
            greater than or equal to matching threshold otherwise. 
            </remarks>                                                     
        </member>
        <member name="M:Neurotec.Biometrics.NlsMatcher.Verify(System.Byte[],System.Byte[])">
            <summary>
            Compares two NLTempalte.
            </summary>
            <param name="template1">The byte array that contains packed NLTemplate
                                    or NLRecord.</param>
            <param name="template2">The byte array that contains packed NLTemplate
                                    or NLRecord.</param>
            <returns>
            The matching score.
            </returns>
            <remarks>
            Method returns zero if similarity is less than matching
            threshold, i.e. two NLTemplates do not match (see
            ParameterMatchingThreshold and SetParameter method), and is
            greater than or equal to matching threshold otherwise. 
            </remarks>                                                            
        </member>
        <member name="M:Neurotec.Biometrics.NlsMatcher.Verify(System.Byte[],System.Byte[],Neurotec.Biometrics.NlsmMatchDetails@)">
            <summary>
            Compares two NLTempalte.
            </summary>
            <param name="template1">The byte array that contains
                                    packed NLTemplate or NLRecord.</param>
            <param name="template2">The byte array that contains
                                    packed NLTemplate or NLRecord.</param>
            <param name="matchDetails">The NlsmMatchDetails object.</param>
            <returns>
            The matching score.
            </returns>
            <remarks>
            Method returns zero if similarity is less than matching
            threshold, i.e. two NLTemplates do not match (see
            ParameterMatchingThreshold and SetParameter method), and is
            greater than or equal to matching threshold otherwise. 
            </remarks>                                                     
        </member>
        <member name="M:Neurotec.Biometrics.NlsMatcher.IdentifyStart(System.IntPtr,System.Int32)">
            <summary>
            Starts identification.
            </summary>
            <param name="template">Pointer to memory block that
                                   contains packed NLTemplate or
                                   NLRecord.</param>
            <param name="templateSize">The template size.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NlsMatcher.IdentifyStart(System.IntPtr,System.Int32,Neurotec.Biometrics.NlsmMatchDetails@)">
            <summary>
            Starts identification.
            </summary>
            <param name="template">Pointer to memory block that
                                   contains packed NLTemplate or
                                   NLRecord.</param>
            <param name="templateSize">The template size.</param>
            <param name="matchDetails">The NlsmMatchDetails object.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NlsMatcher.IdentifyStart(System.Byte[])">
            <summary>
            Starts identification.
            </summary>
            <param name="template">The byte array that contains packed NLTemplate
                                   or NLRecord.</param>                          
        </member>
        <member name="M:Neurotec.Biometrics.NlsMatcher.IdentifyStart(System.Byte[],Neurotec.Biometrics.NlsmMatchDetails@)">
            <summary>
            Starts identification.
            </summary>
            <param name="template">The byte array that contains
                                   packed NLTemplate or NLRecord.</param>
            <param name="matchDetails">The NlsmMatchDetails object.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NlsMatcher.IdentifyNext(System.IntPtr,System.Int32)">
            <summary>
            Compares the specified NLTemplate with one identification was
            started with.
            </summary>
            <param name="template">Pointer to memory block that
                                   contains packed NLTemplate or
                                   NLRecord.</param>
            <param name="templateSize">The template size.</param>
            <returns>
            The matching score.
            </returns>
            <remarks>
            Method returns zero if similarity is less than matching
            threshold, i.e. two NLTemplates do not match (see
            ParameterMatchingThreshold and SetParameter method), and is
            greater than or equal to matching threshold otherwise. 
            </remarks>                                                   
        </member>
        <member name="M:Neurotec.Biometrics.NlsMatcher.IdentifyNext(System.IntPtr,System.Int32,Neurotec.Biometrics.NlsmMatchDetails)">
            <summary>
            Compares the specified NLTemplate with one identification was
            started with.
            </summary>
            <param name="template">Pointer to memory block that
                                   contains packed NLTemplate or
                                   NLRecord.</param>
            <param name="templateSize">The template size.</param>
            <param name="matchDetails">The NlsmMatchDetails object.</param>
            <returns>
            The matching score.
            </returns>
            <remarks>
            Method returns zero if similarity is less than matching
            threshold, i.e. two NLTemplates do not match (see
            ParameterMatchingThreshold and SetParameter method), and is
            greater than or equal to matching threshold otherwise. 
            </remarks>                                                     
        </member>
        <member name="M:Neurotec.Biometrics.NlsMatcher.IdentifyNext(System.Byte[])">
            <summary>
            Compares the specified NLTemplate with one identification was
            started with.
            </summary>
            <param name="template">The byte array that contains packed NLTemplate
                                   or NLRecord.</param>
            <returns>
            The matching score.
            </returns>
            <remarks>
            Method returns zero if similarity is less than matching
            threshold, i.e. two NLTemplates do not match (see
            ParameterMatchingThreshold and SetParameter method), and is
            greater than or equal to matching threshold otherwise. 
            </remarks>                                                           
        </member>
        <member name="M:Neurotec.Biometrics.NlsMatcher.IdentifyNext(System.Byte[],Neurotec.Biometrics.NlsmMatchDetails)">
            <summary>
            Compares the specified NLTemplate with one identification was
            started with.
            </summary>
            <param name="template">The byte array that contains
                                   packed NLTemplate or NLRecord.</param>
            <param name="matchDetails">The NlsmMatchDetails object.</param>
            <returns>
            The matching score.
            </returns>
            <remarks>
            Method returns zero if similarity is less than matching
            threshold, i.e. two NLTemplates do not match (see
            ParameterMatchingThreshold and SetParameter method), and is
            greater than or equal to matching threshold otherwise. 
            </remarks>                                                     
        </member>
        <member name="M:Neurotec.Biometrics.NlsMatcher.IdentifyEnd">
            <summary>Ends identification process.</summary>
        </member>
        <member name="P:Neurotec.Biometrics.NlsMatcher.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NlsMatcher.MatchingThreshold">
            <summary>
            Gets or sets the matching threshold.
            </summary>
            <value>
            A matching threshold.
            </value>                            
        </member>
        <member name="P:Neurotec.Biometrics.NlsMatcher.MatchingSpeed">
            <summary>
            Gets or sets matching speed.
            </summary>
            <value>
            One of the NlmSpeed values.
            </value>                    
        </member>
        <member name="T:Neurotec.Biometrics.NlsmFaceMatchDetails">
            <summary>
            Specifies the Faces matching information.
            </summary>                               
        </member>
        <member name="P:Neurotec.Biometrics.NlsmFaceMatchDetails.Score">
            <summary>Specifies score of matched fingerprints.</summary>
            <value>The score of matched NLTemplates.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NlsmFaceMatchDetails.MatchedIndex">
            <summary>Specifies the zero-based index in the second NLTemplate.</summary>
            <value>The index of Face template in NLTemplate.</value>
            <remarks>-1 no match found. The second template in the identification comes from the IdentifyNext  method. The first template comes from the IdentifyStart method.</remarks>
        </member>
        <member name="T:Neurotec.Biometrics.NlsmMatchDetails">
            <summary>
            Specifies the matching information.
            </summary>                         
        </member>
        <member name="M:Neurotec.Biometrics.NlsmMatchDetails.Deserialize(System.IntPtr,System.Int32)">
            <summary>
            Deserializes NlsmMatchDetails.
            </summary>
            <param name="pBuffer">Pointer to memory buffer that
                                 contains serialized
                                 NlsmMatchDetails.</param>
            <param name="bufferSize">Size of memory buffer that
                                       contains serialized
                                       NlsmMatchDetails.</param>
            <returns>
            The NlsmMatchDetails structure.
            </returns>                                           
        </member>
        <member name="M:Neurotec.Biometrics.NlsmMatchDetails.Deserialize(System.Byte[])">
            <summary>
            Deserializes NlsmMatchDetails.
            </summary>
            <param name="buffer">The serialized NlsmMatchDetails.</param>
            <returns>
            The NlsmMatchDetails structure.
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NlsmMatchDetails.Deserialize(Neurotec.IO.NBuffer)">
            <summary>
            Deserializes NlsmMatchDetails.
            </summary>
            <param name="buffer">The serialized NlsmMatchDetails.</param>
            <returns>
            The NlsmMatchDetails structure.
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NlsmMatchDetails.Deserialize(System.IO.Stream)">
            <summary>
            Deserializes NlsmMatchDetails.
            </summary>
            <param name="stream">Stream that contains serialized
                                 NlsmMatchDetails.</param>
            <returns>
            The NlsmMatchDetails structure. 
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NlsmMatchDetails.Serialize">
            <summary>
            Serializes NlsmMatchDetails.
            </summary>
            <returns>
            The serialized NlsmMatchDetails.
            </returns>                      
        </member>
        <member name="M:Neurotec.Biometrics.NlsmMatchDetails.Serialize(System.IO.Stream)">
            <summary>
            Serializes NlsmMatchDetails.
            </summary>
            <param name="stream">Stream with serialized
                                 NlsmMatchDetails.</param>
        </member>
        <member name="P:Neurotec.Biometrics.NlsmMatchDetails.Score">
            <summary>Gets the score of the matched faces.</summary>
            <value>The score of the matched faces.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NlsmMatchDetails.MatchedIndex">
            <summary>
            Gets the score of the matched faces.
            </summary>
            <value>
            The index of the matched faces.
            </value>                            
        </member>
        <member name="P:Neurotec.Biometrics.NlsmMatchDetails.Faces">
            <summary>
            Gets the collection of NlsmFaceMatchDetails structures.
            </summary>
            <value>
            The NlsmMatchDetails.NlsmFaceMatchDetailsCollection object.
            </value>                                                   
        </member>
        <member name="T:Neurotec.Biometrics.NlsmMatchDetails.NlsmFaceMatchDetailsCollection">
            <summary>
            Specifies face matching details collection.
            </summary>                                 
        </member>
        <member name="M:Neurotec.Biometrics.NlsmMatchDetails.NlsmFaceMatchDetailsCollection.Contains(Neurotec.Biometrics.NlsmFaceMatchDetails)">
            <summary>Determines whether the collection contains a NlsmFaceMatchDetails.</summary>
            <param name="value">The NlsmFaceMatchDetails to locate in the NlsmMatchDetails.NlsmFaceMatchDetailsCollection</param>
            <returns>true if the finger match details is found in the NlsmMatchDetails.NlsmFaceMatchDetailsCollection; otherwise, false.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NlsmMatchDetails.NlsmFaceMatchDetailsCollection.IndexOf(Neurotec.Biometrics.NlsmFaceMatchDetails)">
            <summary>Returns the index within the collection of the finger match details.</summary>
            <param name="value">A NlsmFaceMatchDetails object.</param>
            <returns>The zero-based index of the NlsmFaceMatchDetails in the collection.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NlsmMatchDetails.NlsmFaceMatchDetailsCollection.GetEnumerator">
            <summary>
            \Returns a reference to an enumerator object, which is used
            to iterate over the NlsmFaceMatchDetailsCollection.
            </summary>
            <returns>
            Reference to the IEnumerator object, which is used to iterate
            over the NlsmFaceMatchDetailsCollection.
            </returns>                                                   
        </member>
        <member name="P:Neurotec.Biometrics.NlsmMatchDetails.NlsmFaceMatchDetailsCollection.Item(System.Int32)">
            <summary>
            Gets the member from collection by index.
            </summary>
            <param name="index">The zero\-based index of the element</param>
            <returns>
            A NlsmFaceMatchDetails structure. 
            </returns>                                                      
        </member>
        <member name="P:Neurotec.Biometrics.NlsmMatchDetails.NlsmFaceMatchDetailsCollection.Count">
            <summary>Gets the number of items in the collection.</summary>
            <value>The number of items in the collection</value>
        </member>
        <member name="T:Neurotec.Biometrics.NMMatchDetails">
            <summary>
            Represents details of matching performed with NMMatcher.
            </summary>
            <remarks>
            This class does not have constructor. NMMatchDetails object
            is created using
            Neurotec.Biometrics.NMatcher.IdentifyStart@IntPtr@int method.
            To change NMMatchDetails values,
            Neurotec.Biometrics.NMatcher.IdentifyNext@IntPtr@int method is
            used.
            </remarks>                                                    
        </member>
        <member name="M:Neurotec.Biometrics.NMMatchDetails.Deserialize(System.IntPtr,System.Int32)">
            <summary>
            Deserializes NMMatchDetails.
            </summary>
            <param name="pBuffer">Pointer to memory buffer that
                                 contains serialized
                                 NMMatchDetails.</param>
            <param name="bufferSize">Size of memory buffer that
                                       contains serialized
                                       NMMatchDetails.</param>
            <returns>
            The NMMatchDetails structure.
            </returns>                                           
        </member>
        <member name="M:Neurotec.Biometrics.NMMatchDetails.Deserialize(System.Byte[])">
            <summary>
            Deserializes NMMatchDetails.
            </summary>
            <param name="buffer">The serialized NMMatchDetails.</param>
            <returns>
            The NMMatchDetails structure.
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NMMatchDetails.Deserialize(Neurotec.IO.NBuffer)">
            <summary>
            Deserializes NMMatchDetails.
            </summary>
            <param name="buffer">The serialized NMMatchDetails.</param>
            <returns>
            The NMMatchDetails structure.
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NMMatchDetails.Deserialize(System.IO.Stream)">
            <summary>
            Deserializes NMMatchDetails.
            </summary>
            <param name="stream">Stream that contains serialized
                                 NMMatchDetails</param>
            <returns>
            The NMMatchDetails structure.
            </returns>                                          
        </member>
        <member name="M:Neurotec.Biometrics.NMMatchDetails.Serialize">
            <summary>
            Serializes NMMatchDetails.
            </summary>
            <returns>
            The serialized NMMatchDetails.
            </returns>                    
        </member>
        <member name="M:Neurotec.Biometrics.NMMatchDetails.Serialize(System.IO.Stream)">
            <summary>
            Serializes NMMatchDetails.
            </summary>
            <param name="stream">Stream with serialized NMMatchDetails.</param>
        </member>
        <member name="P:Neurotec.Biometrics.NMMatchDetails.Score">
            <summary>
            Gets score of matched NTemplate templates
            </summary>
            <value>
            Integer value which represents the score of matched NTemplate
            templates.
            </value>                                                     
        </member>
        <member name="P:Neurotec.Biometrics.NMMatchDetails.FingersMatchDetails">
            <summary>Gets details of fingers matching.</summary>
            <value>A NfsmMatchDetails that represents the details of finger matching.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NMMatchDetails.FacesMatchDetails">
            <summary>
            Gets faces matching details.
            </summary>
            <value>
            A NlsmMatchDetails that represents the details of faces
            matching.
            </value>                                               
        </member>
        <member name="P:Neurotec.Biometrics.NMMatchDetails.IrisesMatchDetails">
            <summary>
            Gets details of irises matching.
            </summary>
            <value>
            NesmMatchDetails that represents the details of irises
            matching.
            </value>                                              
        </member>
        <member name="P:Neurotec.Biometrics.NMMatchDetails.PalmsMatchDetails">
            <summary>
            Gets details of palms matching.
            </summary>
            <value>
            NfsmMatchDetails that represents the details of palms
            matching. 
            </value>                                             
        </member>
        <member name="T:Neurotec.Biometrics.NBiometricAttributes">
            <summary>
            Represents the biometric attributes.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NBiometricAttributes.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NBiometricAttributes.BiometricType">
            <summary>
            Gets the biometric type.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NBiometricAttributes.Status">
            <summary>
            Gets or sets the biometric status.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NBiometricAttributes.Quality">
            <summary>
            Gets or sets the quality.
            </summary>
        </member>
        <member name="T:Neurotec.Biometrics.NBiometrics">
            <summary>
            Provides methods for retrieving NBiometrics Library
            information.
            </summary>                                         
        </member>
        <member name="F:Neurotec.Biometrics.NBiometrics.DllName">
            <summary>Name of DLL containing unmanaged part of this class.</summary>
        </member>
        <member name="M:Neurotec.Biometrics.NBiometrics.GetInfo">
            <summary>Retrieves information about the library.</summary>
            <returns>Returns NLibraryInfo structure with library information.</returns>
        </member>
        <member name="P:Neurotec.Biometrics.NBiometrics.NativeModule">
            <summary>
            Gets or sets a pointer to the function that retrieves NModule object for the specified module name.
            </summary>
            <value>
            A pointer to the function that retrieves NModule object for the specified module name.
            </value>                                                                                           
        </member>
        <member name="T:Neurotec.Biometrics.NBiometricType">
            <summary>
            Specifies the type of biometric data.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricType.None">
            <summary>
            Undefined.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricType.MultipleBiometrics">
            <summary>
            Multiple biometrics.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricType.Face">
            <summary>
            Face matching.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricType.FacialFeatures">
            <summary>
            Facial features (same as face).
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricType.Voice">
            <summary>
            Voice matching.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricType.Finger">
            <summary>
            Finger matching.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricType.Fingerprint">
            <summary>
            Fingerprint matching (same as finger).
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricType.Iris">
            <summary>
            Iris matching.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricType.Retina">
            <summary>
            Retina mathcing.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricType.HandGeometry">
            <summary>
            Hand geometry.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricType.SignatureOrSign">
            <summary>
            Signature or sign.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricType.SignatureDynamics">
            <summary>
            Signature dynamics (same as signature or sign).
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricType.Keystroke">
            <summary>
            Keystroke matching.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricType.KeystrokeDynamics">
            <summary>
            Keystroke dynamics (same as keystroke).
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricType.LipMovement">
            <summary>
            Lip movement.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricType.ThermalFace">
            <summary>
            Thermal face matching.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricType.ThermalHand">
            <summary>
            Thermal hand matching.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricType.ThermalFaceImage">
            <summary>
            Thermal face image (same as thermal face).
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricType.ThermalHandImage">
            <summary>
            Thermal hand image (same as thermal hand).
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricType.Gait">
            <summary>
            Gait matching.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricType.Scent">
            <summary>
            Scent matching.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricType.BodyOdor">
            <summary>
            Body odor (same as scent).
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricType.Dna">
            <summary>
            DNA matching.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricType.Ear">
            <summary>
            Ear matching.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricType.EarShape">
            <summary>
            Ear shape (same as ear).
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricType.FingerGeometry">
            <summary>
            Finger geometry.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricType.Palm">
            <summary>
            Palm mathcing.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricType.PalmPrint">
            <summary>
            Palm print (same as palm).
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricType.Vein">
            <summary>
            Vein matching.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricType.VeinPattern">
            <summary>
            Vein patter (same as vein).
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricType.Foot">
            <summary>
            Foot mathcing.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricType.FootPrint">
            <summary>
            Foot print (same as foot).
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricType.PalmGeometry">
            <summary>
            Palm geometry.
            </summary>
        </member>
        <member name="T:Neurotec.Biometrics.NBiometricSubtype">
            <summary>
            Specifies the subtype of biometric data.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricSubtype.None">
            <summary>
            Undefined.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricSubtype.Left">
            <summary>
            Left.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricSubtype.Right">
            <summary>
            Right.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricSubtype.LeftThumb">
            <summary>
            Left thumb.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricSubtype.LeftPointerFinger">
            <summary>
            Left pointer finger.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricSubtype.LeftMiddleFinger">
            <summary>
            Left pointer finger.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricSubtype.LeftRingFinger">
            <summary>
            Left ring finger.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricSubtype.LeftLittleFinger">
            <summary>
            Left little finger.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricSubtype.RightThumb">
            <summary>
            Right thumb.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricSubtype.RightPointerFinger">
            <summary>
            Right pointer finger.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricSubtype.RightMiddleFinger">
            <summary>
            Right middle finger.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricSubtype.RightRingFinger">
            <summary>
            Right ring finger.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricSubtype.RightLittleFinger">
            <summary>
            Right little finger.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricSubtype.LeftPalm">
            <summary>
            Left palm.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricSubtype.LeftBackOfHand">
            <summary>
            Left back of hand.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricSubtype.LeftWrist">
            <summary>
            Left wrist.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricSubtype.RightPalm">
            <summary>
            Right palm.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricSubtype.RightBackOfHand">
            <summary>
            Right back of hand.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricSubtype.RightWrist">
            <summary>
            Right wrist.
            </summary>
        </member>
        <member name="T:Neurotec.Biometrics.NBiometricStatus">
            Enumerates biometric status values. These values are returned
            by NBiometricDevice.
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricStatus.None">
            <paraattr align="justify">
            Indicates that device is performing a concrete operation and
            can not return status value. E.g., fingerprint is swiped on a
            fingerprint scanner (operation is not finished yet and
            NBiometricDevice can not return any other value than None).
            </paraattr>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricStatus.Ok">
            Indicates succeeded operation.
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricStatus.Canceled">
            Indicates canceled operation.
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricStatus.Timeout">
            Indicates that operation timed-out.
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricStatus.CleaningNeeded">
            Indicates that biometric device should be cleaned.
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricStatus.ObjectsNotRemoved">
            Indicates that object(s) was not removed after\
            NBiometricDevice finished operation.
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricStatus.ObjectMissing">
            Indicates that object is missing.
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricStatus.ObjectNotFound">
            Indicates that object(s) was not found.
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricStatus.TooFewObjects">
            <paraattr align="justify">
            Indicates that too few objects was provided for device to
            succeed its operation. E.g., not enough fingerprints were
            scanned.
            </paraattr>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricStatus.TooManyObjects">
            Indicates that too many objects were provided for
            NBiometricDevice to perform operation.
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricStatus.BadObjectSequence">
            Indicates sequence of bad object(s).
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricStatus.SpoofDetected">
            Indicates that spoof object was detected.
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricStatus.BadObject">
            Indicates bad object.
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricStatus.TooSoft">
            Indicates that fingerprint was placed too soft on a device.
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricStatus.TooHard">
            Indicates that fingerprint was placed too hard on a device.
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricStatus.BadPosition">
            Indicates bad fingerprint position.
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricStatus.TooNorth">
            Indicated that object was too north from device.
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricStatus.TooEast">
            Indicated that object was too east from device.
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricStatus.TooSouth">
            Indicated that object was too south from device.
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricStatus.TooWest">
            Indicated that object was too west from device.
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricStatus.TooClose">
            Indicated that object was too close to device.
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricStatus.TooFar">
            Indicated that object was too far from device.
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricStatus.BadSpeed">
            <paraattr align="justify">
            Indicates too slow/fast moving object during operation. E.g.,
            fingerprint was swiped too slow (too fast) when fingerprint
            scanning operation was performed on a scanner.
            </paraattr>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricStatus.TooSlow">
            <paraattr align="justify">
            Indicates that object was moving too slow. E.g., fingerprint
            was swiped through scanner too slow.
            </paraattr>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricStatus.TooFast">
            <paraattr align="justify">
            Indicates that object was moving too fast. E.g., fingerprint
            was swiped through scanner too fast.
            </paraattr>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricStatus.BadSize">
            Indicates object's bad size.
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricStatus.TooShort">
            Indicates that object is too short for NBiometricDevice to
            perform operation.
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricStatus.TooLong">
            Indicates that object is too long for NBiometricDevice to
            perform operation.
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricStatus.TooNarrow">
            Indicates that object is too narrow for NBiometricDevice to
            perform operation.
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricStatus.TooWide">
            Indicates that object is too wide for NBiometricDevice to
            perform operation.
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricStatus.TooSkewed">
            Indicates that object is too skewed.
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricStatus.WrongDirection">
            Indicates that object was moving to wrong direction.
        </member>
        <member name="T:Neurotec.Biometrics.NFImpressionType">
            <summary>
            Specifies the impression types.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFImpressionType.LiveScanPlain">
            <summary>Live-scanned plain fingerprint.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFImpressionType.LiveScanRolled">
            <summary>Live-scanned rolled fingerprint.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFImpressionType.NonliveScanPlain">
            <summary>Nonlive-scanned (from paper) plain fingerprint.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFImpressionType.NonliveScanRolled">
            <summary>Nonlive-scanned (from paper) rolled fingerprint.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFImpressionType.LatentImpression">
            <summary>Latent impression fingerprint.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFImpressionType.LatentTracing">
            <summary>Latent tracing fingerprint.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFImpressionType.LatentPhoto">
            <summary>Latent photo fingerprint.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFImpressionType.LatentLift">
            <summary>Latent lift fingerprint.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFImpressionType.LiveScanVerticalSwipe">
            <summary>Live-scanned fingerprint by sliding the finger across a "swipe" sensor.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFImpressionType.Swipe">
            <summary>
            Live-scanned fingerprint by sliding the finger across a "swipe" sensor.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFImpressionType.LiveScanContactless">
            <summary>Live-scanned fingerprint using contactless device.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFImpressionType.LiveScanPalm">
            <summary>
            Live scanned palm.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFImpressionType.NonliveScanPalm">
            <summary>
            Non-live scanned palm.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFImpressionType.LatentPalmImpression">
            <summary>
            Latent palm impression.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFImpressionType.LatentPalmTracing">
            <summary>
            Latent palm tracing.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFImpressionType.LatentPalmPhoto">
            <summary>
            Latent palm photo.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFImpressionType.LatentPalmLift">
            <summary>
            Latent palm lift.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFImpressionType.LiveScanOpticalContactPlain">
            <summary>
            Live plain optical scan with contact.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFImpressionType.LiveScanOpticalContactRolled">
            <summary>
            Live rolled optical scan with contact.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFImpressionType.LiveScanNonOpticalContactPlain">
            <summary>
            Live plain non-optical scan with contact.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFImpressionType.LiveScanNonOpticalContactRolled">
            <summary>
            Live rolled non-optical scan with contact.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFImpressionType.LiveScanOpticalContactlessPlain">
            <summary>
            Live plain optical contactless scan.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFImpressionType.LiveScanOpticalContactlessRolled">
            <summary>
            Live rolled optical contactless scan.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFImpressionType.LiveScanNonOpticalContactlessPlain">
            <summary>
            Live plain non-optical contactless scan.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFImpressionType.LiveScanNonOpticalContactlessRolled">
            <summary>
            Live rolled non-optical contactless scan.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFImpressionType.Other">
            <summary>
            Other impression types.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFImpressionType.Unknown">
            <summary>
            Unknown impression type.
            </summary>
        </member>
        <member name="T:Neurotec.Biometrics.NFPosition">
            <summary>Specifies finger position.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.Unknown">
            <summary>Unknown finger.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.RightThumb">
            <summary>Thumb of the right hand.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.RightIndexFinger">
            <summary>Index finger of the right hand.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.RightIndex">
            <summary>Index finger of the right hand.</summary>
            <remarks>It is advised to use RightIndexFinger instead.</remarks>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.RightMiddleFinger">
            <summary>Middle finger of the right hand.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.RightMiddle">
            <summary>Middle finger of the right hand.</summary>
            <remarks>It is advised to use RightMiddleFinger instead.</remarks>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.RightRingFinger">
            <summary>Ring finger of the right hand.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.RightRing">
            <summary>Ring finger of the right hand.</summary>
            <remarks>It is advised to use RightRingFinger instead.</remarks>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.RightLittleFinger">
            <summary>Little finger of the right hand.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.RightLittle">
            <summary>LIttle finger of the right hand.</summary>
            <remarks>It is advised to use RightLittleFinger instead.</remarks>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.LeftThumb">
            <summary>Thumb of the left hand.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.LeftIndexFinger">
            <summary>Index finger of the left hand.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.LeftIndex">
            <summary>Index finger of the left hand.</summary>
            <remarks>It is advised to use LeftIndexFinger instead.</remarks>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.LeftMiddleFinger">
            <summary>Middle finger of the left hand.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.LeftMiddle">
            <summary>Middle finger of the left hand.</summary>
            <remarks>It is advised to use LeftMiddleFinger instead.</remarks>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.LeftRingFinger">
            <summary>Ring finger of the left hand.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.LeftRing">
            <summary>Ring finger of the left hand.</summary>
            <remarks>It is advised to use LeftRingFinger instead.</remarks>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.LeftLittleFinger">
            <summary>Little finger of the left hand.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.LeftLittle">
            <summary>Little finger of the left hand.</summary>
            <remarks>It is advised to use LeftLittleFinger instead.</remarks>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.PlainRightThumb">
            <summary>
            Specifies plain right thumb. 
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.PlainLeftThumb">
            <summary>
            Specifies leftplain thumb. 
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.PlainRightFourFingers">
            <summary>
            Specifies plain right four fingers. 
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.PlainLeftFourFingers">
            <summary>
            Specifies left four fingers.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.PlainThumbs">
            <summary>
            Specifies plain thumbs. 
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.UnknownPalm">
            <summary>
            Unknown palm.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.RightFullPalm">
            <summary>
            Specifies full left palm. 
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.RightWritersPalm">
            <summary>
            Specifies right writers palm. 
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.LeftFullPalm">
            <summary>
            Specifies full left palm.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.LeftWritersPalm">
            <summary>
            Specifies left writers palm.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.RightLowerPalm">
            <summary>
            Specifies right lower palm.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.RightUpperPalm">
            <summary>
            Specifies right upper palm.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.LeftLowerPalm">
            <summary>
            Specifies lower palm.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.LeftUpperPalm">
            <summary>
            Specifies right upper palm.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.RightOther">
            <summary>
            Some other right palm.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.LeftOther">
            Some other left hand palm.
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.RightInterdigital">
            <summary>
            Specifies right interdigital. 
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.RightThenar">
            <summary>
            Specifies right thenar.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.RightHypothenar">
            <summary>
            Specifies right hypothenar.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.LeftInterdigital">
            <summary>
            Specifies left interdigital.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.LeftThenar">
            <summary>
            Specifies left thenar.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.LeftHypothenar">
            <summary>
            Specifies left hypothenar.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.RightIndexMiddleFingers">
            <summary>
            Specifies right index and middle fingers.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.RightMiddleRingFingers">
            <summary>
            Specifies right middle and ring fingers.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.RightRingLittleFingers">
            <summary>
            Specifies right ring and little fingers.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.LeftIndexMiddleFingers">
            <summary>
            Specifies left index and middle fingers.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.LeftMiddleRingFingers">
            <summary>
            Specifies left middle and ring fingers.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.LeftRingLittleFingers">
            <summary>
            Specifies left ring and little fingers.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.RightIndexLeftIndexFingers">
            <summary>
            Specifies right and left index fingers.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.RightIndexMiddleRingFingers">
            <summary>
            Specifies right index, middle and ring fingers.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.RightMiddleRingLittleFingers">
            <summary>
            Specifies right middle, ring and little fingers.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.LeftIndexMiddleRingFingers">
            <summary>
            Specifies left index, middle and ring fingers.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.LeftMiddleRingLittleFingers">
            <summary>
            Specifies left middle, ring and little fingers.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.UnknownTwoFingers">
            <summary>
            Specifies two unknown fingers.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.UnknownThreeFingers">
            <summary>
            Specifies three unknown fingers.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPosition.UnknownFourFingers">
            <summary>
            Specifies four unknown fingers.
            </summary>
        </member>
        <member name="T:Neurotec.Biometrics.NEPosition">
            <summary>
            Holds information on iris image position.
            </summary>
            <remarks>
            When both eyes are retuned (Both), it can be cropped using
            NImage.Crop method. Rectangle coordinates can be retrieved
            using NEAttributes.BoundingRect property. 
            </remarks>
        </member>
        <member name="F:Neurotec.Biometrics.NEPosition.Unknown">
            <summary>Unknown iris position.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NEPosition.Right">
            <summary>
            Right eye.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NEPosition.Left">
            <summary>
            Left eye.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NEPosition.Both">
            Both eyes.
        </member>
        <member name="T:Neurotec.Biometrics.NFPatternClass">
            <summary>Specifies pattern class of the fingerprint.</summary>
            <remarks>This enumeration is implemented according to ANSI/NIST-ITL 1-2000 standard.</remarks>
        </member>
        <member name="F:Neurotec.Biometrics.NFPatternClass.Unknown">
            <summary>Unknown pattern class.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPatternClass.PlainArch">
            <summary>Plain arch pattern class.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPatternClass.TentedArch">
            <summary>Tented arch pattern class.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPatternClass.RadialLoop">
            <summary>Radial loop pattern class.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPatternClass.UlnarLoop">
            <summary>Ulnar loop pattern class.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPatternClass.PlainWhorl">
            <summary>Plain whorl pattern class.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPatternClass.CentralPocketLoop">
            <summary>Central pocket loop pattern class.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPatternClass.DoubleLoop">
            <summary>Double loop pattern class.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPatternClass.AccidentalWhorl">
            <summary>Accidental whorl pattern class.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPatternClass.Whorl">
            <summary>Whorl pattern class.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPatternClass.RightSlantLoop">
            <summary>Right slant loop pattern class.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPatternClass.LeftSlantLoop">
            <summary>Left slant loop pattern class.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPatternClass.Scar">
            <summary>Scar. Pattern class is not available.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFPatternClass.Amputation">
            <summary>Amputation. Pattern class is not available.</summary>
        </member>
        <member name="T:Neurotec.Biometrics.NFMinutiaFormat">
            <summary>
            Specifies formats of minutia. This enumeration allows a
            bitwise combination of its member values.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFMinutiaFormat.None">
            <summary>
            None of other values.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFMinutiaFormat.HasQuality">
            <summary>
            Indicates that Neurotec.Biometrics.NFMinutia.Quality field
            contains meaningful value and is preserved during
            unpacking/packing of NFRecord. 
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFMinutiaFormat.HasCurvature">
            <summary>
            Indicates that Neurotec.Biometrics.NFMinutia.Curvature field
            contains meaningful value and is preserved during
            unpacking/packing of NFRecord. 
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFMinutiaFormat.HasG">
            <summary>
            Indicates that Neurotec.Biometrics.NFMinutia.G field contains
            meaningful value and is preserved during unpacking/packing of
            NFRecord. 
            </summary>
        </member>
        <member name="T:Neurotec.Biometrics.NFMinutiaType">
            <summary>Specifies types of minutia.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFMinutiaType.Unknown">
            <summary>The type of the minutia is unknown.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFMinutiaType.End">
            <summary>The minutia that is an end of a ridge.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFMinutiaType.Bifurcation">
            <summary>The minutia that is a bifurcation of a ridge.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFMinutiaType.Other">
            <summary>
            Other.
            </summary>
        </member>
        <member name="T:Neurotec.Biometrics.NFMinutia">
            <summary>
            The structure contains information of minutia.
            </summary>
        </member>
        <member name="M:Neurotec.Biometrics.NFMinutia.#ctor(System.UInt16,System.UInt16,Neurotec.Biometrics.NFMinutiaType,System.Byte)">
            <summary>
            Initializes a new instance of the NFMinutia class.
            </summary>
            <param name="x">The x coordinate of the minutia.</param>
            <param name="y">The y coordinate of the minutia.</param>
            <param name="type">One of the NFMinutiaType values.</param>
            <param name="angle">The angle of the minutia.</param>      
        </member>
        <member name="M:Neurotec.Biometrics.NFMinutia.#ctor(System.UInt16,System.UInt16,Neurotec.Biometrics.NFMinutiaType,System.Double)">
            <summary>Initializes a new instance of the NFMinutia class.</summary>
            <param name="x">The x - coordinate of the minutia.</param>
            <param name="y">The y - coordinate of the minutia.</param>
            <param name="type">One of the NFMinutiaType values.</param>
            <param name="angle">The angle of the minutia.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NFMinutia.#ctor(System.UInt16,System.UInt16,Neurotec.Biometrics.NFMinutiaType,System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>Initializes a new instance of the NFMinutia class.</summary>
            <param name="x">The x - coordinate of the minutia.</param>
            <param name="y">The y - coordinate of the minutia.</param>
            <param name="type">One of the NFMinutiaType values.</param>
            <param name="angle">The angle of the minutia.</param>
            <param name="quality">The quality of the minutia.</param>
            <param name="curvature">The ridge curvature near minutia.</param>
            <param name="g">The G (ridge density) near minutia.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NFMinutia.#ctor(System.UInt16,System.UInt16,Neurotec.Biometrics.NFMinutiaType,System.Double,System.Byte,System.Byte,System.Byte)">
            <summary>Initializes a new instance of the NFMinutia class.</summary>
            <param name="x">The x - coordinate of the minutia.</param>
            <param name="y">The y - coordinate of the minutia.</param>
            <param name="type">One of the NFMinutiaType values.</param>
            <param name="angle">The angle of the minutia.</param>
            <param name="quality">The quality of the minutia.</param>
            <param name="curvature">The ridge curvature near minutia.</param>
            <param name="g">The G (ridge density) near minutia.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NFMinutia.ToString">
            <summary>
            \Returns a string that represents the current NFMinutia
            object.
            </summary>
            <returns>
            String representation of NFMinutia object.
            </returns>                                             
        </member>
        <member name="M:Neurotec.Biometrics.NFMinutia.ToString(System.String)">
            <summary>
            \Returns a string that represents the current NFMinutia object.
            </summary>
            <param name="format">String format.</param>
            <returns>
            String representation of NFMinutia object. 
            </returns>                                                     
        </member>
        <member name="P:Neurotec.Biometrics.NFMinutia.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NFMinutia.X">
            <summary>
            Gets or sets x coordinate of the minutia.
            </summary>
            <value>
            The X coordinate of the minutia.
            </value>
            <remarks>
            The x coordinate of the minutia is specified in pixels at
            resolution and &quot;X * [NFRecord horizontal resolution] /
            Resolution&quot; cannot be greater than MaxDimension or
            NFRecord width minus one.
            </remarks>
        </member>
        <member name="P:Neurotec.Biometrics.NFMinutia.Y">
            <summary>
            Gets or sets y coordinate of the minutia.
            </summary>
            <value>
            The Y coordinate of the minutia.
            </value>
            <remarks>
            The y coordinate of the minutia is specified in pixels at
            resolution and &quot;Y * [NFRecord vertical resolution] /
            Resolution&quot; cannot be greater than MaxDimension or
            NFRecord width minus one. 
            </remarks>                                               
        </member>
        <member name="P:Neurotec.Biometrics.NFMinutia.Type">
            <summary>Gets or sets the type of the minutia.</summary>
            <value>One of the NFMinutiaType values.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NFMinutia.RawAngle">
            <summary>Gets or sets the raw angle of the minutia.</summary>
            <value>The raw angle of the minutia.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NFMinutia.Angle">
            <summary>Gets or sets the angle of the minutia.</summary>
            <value>The angle of the minutia.</value>
            <remarks>The angle of the minutia is specified in 180/128 degrees units in counterclockwise order and cannot be greater than 256 minus one.</remarks>
        </member>
        <member name="P:Neurotec.Biometrics.NFMinutia.Quality">
            <summary>Gets or sets quality of the minutia.</summary>
            <value>The quality of the minutia.</value>
            <remarks>The quality of the minutia must be in the range [0, 100].The higher it is, the better the quality of the minutia is. If quality of the minutia is unknown it must be set to zero.</remarks>
        </member>
        <member name="P:Neurotec.Biometrics.NFMinutia.Curvature">
            <summary>Gets or sets the ridge curvature near minutia.</summary>
            <value>The ridge curvature near minutia.</value>
            <remarks>If curvature of the minutia is unknown it must be set to 255.</remarks>
        </member>
        <member name="P:Neurotec.Biometrics.NFMinutia.G">
            <summary>Gets or sets the G (ridge density) near minutia.</summary>
            <value>The G (ridge density) near minutia.</value>
            <remarks>If G of the minutia is unknown it must be set to 255.</remarks>
        </member>
        <member name="T:Neurotec.Biometrics.NFRidgeCountsType">
            <summary>Specifies type of ridge counts contained in NFRecord.</summary>
            <remarks>Extracted template with EightNeighborsWithIndexes parameter is bigger than the template extracted with EightNeighbors parameter. Templates extracted with EightNeighborsWithIndexes parameter is faster than the templates extracted with EightNeighbors parameter. Extracted template with FourNeighborsWithIndexes parameter is bigger than the template extracted with FourNeighbors parameter. Templates extracted with FourNeighborsWithIndexes parameter is faster than the templates extracted with FourNeighbors parameter.</remarks>
        </member>
        <member name="F:Neurotec.Biometrics.NFRidgeCountsType.None">
            <summary>The NFRecord does not contain ridge counts.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFRidgeCountsType.FourNeighbors">
            <summary>The NFRecord contains ridge counts to closest minutia in each of the four sectors of each minutia. First sector starts at minutia angle.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFRidgeCountsType.EightNeighbors">
            <summary>The NFRecord contains ridge counts to closest minutia in each of the eight sectors of each minutia. First sector starts at minutia angle.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFRidgeCountsType.FourNeighborsWithIndexes">
            <summary>The NFRecord contains ridge counts to four neighbors of each minutia.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFRidgeCountsType.EightNeighborsWithIndexes">
            <summary>The NFRecord contains ridge counts to eight neighbors of each minutia.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFRidgeCountsType.Unspecified">
            <summary>For internal use.</summary>
        </member>
        <member name="T:Neurotec.Biometrics.NFMinutiaNeighbor">
            <summary>
            The structure contains information of minutia neighbor.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFMinutiaNeighbor.Empty">
            <summary>
            Represents a NFMinutiaNeighbor that is a null reference.
            </summary>                                              
        </member>
        <member name="M:Neurotec.Biometrics.NFMinutiaNeighbor.#ctor(System.Int32,System.Byte)">
            <summary>Initializes a new instance of the NFMinutiaNeighbor class.</summary>
            <param name="index">The index of neighbor.</param>
            <param name="ridgeCount">The ridge count of neighbor.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NFMinutiaNeighbor.ToString">
            <summary>
            \Returns a string that represents the current NFMinutiaNeighbor
            object.
            </summary>
            <returns>
            String representation of NFMinutiaNeighbor object. 
            </returns>                                                     
        </member>
        <member name="M:Neurotec.Biometrics.NFMinutiaNeighbor.ToString(System.String)">
            <summary>
            \Returns a string that represents the current NFMinutiaNeighbor object.
            </summary>
            <param name="format">String format.</param>
            <returns>
            String representation of NFMinutiaNeighbor object. 
            </returns>                                                             
        </member>
        <member name="P:Neurotec.Biometrics.NFMinutiaNeighbor.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NFMinutiaNeighbor.Index">
            <summary>Gets or sets the index of minutia neighbor.</summary>
            <value>The index of minutia neighbor.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NFMinutiaNeighbor.RidgeCount">
            <summary>
            Gets or sets the ridge count between the minutia and minutia
            neighbor.
            </summary>
            <value>
            The ridge count between the minutia and minutia neighbor.
            </value>                                                    
        </member>
        <member name="T:Neurotec.Biometrics.NFCore">
            <summary>
            The structure contains information of core.
            </summary>
        </member>
        <member name="M:Neurotec.Biometrics.NFCore.#ctor(System.UInt16,System.UInt16)">
            <summary>
            Initializes a new instance of the NFCore structure.
            </summary>
            <param name="x">The x \- coordinate of the core. </param>
            <param name="y">The y \- coordinate of the core.</param> 
        </member>
        <member name="M:Neurotec.Biometrics.NFCore.#ctor(System.UInt16,System.UInt16,System.Int32)">
            <summary>Initializes a new instance of the NFCore class.</summary>
            <param name="x">The x - coordinate of the core.</param>
            <param name="y">The y - coordinate of the core.</param>
            <param name="angle">The angle of the core.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NFCore.#ctor(System.UInt16,System.UInt16,System.Double)">
            <summary>Initializes a new instance of the NFCore class.</summary>
            <param name="x">The x - coordinate of the core.</param>
            <param name="y">The y - coordinate of the core.</param>
            <param name="angle">The angle of the core.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NFCore.ToString">
            <summary>
            Retrieves string representation of the specified object.
            </summary>
            <returns>
            String representation of an object.
            </returns>                                              
        </member>
        <member name="M:Neurotec.Biometrics.NFCore.ToString(System.String)">
            <summary>
            Retrieves string representation of the specified object.
            </summary>
            <param name="format">Reserved for future use.</param>
            <returns>
            No tables or formatting elements here!!!
            </returns>                                              
        </member>
        <member name="P:Neurotec.Biometrics.NFCore.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NFCore.X">
            <summary>
            Gets or sets x coordinate of core.
            </summary>
            <value>
            The x coordinate of the core.
            </value>
            <remarks>
            The x coordinate of the core is specified in pixels at resolution and &quot;X * [NFRecord horizontal
            resolution] / Resolution&quot; cannot be greater than MaxDimension or NFRecord width minus one. 
            </remarks>
        </member>
        <member name="P:Neurotec.Biometrics.NFCore.Y">
            <summary>
            Gets or sets y coordinate of core.
            </summary>
            <value>
            The y coordinate of the core.
            </value>
            <remarks>
            The y coordinate of the core is specified in pixels at resolution and &quot;Y * [NFRecord vertical
            resolution] / Resolution&quot; cannot be greater than MaxDimension or NFRecord width minus one. 
            </remarks>
        </member>
        <member name="P:Neurotec.Biometrics.NFCore.RawAngle">
            <summary>Gets or sets raw angle of core</summary>
            <value>The raw angle of the core.</value>
            <remarks>The angle of the core is specified in 180/128 degrees units in counterclockwise order and cannot be less than zero or greater than 256 minus one. The value of -1 can be specified if the angle of the core is unknown.</remarks>
        </member>
        <member name="P:Neurotec.Biometrics.NFCore.Angle">
            <summary>Gets or sets Angle of core.</summary>
            <value>The angle of the core.</value>
        </member>
        <member name="T:Neurotec.Biometrics.NFDelta">
            <summary>
            The structure contains information of delta.
            </summary>
        </member>
        <member name="M:Neurotec.Biometrics.NFDelta.#ctor(System.UInt16,System.UInt16)">
            <summary>
            Initializes a new instance of the NFDelta structure.
            </summary>
            <param name="x">The x \- coordinate of the delta.</param>
            <param name="y">The y \- coordinate of the delta.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NFDelta.#ctor(System.UInt16,System.UInt16,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the NFDelta structure.
            </summary>
            <param name="x">The x \- coordinate of the delta.</param>
            <param name="y">The y \- coordinate of the delta.</param>
            <param name="angle1">The first angle of the delta.</param>
            <param name="angle2">The second angle of the delta.</param>
            <param name="angle3">The third angle of the delta.</param> 
        </member>
        <member name="M:Neurotec.Biometrics.NFDelta.#ctor(System.UInt16,System.UInt16,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the NFDelta structure.
            </summary>
            <param name="x">The x \- coordinate of the delta.</param>
            <param name="y">The y \- coordinate of the delta.</param>
            <param name="angle1">The first angle of the delta.</param>
            <param name="angle2">The second angle of the delta.</param>
            <param name="angle3">The third angle of the delta.</param> 
        </member>
        <member name="M:Neurotec.Biometrics.NFDelta.ToString">
            <summary>
            \Returns a string that represents the current NFDelta object.
            </summary>
            <returns>
            String that represents NFDelta object.
            </returns>                                                   
        </member>
        <member name="M:Neurotec.Biometrics.NFDelta.ToString(System.String)">
            <summary>
            \Returns a string that represents the current NFDelta object.
            </summary>
            <param name="format">Reserved for future use..</param>
            <returns>
            String that represents NFDelta object. 
            </returns>                                                   
        </member>
        <member name="P:Neurotec.Biometrics.NFDelta.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NFDelta.X">
            <summary>
            Gets or sets x coordinate of delta.
            </summary>
            <value>
            The x coordinate of the delta.
            </value>
            <remarks>
            The x coordinate of the delta is specified in pixels at
            resolution and &quot;X * [NFRecord horizontal resolution] /
            Resolution&quot; cannot be greater than MaxDimension or
            NFRecord width minus one.
            </remarks>                                                 
        </member>
        <member name="P:Neurotec.Biometrics.NFDelta.Y">
            <summary>
            Gets or sets y coordinate of delta.
            </summary>
            <value>
            The x coordinate of the delta.
            </value>
            <remarks>
            The y coordinate of the delta is specified in pixels at
            resolution and &quot;Y * [NFRecord vertical resolution] /
            Resolution&quot; cannot be greater than MaxDimension or
            NFRecord width minus one.
            </remarks>                                               
        </member>
        <member name="P:Neurotec.Biometrics.NFDelta.RawAngle1">
            <summary>Gets or sets the first row angle of the delta.</summary>
            <value>The first raw angle of the delta.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NFDelta.Angle1">
            <summary>Gets or sets the first angle of delta.</summary>
            <value>The first angle of the delta.</value>
            <remarks>The angle of the delta is specified in 180/128 degrees units in counterclockwise order and cannot be less than zero or greater than 256 minus one. The value of -1 can be specified if the first angle of the delta is unknown.</remarks>
        </member>
        <member name="P:Neurotec.Biometrics.NFDelta.RawAngle2">
            <summary>Gets or sets the second row angle of the delta.</summary>
            <value>The second raw angle of the delta.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NFDelta.Angle2">
            <summary>Gets or sets the second angle of delta.</summary>
            <value>The second angle of the delta.</value>
            <remarks>The angle of the delta is specified in 180/128 degrees units in counterclockwise order and cannot be less than zero or greater than 256 minus one. The value of -1 can be specified if the first angle of the delta is unknown.</remarks>
        </member>
        <member name="P:Neurotec.Biometrics.NFDelta.RawAngle3">
            <summary>Gets or sets the third row angle of the delta.</summary>
            <value>The third raw angle fog the delta.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NFDelta.Angle3">
            <summary>Gets or sets the third angle of delta.</summary>
            <value>The third angle of the delta.</value>
            <remarks>The angle of the delta is specified in 180/128 degrees units in counterclockwise order and cannot be less than zero or greater than 256 minus one. The value of -1 can be specified if the first angle of the delta is unknown.</remarks>
        </member>
        <member name="T:Neurotec.Biometrics.NFDoubleCore">
            <summary>
            The structure contains information of double core.
            </summary>
        </member>
        <member name="M:Neurotec.Biometrics.NFDoubleCore.#ctor(System.UInt16,System.UInt16)">
            <summary>
            Initializes a new instance of the NFDoubleCore class.
            </summary>
            <param name="x">The x coordinate of the double core.</param>
            <param name="y">The y coordinate of the double core.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NFDoubleCore.ToString">
            <summary>
            \Returns a string that represents the current NFDoubleCore
            object.
            </summary>
            <returns>
            String that represents NFDoubleCore object.
            </returns>                                                
        </member>
        <member name="M:Neurotec.Biometrics.NFDoubleCore.ToString(System.String)">
            <summary>
            \Returns a string that represents the current NFDoubleCore object.
            </summary>
            <param name="format">Reserved for future use.</param>
            <returns>
            String that represents NFDoubleCore object. 
            </returns>                                                        
        </member>
        <member name="P:Neurotec.Biometrics.NFDoubleCore.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NFDoubleCore.X">
            <summary>
            Gets or sets x coordinate of the double core.
            </summary>
            <value>
            The X coordinate of the double core.
            </value>                                     
        </member>
        <member name="P:Neurotec.Biometrics.NFDoubleCore.Y">
            <summary>
            Gets or sets y coordinate of the double core.
            </summary>
            <value>
            The Y coordinate of the double core.
            </value>                                     
        </member>
        <member name="T:Neurotec.Biometrics.NLFeaturePoint">
            <summary>
            Structure defining facial feature point.
            </summary>
        </member>
        <member name="M:Neurotec.Biometrics.NLFeaturePoint.#ctor(System.UInt16,System.UInt16,System.UInt16)">
            <summary>
            Initializes a new instance of NLFeaturePoint structure.
            </summary>
            <param name="code">Feature code.</param>
            <param name="x">X-coordinate of the the feature point.</param>
            <param name="y">Y-coordinate of the the feature point.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NLFeaturePoint.#ctor(System.UInt16,System.UInt16,System.UInt16,System.Byte)">
            <summary>
            Initializes a new instance of NLFeaturePoint structure.
            </summary>
            <param name="code">Feature code.</param>
            <param name="x">X-coordinate of the the feature point.</param>
            <param name="y">Y-coordinate of the the feature point.</param>
            <param name="confidence">Feature confidence.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NLFeaturePoint.ToString">
            <summary>
            Retrieves a string representation of the object.
            </summary>
            <returns>
            A string representation of an object.
            </returns>                                              
        </member>
        <member name="M:Neurotec.Biometrics.NLFeaturePoint.ToString(System.String)">
            <summary>
            Retrieves a string representation of the object.
            </summary>
            <param name="format">String format</param>
            <returns>
            A string representation of an object. 
            </returns>                                      
        </member>
        <member name="P:Neurotec.Biometrics.NLFeaturePoint.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NLFeaturePoint.Code">
            <summary>
            Gets or sets the feature code.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NLFeaturePoint.X">
            <summary>
            Gets or sets the X-coordinate of the feature point.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NLFeaturePoint.Y">
            <summary>
            Gets or sets the Y-coordinate of the feature point.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NLFeaturePoint.Confidence">
            <summary>
            Gets or sets the feature confidence.
            </summary>
        </member>
        <member name="T:Neurotec.Biometrics.NGender">
            <summary>
            Enumerates gender constants.
            </summary>
            <remarks>
            See NGender in Reference (C/C++) chapter.
            </remarks>
        </member>
        <member name="F:Neurotec.Biometrics.NGender.Unspecified">
            <summary>
            Unspecified gender.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NGender.Male">
            <summary>
            Male.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NGender.Female">
            <summary>
            Female.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NGender.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="T:Neurotec.Biometrics.NLProperties">
            <summary>
            Enumerates basic face properties constants
            </summary>
            <remarks>
            See NLProperties in Reference (C/C++) chapter.
            </remarks>
        </member>
        <member name="F:Neurotec.Biometrics.NLProperties.NotSpecified">
            <summary>
            Face properties not specified.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NLProperties.Specified">
            <summary>
            Face properties specified.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NLProperties.Glasses">
            <summary>
            Wearing glasses.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NLProperties.Moustache">
            <summary>
            Moustaches.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NLProperties.Beard">
            <summary>
            Beard.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NLProperties.TeethVisible">
            <summary>
            Teeth are visible.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NLProperties.Blink">
            <summary>
            Eye blink.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NLProperties.MouthOpen">
            <summary>
            Mouth is open.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NLProperties.LeftEyePatch">
            <summary>
            Patch on left eye.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NLProperties.RightEyePatch">
            <summary>
            Patch on right eye.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NLProperties.BothEyePatch">
            <summary>
            Patch on both eyes.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NLProperties.DarkGlasses">
            <summary>
            Wearing dark glasses.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NLProperties.DistortingCondition">
            <summary>
            Distorting conditons.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NLProperties.Hat">
            <summary>
            Wearing a hat.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NLProperties.Scarf">
            <summary>
            Wearing a scarf.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NLProperties.NoEar">
            <summary>
            One ear missing.
            </summary>
        </member>
        <member name="T:Neurotec.Biometrics.NLExpression">
            <summary>
            Enumerates facial expression constants.
            </summary>
            <remarks>
            See NLExpression in Reference (C/C++) chapter.
            </remarks>
        </member>
        <member name="F:Neurotec.Biometrics.NLExpression.Unspecified">
            <summary>
            Unspecified expression.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NLExpression.Neutral">
            <summary>
            Neutral.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NLExpression.Smile">
            <summary>
            Smiling.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NLExpression.SmileOpenedJaw">
            <summary>
            Smiling with jaw open.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NLExpression.RaisedBrows">
            <summary>
            Eyebrows raised.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NLExpression.EyesAway">
            <summary>
            Eyes looking away.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NLExpression.Squinting">
            <summary>
            Squinting.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NLExpression.Frowning">
            <summary>
            Frowning.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NLExpression.Unknown">
            <summary>
            Unknown expression.
            </summary>
        </member>
        <member name="T:Neurotec.Biometrics.NBiometricTypes">
            <summary>
            Defines biometric types used by Neurotechnology components..
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricTypes.QualityMin">
            Minimal quality.
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricTypes.QualityMax">
            Maximal quality.
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricTypes.QualityUnknown">
            Unknown quality.
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricTypes.QualityFailed">
            Failed quality.
        </member>
        <member name="F:Neurotec.Biometrics.NBiometricTypes.PhraseIdUnknown">
            Unknown phrase ID.
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsBiometricTypeValid(Neurotec.Biometrics.NBiometricType)">
            <summary>
            Checks whether the value passed as a parameter is defined in
            NBiometricType.
            </summary>
            <param name="value">One of NBiometricType values to check.</param>
            <returns>
            Bool type value. 
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsBiometricSubtypeValid(Neurotec.Biometrics.NBiometricSubtype)">
            <summary>
            Checks whether the value passed as a parameter is defined in
            NBiometricSubtype.
            </summary>
            <param name="value">One of NBiometricSubtype values to
                                check.</param>
            <returns>
            Bool type value. 
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsBiometricStatusValid(Neurotec.Biometrics.NBiometricStatus)">
            <summary>
            Checks whether the value passed as a parameter is defined in
            NBiometricStatus.
            </summary>
            <param name="value">One of NBiometricStatus values to check.</param>
            <returns>
            Bool type value.
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsBiometricStatusFinal(Neurotec.Biometrics.NBiometricStatus)">
            <summary>
            Checks whether the biometric status is final.
            </summary>
            <param name="value">One of NBiometricStatus values to check.</param>
            <returns>NTrue if the value is final; else NFalse.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsImpressionTypeValidFinger(Neurotec.Biometrics.NFImpressionType)">
            <summary>
            Checks whether the specified value is a valid fingerprint.
            </summary>
            <param name="value">One of NFImpressionType values to check.</param>
            <returns>
            <paraattr align="justify">
            Bool type value.
            </paraattr>
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsImpressionTypeValidPalm(Neurotec.Biometrics.NFImpressionType)">
            <summary>
            Checks whether the specified value is a valid palmprint.
            </summary>
            <param name="value">One of NFImpressionType values to check.</param>
            <returns>
            <paraattr align="justify">
            Bool type value.
            </paraattr>
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsImpressionTypeValid(Neurotec.Biometrics.NFImpressionType)">
            <summary>
            Checks whether the value passed as a parameter is a valid NFImpressionType
            value.
            </summary>
            <param name="value">One of NFImpressionType values to check.</param>
            <returns>
            <paraattr align="justify">
            Bool type value.
            </paraattr>
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsImpressionTypeGeneric(Neurotec.Biometrics.NFImpressionType)">
            <summary>
            Checks whether the impression type is genertic.
            </summary>
            <param name="value">Impression type value.</param>
            <returns>NTrue if the value is generic; else NFalse.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsImpressionTypeFinger(Neurotec.Biometrics.NFImpressionType)">
            <summary>
            Checks whether the specified value is fingerprint.
            </summary>
            <param name="value">NFImpressionType value to check its
                                type.</param>
            <returns>
            A Bool value that specifies whether the value is a
            fingerprint. 
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsImpressionTypePalm(Neurotec.Biometrics.NFImpressionType)">
            <summary>
            Checks whether the specified value is a palmprint.
            </summary>
            <param name="value">NFImpressionType value to check its
                                type.</param>
            <returns>
            <paraattr align="justify">
            Bool type value.
            </paraattr>
            </returns> 
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.ToImpressionTypeFinger(Neurotec.Biometrics.NFImpressionType)">
            <summary>
            Converts an impression type to finger impression type.
            </summary>
            <param name="value">Impression type to convert.</param>
            <returns>Finger impression type.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsImpressionTypePlain(Neurotec.Biometrics.NFImpressionType)">
            <summary>
            Checks whether the specified value is a plain scan or optical
            contact/contactless.
            </summary>
            <param name="value">NFImpressionType value to check its
                                type.</param>
            <returns>
            <paraattr align="justify">
            Bool type value.
            </paraattr>
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsImpressionTypeRolled(Neurotec.Biometrics.NFImpressionType)">
            <summary>
            Checks whether the specified value is one of rolled biometric
            types.
            </summary>
            <param name="value">NFImpressionType value to check its
                                type.</param>
            <returns>
            <paraattr align="justify">
            Bool type value.
            </paraattr>
            
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsImpressionTypeSwipe(Neurotec.Biometrics.NFImpressionType)">
            <summary>
            <paraattr align="justify">
            Checks whether the specified NFImpressionType value is one of
            the following: nfitLiveScanVerticalSwipe.
            </paraattr>
            </summary>
            <param name="value">NFImpressionType value to check.</param>
            <returns>
            <paraattr align="justify">
            Bool type value.
            </paraattr>
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsImpressionTypeContactless(Neurotec.Biometrics.NFImpressionType)">
            <summary>
            Checks if the specified NFImpressionType value is one of the
            following: nfitLiveScanContactless,
            nfitLiveScanOpticalContactlessPlain,
            nfitLiveScanOpticalContactlessRolled,
            nfitLiveScanNonOpticalContactlessPlain,
            nfitLiveScanNonOpticalContactlessRolled.
            </summary>
            <param name="value">NFImpressionType value to check.</param>
            <returns>
            A Bool value that specifies whether the specified value is a
            contactless type. 
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsImpressionTypeContact(Neurotec.Biometrics.NFImpressionType)">
            <summary>
            <paraattr align="justify">
            Checks whether the specified NFImpressionType value is one of
            the following: nfitLiveScanOpticalContactPlain,
            nfitLiveScanOpticalContactRolled,
            nfitLiveScanNonOpticalContactPlain,
            nfitLiveScanNonOpticalContactRolled
            </paraattr>
            </summary>
            <param name="value">NFImpressionType value to check.</param>
            <returns>
            A Bool value that specifies whether the specified value is a
            contact type.
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsImpressionTypeLiveScan(Neurotec.Biometrics.NFImpressionType)">
            <summary>
            Checks whether the specified value is a live scan.
            </summary>
            <param name="value">NFImpressionType value to check its
                                type.</param>
            <returns>
            <paraattr align="justify">
            Bool type value.
            </paraattr>
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsImpressionTypeNonliveScan(Neurotec.Biometrics.NFImpressionType)">
            <summary>
            Checks whether the specified value is a non-live scan.
            </summary>
            <param name="value">NFImpressionType value to check its
                                type.</param>
            <returns>
            <paraattr align="justify">
            Bool type value specifying whether the value is a non-live
            scan.
            </paraattr>
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsImpressionTypeLatent(Neurotec.Biometrics.NFImpressionType)">
            <summary>
            Checks whether the specified value is a latent scan.
            </summary>
            <param name="value">NFImpressionType value to check its
                                type.</param>
            <returns>
            <paraattr align="justify">
            Bool type value.
            </paraattr>
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsImpressionTypeOptical(Neurotec.Biometrics.NFImpressionType)">
            <summary>
            <paraattr align="justify">
            Checks if the specified NFImpressionType value is one of the
            following: nfitLiveScanOpticalContactPlain,
            nfitLiveScanOpticalContactRolled,
            nfitLiveScanOpticalContactlessPlain,
            nfitLiveScanOpticalContactlessRolled.
            </paraattr>
            </summary>
            <param name="value">NFImpressionType value to check.</param>
            <returns>
            <paraattr align="justify">
            Bool type value.
            </paraattr>
            </returns>                                                  
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsImpressionTypeNonOptical(Neurotec.Biometrics.NFImpressionType)">
            <summary>
            <paraattr align="justify">
            Checks whether the specified NFImpressionType value is one of
            the following: nfitLiveScanNonOpticalContactPlain,
            nfitLiveScanNonOpticalContactRolled,
            nfitLiveScanNonOpticalContactlessPlain,
            nfitLiveScanNonOpticalContactlessRolled.
            </paraattr>
            </summary>
            <param name="value">NFImpressionType value to check.</param>
            <returns>
            <paraattr align="justify">
            Bool type value.
            </paraattr>
            
            </returns>                                                   
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsImpressionTypeCompatibleWith(Neurotec.Biometrics.NFImpressionType,Neurotec.Biometrics.NFImpressionType)">
            <summary>
            Gets the Bool value that specify whether two values are
            compatible.
            </summary>
            <param name="value">Value to check if it is compatible
                                with other value.</param>
            <param name="otherValue">Value which is used to check
                                     compatibility with value.</param>
            <returns>
            A Bool value that specifies whether two values are
            compatible. 
            </returns>                                                
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsImpressionTypeOneOf(Neurotec.Biometrics.NFImpressionType,Neurotec.Biometrics.NFImpressionType[])">
            <summary>
            Checks whether specified NFImpressionType value matches one
            in an array.
            </summary>
            <param name="value">One of the
                                NFImpressionType
                                values to check.</param>
            <param name="supportedImpressionTypes">NFImpressionType
                                                   values array.</param>
            <returns>
            <paraattr align="justify">
            Bool type value specifying whether value is on of the values
            in an array.
            </paraattr>
            
            </returns>                                                  
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsPositionValidTheFinger(Neurotec.Biometrics.NFPosition)">
            <summary>
            Checks whether the specified value is a valid fingerprint.
            </summary>
            <param name="value">One of NFPosition values to check.</param>
            <returns>
            <paraattr align="justify">
            Bool type value.
            </paraattr>
            </returns>                                                    
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsPositionValidFinger(Neurotec.Biometrics.NFPosition)">
            <summary>
            Checks whether the specified value is a valid fingerprint.
            </summary>
            <param name="value">One of NFPosition values to check.</param>
            <returns>
            <paraattr align="justify">
            Bool type value.
            </paraattr>
            </returns>                                                    
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsPositionValidPalm(Neurotec.Biometrics.NFPosition)">
            <summary>
            Checks whether the specified value is a valid palmprint.
            </summary>
            <param name="value">One of NFPosition values to check.</param>
            <returns>
            <paraattr align="justify">
            Bool type value.
            </paraattr>
            </returns>                                                    
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsPositionValid(Neurotec.Biometrics.NFPosition)">
            <summary>
            Checks whether the value passed as a parameter is a valid NFPosition
            value.
            </summary>
            <param name="value">One of NFPosition values to check.</param>
            <returns>
            <paraattr align="justify">
            Bool type value.
            </paraattr>
            </returns>                                                          
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsPositionTheFinger(Neurotec.Biometrics.NFPosition)">
            <summary>
            Checks whether the specified value is the fingerprint.
            </summary>
            <param name="value">NFPosition value to check its type.</param>
            <returns>
            <paraattr align="justify">
            Bool type value.
            </paraattr>
            </returns>                                                     
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsPositionFinger(Neurotec.Biometrics.NFPosition)">
            <summary>
            Checks whether the specified value is fingerprint.
            </summary>
            <param name="value">NFPosition value to check its type.</param>
            <returns>
            A Bool value that specifies whether the value is a
            fingerprint. 
            </returns>                                                     
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsPositionThePalm(Neurotec.Biometrics.NFPosition)">
            <summary>
            Checks whether the specified value is a palmprint.
            </summary>
            <param name="value">NFPosition value to check its type.</param>
            <returns>
            <paraattr align="justify">
            Bool type value.
            </paraattr>
            </returns>                                                     
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsPositionPalm(Neurotec.Biometrics.NFPosition)">
            <summary>
            Checks whether the specified value is a palmprint.
            </summary>
            <param name="value">NFPosition value to check its type.</param>
            <returns>
            <paraattr align="justify">
            Bool type value.
            </paraattr>
            </returns>                                                     
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsPositionSingleFinger(Neurotec.Biometrics.NFPosition)">
            <summary>
            Checks whether the specified value is a single fingerprint.
            </summary>
            <param name="value">NFPosition value to check its type.</param>
            <returns>
            <paraattr align="justify">
            Bool type value.
            </paraattr>
            </returns>                                                     
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsPositionTwoFingers(Neurotec.Biometrics.NFPosition)">
            <summary>
            Checks whether the specified value is a type of 2
            fingerprints data.
            </summary>
            <param name="value">Value to check its type.</param>
            <returns>
            <paraattr align="justify">
            Bool type value.
            </paraattr>
            </returns>                                          
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsPositionThreeFingers(Neurotec.Biometrics.NFPosition)">
            <summary>
            Checks whether the specified value is a type of 3
            fingerprints data.
            </summary>
            <param name="value">Value to check its type.</param>
            <returns>
            <paraattr align="justify">
            Bool type value.
            </paraattr>
            </returns>                                          
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsPositionFourFingers(Neurotec.Biometrics.NFPosition)">
            <summary>
            Checks if the specified value is a type of 4 fingerprints
            data.
            </summary>
            <param name="value">Value to check its type.</param>
            <returns>
            <paraattr align="justify">
            A bool type value.
            </paraattr>
            </returns>                                               
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsPositionKnown(Neurotec.Biometrics.NFPosition)">
            <summary>
            <paraattr align="justify">
            Checks whether the record contains biometric data that type
            is one of the known fingerprint types (thumb, palmprint,
            etc.).
            </paraattr>
            </summary>
            <param name="value">Value to check its type.</param>
            <returns>
            <paraattr align="justify">
            Bool value - check result.
            </paraattr>
            </returns>                                                 
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsPositionRight(Neurotec.Biometrics.NFPosition)">
            <summary>
            Checks whether the specified position is right fingerprint.
            </summary>
            <param name="value">Value to check its type.</param>
            <returns>
            <paraattr align="justify">
            Bool type value.
            </paraattr>
            </returns>                                                 
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsPositionLeft(Neurotec.Biometrics.NFPosition)">
            <summary>
            Checks whether the specified position is left fingerprint.
            </summary>
            <param name="value">NFImpressionType value to check its
                                type.</param>
            <returns>
            <paraattr align="justify">
            Bool type value.
            </paraattr>
            
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsPositionLeftAndRight(Neurotec.Biometrics.NFPosition)">
            <summary>
            Checks whether the specified position is left and right
            fingerprint.
            </summary>
            <param name="value">Fingerprint position to check its type.</param>
            <returns>
            <paraattr align="justify">
            Bool type value.
            </paraattr>
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsPositionCompatibleWith(Neurotec.Biometrics.NFPosition,Neurotec.Biometrics.NFPosition)">
            <summary>
            Checks whether two position value are compatible.
            </summary>
            <param name="value">First position value.</param>
            <param name="otherValue">Second position value.</param>
            <returns>NTrue if the values are compatible; else NFalse.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsPositionCompatibleWith(Neurotec.Biometrics.NFPosition,Neurotec.Biometrics.NFImpressionType)">
            <summary>
            Gets the Bool value that specify whether two values are
            compatible.
            </summary>
            <param name="value">Value to check if it is compatible with
                                other value.</param>
            <param name="imp">Value which is used to check
                              compatibility with value.</param>
            <returns>
            A Bool value that specifies whether two values are
            compatible. 
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsPositionOneOf(Neurotec.Biometrics.NFPosition,Neurotec.Biometrics.NFPosition[])">
            <summary>
            Checks whether specified NFPosition value matches one in an
            array.
            </summary>
            <param name="value">One of the NFPosition
                                values to check.</param>
            <param name="supportedPositions">NFPosition values array.</param>
            <returns>
            <paraattr align="justify">
            Bool type value specifying whether NFPosition value is on of
            the values in an array.
            </paraattr>
            
            </returns>                                                       
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.GetPositionAvailableParts(Neurotec.Biometrics.NFPosition,Neurotec.Biometrics.NFPosition[])">
            <summary>
            Determines available finger positions based on specified missing finger positions and base position.
            </summary>
            <param name="value">NFPosition object, representing the general position.</param>
            <param name="missingPositions">An array of NFPosition objects, representing missing position parts.</param>
            <returns>An array of NFPosition objects, representing available position parts.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsPositionValidTheEye(Neurotec.Biometrics.NEPosition)">
            <summary>
            Checks whether the specified value is a valid NEPosition
            value.
            </summary>
            <param name="value">NEPosition value to check.</param>
            <returns>
            <paraattr align="justify">
            Bool type value.
            </paraattr>
            </returns>                                              
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsPositionValid(Neurotec.Biometrics.NEPosition)">
            <summary>
            Checks whether the value passed as a parameter is a valid
            NEPosition value.
            </summary>
            <param name="value">One of NEPosition values to check.</param>
            <returns>
            <paraattr align="justify">
            Bool type value.
            </paraattr>
            </returns> 
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsPositionTheEye(Neurotec.Biometrics.NEPosition)">
            <summary>
            Checks whether the specified position represents an eye.
            </summary>
            <param name="value">The position to check.</param>
            <returns>NTrue if the position represents an eye; else NFalse.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsPositionSingleEye(Neurotec.Biometrics.NEPosition)">
            <summary>
            Checks whether the specified position represents a single eye.
            </summary>
            <param name="value">The position to check.</param>
            <returns>NTrue if the position represents a single eye; else NFalse.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsPositionTwoEyes(Neurotec.Biometrics.NEPosition)">
            <summary>
            Checks whether the specified position represents two eyes.
            </summary>
            <param name="value">The position to check.</param>
            <returns>NTrue if the position represents two eyes; else NFalse.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsPositionKnown(Neurotec.Biometrics.NEPosition)">
            <summary>
            Checks whether the specified position is known.
            </summary>
            <param name="value">The position to check.</param>
            <returns>NTrue if the position is known; else NFalse.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsPositionRight(Neurotec.Biometrics.NEPosition)">
            <summary>
            Checks whether the specified position is right.
            </summary>
            <param name="value"></param>
            <returns>NTrue if the position is right; else NFalse.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsPositionLeft(Neurotec.Biometrics.NEPosition)">
            <summary>
            Checks whether the specified position is left.
            </summary>
            <param name="value">The position to check.</param>
            <returns>NTrue if the position is left; else NFalse.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsPositionRightAndLeft(Neurotec.Biometrics.NEPosition)">
            <summary>
            Checks whether the specified position is both right and left.
            </summary>
            <param name="value">The position to check.</param>
            <returns>NTrue if the position is both right and left.; else NFalse.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsPositionOneOf(Neurotec.Biometrics.NEPosition,Neurotec.Biometrics.NEPosition[])">
            <summary>
            Checks whether specified NEPosition value matches one in an
            array.
            </summary>
            <param name="value">One of the NEPosition
                                values to check.</param>
            <param name="supportedPositions">NEPosition values array.</param>
            <returns>
            <paraattr align="justify">
            Bool type value specifying whether NEPosition value is on of
            the values in an array.
            </paraattr>
            
            </returns>                                                       
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.GetPositionAvailableParts(Neurotec.Biometrics.NEPosition,Neurotec.Biometrics.NEPosition[])">
            <summary>
            Determines available iris positions based on specified missing iris positions and base position.
            </summary>
            <param name="value">NEPosition object, representing the general position.</param>
            <param name="missingPositions">An array of NEPosition objects, representing missing position parts.</param>
            <returns>An array of NEPosition objects, representing available position parts.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.AngleToRadians(System.Int32)">
            <summary>
            Converts the specified angle from degrees to radians.
            </summary>
            <param name="value">Degree value of the angle.</param>
            <returns>Radian value of the angle.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.AngleFromRadians(System.Double)">
            <summary>
            Converts the specified angle from radians to degrees.
            </summary>
            <param name="value">Radian value of the angle.</param>
            <returns>Degree value of the angle.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.AngleToString(System.Int32)">
            <summary>
            Gets a string representation of the specified angle.
            </summary>
            <param name="value">Degree value of the angle.</param>
            <returns>A string representing the angle.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.AngleToString(System.Int32,System.String)">
            <summary>
            Gets a string representation of the specified angle.
            </summary>
            <param name="value">Degree value of the angle.</param>
            <param name="format">Conversion format.</param>
            <returns>A string representing the angle.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.IsQualityValid(System.Byte)">
            <summary>
            Checkes whether the quality value is valid.
            </summary>
            <param name="value">The quality value to checks.</param>
            <returns>NTrue if the quality value is valid; else NFalse.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.QualityToString(System.Byte)">
            <summary>
            Gets a string representation of the specified quality value.
            </summary>
            <param name="value">Quality value.</param>
            <returns>A string representation of the quality.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NBiometricTypes.QualityToString(System.Byte,System.String)">
            <summary>
            Gets a string representation of the specified quality value.
            </summary>
            <param name="value">Quality value.</param>
            <param name="format">Conversion format.</param>
            <returns>A string representation of the quality.</returns>
        </member>
        <member name="P:Neurotec.Biometrics.NBiometricTypes.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NBiometricTypes.NBiometricTypeNativeType">
            <summary>
            Defines the native type of the biometric type.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NBiometricTypes.NBiometricSubtypeNativeType">
            <summary>
            Defines the native type of the biometric subtype.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NBiometricTypes.NBiometricStatusNativeType">
            <summary>
            Defines the native type of the biometric status.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NBiometricTypes.NFImpressionTypeNativeType">
            <summary>
            Defines the native type of the finger impression type.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NBiometricTypes.NFPositionNativeType">
            <summary>
            Defines the native type of the finger position.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NBiometricTypes.NEPositionNativeType">
            <summary>
            Defines the native type of the iris position.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NBiometricTypes.NFPatternClassNativeType">
            <summary>
            Defines the native type of the pattern class.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NBiometricTypes.NFMinutiaFormatNativeType">
            <summary>
            Defines the native type of the fingerprint minutia format.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NBiometricTypes.NFMinutiaTypeNativeType">
            <summary>
            Defines the native type of the fingerprint minutia type.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NBiometricTypes.NFRidgeCountsTypeNativeType">
            <summary>
            Defines the native type of the fingerprint ridge count.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NBiometricTypes.NGenderNativeType">
            <summary>
            Defines the native type of the gender.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NBiometricTypes.NLPropertiesNativeType">
            <summary>
            Defines the native type of the face properties.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NBiometricTypes.NLExpressionNativeType">
            <summary>
            Defines the native type of the face expression.
            </summary>
        </member>
        <member name="T:Neurotec.Biometrics.NEAttributes">
            <summary>
            Provides methods to retrieve iris attributes (metadata .which
            is not saved in iris template).
            </summary>
        </member>
        <member name="M:Neurotec.Biometrics.NEAttributes.#ctor(Neurotec.Biometrics.NEPosition)">
            <summary>
            Initializes a new instance of NEAttributes class.
            </summary>
            <param name="position">Eye position.</param>
        </member>
        <member name="P:Neurotec.Biometrics.NEAttributes.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NEAttributes.Position">
            <summary>
            Gets iris position.
            </summary>
            <value>
            Iris position value.
            </value>            
        </member>
        <member name="P:Neurotec.Biometrics.NEAttributes.ImageIndex">
            <summary>
            Gets or sets iris image index.
            </summary>
            <value>
            Iris image index.
            </value>                      
        </member>
        <member name="P:Neurotec.Biometrics.NEAttributes.BoundingRect">
            <summary>
            Gets or sets the bounding rectangle that completely encloses
            scanned iris.
            </summary>
            <value>
            Rectangle type value containing coordinates, width and
            height.
            </value>                                                    
        </member>
        <member name="T:Neurotec.Biometrics.NeeTemplateSize">
            <summary>Specifies NERecord type by its size.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NeeTemplateSize.Compact">
            <summary>The small NERecord size.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NeeTemplateSize.Normal">
            <summary>The large NERecord size.</summary>
        </member>
        <member name="T:Neurotec.Biometrics.NeeSegmentationDetails">
            <summary>
            Provides information about segmentation details. 
            </summary>                                       
        </member>
        <member name="P:Neurotec.Biometrics.NeeSegmentationDetails.InnerBoundaryAvailable">
            <summary>
            Gets or sets a value indicating if outer boundary of iris was
            found.
            </summary>
            <value>
            Boolean value indicating if the outer boundary is available.
            </value>                                                     
        </member>
        <member name="P:Neurotec.Biometrics.NeeSegmentationDetails.InnerBoundaryPoints">
            <summary>
            Gets list of outer boundary points.
            </summary>
            <value>
            List of outer boundary points.
            </value>                           
        </member>
        <member name="P:Neurotec.Biometrics.NeeSegmentationDetails.OuterBoundaryAvailable">
            <summary>
            Gets or sets a value indicating if outer boundary of iris was
            found.
            </summary>
            <value>
            Boolean value indicating if the outer boundary is available.
            </value>                                                     
        </member>
        <member name="P:Neurotec.Biometrics.NeeSegmentationDetails.OuterBoundaryPoints">
            <summary>
            Gets list of outer boundary points.
            </summary>
            <value>
            List of outer boundary points.
            </value>                           
        </member>
        <member name="T:Neurotec.Biometrics.NeeExtractionStatus">
            <summary>Holds information about extraction status.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NeeExtractionStatus.Succeeded">
            <summary>
            Processing was successful.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NeeExtractionStatus.TemplateCreated">
            <summary>
            Template was created.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NeeExtractionStatus.SegmentationFailed">
            <summary>
            Segmentation failed.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NeeExtractionStatus.QualityCheckFailed">
            <summary>
            Quality check failed.
            </summary>
        </member>
        <member name="T:Neurotec.Biometrics.NeeImageKind">
            Enumerates iris image kind values (standard IREX values).
        </member>
        <member name="F:Neurotec.Biometrics.NeeImageKind.Uncropped">
            Uncropped iris image (this is default value).
        </member>
        <member name="F:Neurotec.Biometrics.NeeImageKind.Vga">
            Reserved for future usage.
        </member>
        <member name="F:Neurotec.Biometrics.NeeImageKind.Cropped">
            Cropped iris image.
        </member>
        <member name="F:Neurotec.Biometrics.NeeImageKind.CroppedAndMasked">
            Cropped and masked iris image.
        </member>
        <member name="T:Neurotec.Biometrics.NEExtractor">
            <summary>
            Provides functions for iris features extraction into
            Neurotechnology Iris Record (NERecord).
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NEExtractor.ParameterDeinterlace">
            Parameter showing if deinterlacing of iris images is enabled.
        </member>
        <member name="F:Neurotec.Biometrics.NEExtractor.ParameterInnerBoundaryFrom">
            Parameter indicating the minimum size of the inner iris
            boundary.
        </member>
        <member name="F:Neurotec.Biometrics.NEExtractor.ParameterInnerBoundaryTo">
            Parameter indicating the maximum size of the inner iris
            boundary.
        </member>
        <member name="F:Neurotec.Biometrics.NEExtractor.ParameterOuterBoundaryFrom">
            Parameter controlling the minimum size of the outer iris
            boundary.
        </member>
        <member name="F:Neurotec.Biometrics.NEExtractor.ParameterOuterBoundaryTo">
            Parameter controlling the maximum size of the outer iris
            boundary.
        </member>
        <member name="F:Neurotec.Biometrics.NEExtractor.ParameterUseFlexibleBoundaryModel">
            Identifier specifying whether a more flexible boundary model
            is used during iris boundary segmentation.
        </member>
        <member name="F:Neurotec.Biometrics.NEExtractor.ParameterTemplateSize">
            Identifier specifying template size parameter. Parameter value
            can be one of the TemplateSize enumeration members.
        </member>
        <member name="M:Neurotec.Biometrics.NEExtractor.Compress(Neurotec.Biometrics.NERecord,Neurotec.Biometrics.NeeTemplateSize)">
            <summary>
            Compresses NERecord object with specified destination template size.
            </summary>
            <param name="srcRecord">NERecord to compress.</param>
            <param name="dstTemplateSize">Destination template size.</param>
            <returns>Compressed NERecord.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NEExtractor.#ctor">
            <summary>
            Initializes a new instance of NEExtractor.
            </summary>                                
        </member>
        <member name="M:Neurotec.Biometrics.NEExtractor.Extract(Neurotec.Images.NGrayscaleImage,Neurotec.Biometrics.NEPosition,Neurotec.Biometrics.NeeSegmentationDetails@,Neurotec.Biometrics.NeeExtractionStatus@)">
            <summary>
            Fully automatically extracts iris features template from the
            given iris image.
            </summary>
            <param name="image">Source iris image to extract
                                features.</param>
            <param name="position">Eye position value (right,
                                   left or unknown eye).</param>
            <param name="details">[out] Structure of type
                                  NeeSegmentationDetails
                                  containing information about
                                  segmentation results.</param>
            <param name="extractionStatus">[out] NeeExtractionStatus
                                           object which contains
                                           extraction status.</param>
            <returns>
            NERecord object which contains extracted features. 
            </returns>                                                  
        </member>
        <member name="M:Neurotec.Biometrics.NEExtractor.Extract(Neurotec.Images.NGrayscaleImage,Neurotec.Biometrics.NEPosition,Neurotec.Biometrics.NeeExtractionStatus@)">
            <summary>
            Fully automatically extracts iris features template from the
            given iris image.
            </summary>
            <param name="image">Source image to extract
                                features.</param>
            <param name="position">Eye position value (right,
                                   left or unknown eye).</param>
            <param name="extractionStatus">[out] NeeExtractionStatus
                                           object which contains
                                           extraction status.</param>
            <returns>
            NERecord object which contains extracted features.
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NEExtractor.Extract(Neurotec.Images.NGrayscaleImage,Neurotec.Biometrics.NeeImageKind,Neurotec.Biometrics.NEPosition,Neurotec.Biometrics.NeeSegmentationDetails@,Neurotec.Biometrics.NeeExtractionStatus@)">
            <summary>
            Fully automatically extracts iris features template from the
            given iris image.
            </summary>
            <param name="image">Source image to extract features.</param>
            <param name="imageKind">Kind of the source image.</param>
            <param name="position">Eye position value (right, left or unknown eye).</param>
            <param name="details">[out] Segmentation details.</param>
            <param name="extractionStatus">[out] NeeExtractionStatus object which contains extraction status.</param>
            <returns>NERecord object which contains extracted features.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NEExtractor.Extract(Neurotec.Images.NGrayscaleImage,Neurotec.Biometrics.NeeImageKind,Neurotec.Biometrics.NEPosition,Neurotec.Biometrics.NeeExtractionStatus@)">
            <summary>
            Fully automatically extracts iris features template from the
            given iris image.
            </summary>
            <param name="image">Source image to extract features.</param>
            <param name="imageKind">Kind of the source image.</param>
            <param name="position">Eye position value (right, left or unknown eye).</param>
            <param name="extractionStatus">[out] NeeExtractionStatus object which contains extraction status.</param>
            <returns>NERecord object which contains extracted features.</returns>
        </member>
        <member name="P:Neurotec.Biometrics.NEExtractor.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NEExtractor.NeeTemplateSizeNativeType">
            <summary>
            Defines the native type of the iris extractor template size.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NEExtractor.NeeExtractionStatusNativeType">
            <summary>
            Defines the native type of the iris extractor extraction status.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NEExtractor.NeeImageKindNativeType">
            <summary>
            Defines the native type of the iris extractor image kind.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NEExtractor.Deinterlace">
            <summary>Shows if deinterlacing of iris images is enabled.</summary>
            <value>Controls usage of deinterlace on iris images.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NEExtractor.InnerBoundaryFrom">
            <summary>Gets or sets the minimum size of the inner iris boundary.</summary>
            <value>Minimum size of the inner iris boundary.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NEExtractor.InnerBoundaryTo">
            <summary>Gets or sets the maximum size of the inner iris boundary.</summary>
            <value>Maximum size of the inner iris boundary.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NEExtractor.OuterBoundaryFrom">
            <summary>Shows if NEExtractor is registered.</summary>
            <value>Controls the minimum size of the outer iris boundary.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NEExtractor.OuterBoundaryTo">
            <summary>Gets or sets the maximum size of the outer iris boundary.</summary>
            <value>Maximum size of the outer iris boundary.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NEExtractor.UseFlexibleBoundaryModel">
            <summary>Shows whether a more flexible boundary model is used during iris boundary segmentation.</summary>
            <value>Controls flexibility of iris boundaries model.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NEExtractor.TemplateSize">
            <summary>Gets or sets template size.</summary>
            <value>One of the NeeTemplateSize value.</value>
        </member>
        <member name="T:Neurotec.Biometrics.NEMatchingDetails">
            <summary>
            Represents iris templates matching details.
            </summary>
        </member>
        <member name="T:Neurotec.Biometrics.NXMatchingDetails">
            <summary>
            Base class for NEMatchingDetails, NFMatchingDetails, NLMatchingDetails and NSMatchingDetails.
            </summary>                                                                                   
        </member>
        <member name="T:Neurotec.Biometrics.NMatchingDetailsBase">
            <summary>
            Base class for NMatchingDetails.
            </summary>                      
        </member>
        <member name="P:Neurotec.Biometrics.NMatchingDetailsBase.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NMatchingDetailsBase.BiometricType">
            <summary>
            Gets type of biometric modality saved in specified matching details.
            </summary>
            <value>
            NBiometricType object containing information about template biometric type. 
            </value>                                                                    
        </member>
        <member name="P:Neurotec.Biometrics.NMatchingDetailsBase.Score">
            <summary>
            Gets similarity score of two matched templates.
            </summary>
            <value>
            Similarity score of two matched templates. 
            </value>                                       
        </member>
        <member name="P:Neurotec.Biometrics.NXMatchingDetails.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NXMatchingDetails.MatchedIndex">
            <summary>
            Gets index of matched template in the second matched template.
            </summary>
            <value>
            Index of matched template.
            </value>                                                      
        </member>
        <member name="P:Neurotec.Biometrics.NEMatchingDetails.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="T:Neurotec.Biometrics.NERecord">
            <summary>
            Provides functionality for packing, unpacking and editing
            Neurotechnology iris Records (NERecords). 
            </summary>                                               
        </member>
        <member name="M:Neurotec.Biometrics.NERecord.Check(System.Byte[])">
            <summary>
            Checks if byte array contains a valid NERecord object.
            </summary>
            <param name="buffer">Array of bytes memory buffer containing
                                 NERecord object.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NERecord.Check(Neurotec.IO.NBuffer)">
            <summary>
            Checks if NBuffer contains a valid NERecord object.
            </summary>
            <param name="buffer">NBuffer containing NERecord object.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NERecord.GetSize(System.Byte[])">
            <summary>
            Gets the size of packed NERecord.
            </summary>
            <param name="buffer">The packed NERecord.</param>
            <returns>NERecord size.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NERecord.GetSize(Neurotec.IO.NBuffer)">
            <summary>
            Retrieves the size of a specified memory buffer.
            </summary>
            <param name="buffer">The memory buffer.</param>
            <returns>
            The size of a specified memory buffer.
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NERecord.GetWidth(System.Byte[])">
            <summary>
            Get width of iris image in NERecord object.
            </summary>
            <param name="buffer">Byte array containing NERecord.</param>
            <returns>
            Iris image width.
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NERecord.GetWidth(Neurotec.IO.NBuffer)">
            <summary>
            Get width of iris image in NERecord object.
            </summary>
            <param name="buffer">NBuffer containing NERecord.</param>
            <returns>Iris image width.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NERecord.GetHeight(System.Byte[])">
            <summary>
            Retrieves height of iris image.
            </summary>
            <param name="buffer">Byte array which contains iris image
                                 data.</param>
            <returns>
            Iris image height in pixels.
            </returns>
            <exception cref="T:System.ArgumentNullException">Buffer is null.</exception>
        </member>
        <member name="M:Neurotec.Biometrics.NERecord.GetHeight(Neurotec.IO.NBuffer)">
            <summary>
            Retrieves height of iris image.
            </summary>
            <param name="buffer">NBuffer containing NERecord.</param>
            <returns>Iris image height in pixels.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NERecord.GetPosition(System.Byte[])">
            <summary>
            Get iris position in NERecord object.
            </summary>
            <param name="buffer">Byte array containing NERecord.</param>
            <returns>
            One of the NEPosition values. 
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NERecord.GetPosition(Neurotec.IO.NBuffer)">
            <summary>
            Get iris position in NERecord object.
            </summary>
            <param name="buffer">NBuffer containing NERecord.</param>
            <returns>One of the NEPosition values. </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NERecord.GetQuality(System.Byte[])">
            <summary>
            Get quality of iris image in NERecord object.
            </summary>
            <param name="buffer">Byte array containing NERecord.</param>
            <returns>
            Iris image quality value. 
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NERecord.GetQuality(Neurotec.IO.NBuffer)">
            <summary>
            Get quality of iris image in NERecord object.
            </summary>
            <param name="buffer">NBuffer containing NERecord.</param>
            <returns>Iris image quality value.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NERecord.GetCbeffProductType(System.Byte[])">
            <summary>
            Retrieves the Cbeff product type of the NERecord.
            </summary>
            <param name="buffer">The packed NERecord object.</param>
            <returns>
            The Cbeff product type.
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NERecord.GetCbeffProductType(Neurotec.IO.NBuffer)">
            <summary>
            Retrieves the Cbeff product type of the NERecord.
            </summary>
            <param name="buffer">The packed NERecord object.</param>
            <returns>The Cbeff product type.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NERecord.#ctor(System.UInt16,System.UInt16)">
            <summary>
            Initializes a new instance of the NERecord class.
            </summary>
            <param name="width">Width of original image which contains
                                irises features.</param>
            <param name="height">Height of original image which contains
                                 irises features.</param>               
        </member>
        <member name="M:Neurotec.Biometrics.NERecord.#ctor(System.UInt16,System.UInt16,System.UInt32)">
            <summary>
            Initializes a new instance of the NERecord class.
            </summary>
            <param name="width">Width of original image which contains
                                irises features.</param>
            <param name="height">Height of original image which contains
                                 irises features.</param>
            <param name="flags">Bitwise combination of zero or more
                                flags that controls behavior of the
                                constructor. Should be zero.</param>    
        </member>
        <member name="M:Neurotec.Biometrics.NERecord.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the NERecord class.
            </summary>
            <param name="buffer">The packed NERecord object.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NERecord.#ctor(Neurotec.IO.NBuffer)">
            <summary>
            Initializes a new instance of the NERecord class.
            </summary>
            <param name="buffer">The packed NERecord object.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NERecord.#ctor(Neurotec.IO.NBuffer,System.UInt32)">
            <summary>
            Initializes a new instance of the NERecord class.
            </summary>
            <param name="buffer">The packed NERecord object.</param>
            <param name="flags">Must be zero.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NERecord.#ctor(Neurotec.IO.NBuffer,System.UInt32,System.Int32@)">
            <summary>
            Initializes a new instance of the NERecord class.
            </summary>
            <param name="buffer">The packed NERecord object.</param>
            <param name="flags">Must be zero.</param>
            <param name="size">[out] Size of NERecord.</param>
        </member>
        <member name="P:Neurotec.Biometrics.NERecord.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NERecord.Width">
            <summary>Width of iris image in NERecrod object.</summary>
            <value>Width of the iris image.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NERecord.Height">
            <summary>Height of iris image in NERecrod object.</summary>
            <value>Height of the iris image.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NERecord.Position">
            <summary>Position of iris (left or right eye) in NERecord.</summary>
            <value>Position value of the iris (left or right iris).</value>
        </member>
        <member name="P:Neurotec.Biometrics.NERecord.Quality">
            <summary>Quality of iris image in NERecord object.</summary>
            <value>Quality value of the iris image.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NERecord.CbeffProductType">
            <summary>Gets or sets the Cbeff product type of the NERecord.</summary>
            <value>The Cbeff product type.</value>
        </member>
        <member name="T:Neurotec.Biometrics.Tools.NESegmenterAttributes">
            <summary>
            Provides functionality for retrieving segmented iris image attributes. 
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.Tools.NESegmenterAttributes.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.Tools.NESegmenterAttributes.GrayLevelSpread">
            <summary>
            Gets gray level spread in iris image.
            </summary>
            <value>
            Gray level spread in iris image. 
            </value>                             
        </member>
        <member name="P:Neurotec.Biometrics.Tools.NESegmenterAttributes.IrisSize">
            <summary>
            Gets iris size.
            </summary>
            <value>
            Iris size.
            </value>       
        </member>
        <member name="P:Neurotec.Biometrics.Tools.NESegmenterAttributes.PupilIrisRatio">
            <summary>
            Gets pupil to iris ratio (dilation).
            </summary>
            <value>
            Pupil to iris ratio.
            </value>                            
        </member>
        <member name="P:Neurotec.Biometrics.Tools.NESegmenterAttributes.UsableIrisArea">
            <summary>
            Gets usable iris area.
            </summary>
            <value>
            Usable iris area.
            </value>
            <remarks>
            Usable iris area is the percentage of iris that is not occluded by eyelash, eyelid, or specular
            reflections, ambient specular reflections e.g., reflected sunlight, eye-wear reflections, reflections
            from nearby facial features such as nose, or glare and reflection from the scene.
            </remarks>                                                                                           
        </member>
        <member name="P:Neurotec.Biometrics.Tools.NESegmenterAttributes.IrisScleraContrast">
            <summary>
            Gets iris sclera contrast.
            </summary>
            <value>
            Iris sclera contrast.
            </value>                  
        </member>
        <member name="P:Neurotec.Biometrics.Tools.NESegmenterAttributes.IrisPupilContrast">
            <summary>
            Gets iris pupil contrast value.
            </summary>
            <value>
            Iris pupil contrast.
            </value>                       
        </member>
        <member name="P:Neurotec.Biometrics.Tools.NESegmenterAttributes.IrisScleraBoundaryShape">
            <summary>
            Gets iris sclera (white of the eye) boundary shape.
            </summary>
            <value>
            Iris sclera value.
            </value>                                           
        </member>
        <member name="P:Neurotec.Biometrics.Tools.NESegmenterAttributes.IrisPupilBoundaryShape">
            <summary>
            Gets iris pupil shape (a measure of regularity in pupil-iris boundary) evaluation.
            </summary>
            <value>
            Iris pupil boundary shape.
            </value>
            <remarks>
            Iris recognition quality depends on iris pupil boundary shape.
            </remarks>
        </member>
        <member name="P:Neurotec.Biometrics.Tools.NESegmenterAttributes.Margin">
            <summary>
            Gets iris image margin
            </summary>
            <value>Iris image margin.</value>
        </member>
        <member name="P:Neurotec.Biometrics.Tools.NESegmenterAttributes.Sharpness">
            <summary>
            Gets iris image sharpness.
            </summary>
            <value>
            Iris image sharpness.
            </value> 
        </member>
        <member name="P:Neurotec.Biometrics.Tools.NESegmenterAttributes.SignalToNoiseRatio">
            <summary>
            Gets iris image signal to noise ration.
            </summary>
            <value>
            Iris image signal to noise ration.
            </value>                               
        </member>
        <member name="P:Neurotec.Biometrics.Tools.NESegmenterAttributes.Interlace">
            <summary>
            Gets iris image interlace value.
            </summary>
            <value>
            Iris image interlace value. 
            </value>                        
        </member>
        <member name="T:Neurotec.Biometrics.Tools.NESegmenter">
            <summary>
            Provides functionality for iris image segmentation.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.Tools.NESegmenter.ParameterHorizontalMargin">
            The parameter used for setting a horizontal margin.
        </member>
        <member name="F:Neurotec.Biometrics.Tools.NESegmenter.ParameterVerticalMargin">
            The parameter used for setting a horizontal margin.
        </member>
        <member name="F:Neurotec.Biometrics.Tools.NESegmenter.ParameterUpperEyelidMaskValue">
            The parameter used for setting an upper eyelid mask value.
        </member>
        <member name="F:Neurotec.Biometrics.Tools.NESegmenter.ParameterScleraMaskValue">
            The parameter used for setting sclera mask value.
        </member>
        <member name="F:Neurotec.Biometrics.Tools.NESegmenter.ParameterLowerEyelidMaskValue">
            The parameter used for setting a lower eyelid mask value.
        </member>
        <member name="F:Neurotec.Biometrics.Tools.NESegmenter.ParameterQualityThreshold">
            The parameter used for setting quality threshold. The double value is in range [0, 1].
        </member>
        <member name="F:Neurotec.Biometrics.Tools.NESegmenter.ParameterInterlaceThreshold">
            The parameter used for setting an interlace threshold. The double value is in range [0, 1]. 
        </member>
        <member name="M:Neurotec.Biometrics.Tools.NESegmenter.Create">
            <summary>
            \ \ 
            </summary>
            <returns>
            No tables or formatting elements here!!!
            </returns>                              
        </member>
        <member name="M:Neurotec.Biometrics.Tools.NESegmenter.#ctor">
            <summary>
            Initializes a new instance of NESegmenter class.
            </summary>
        </member>
        <member name="M:Neurotec.Biometrics.Tools.NESegmenter.Process(Neurotec.Images.NGrayscaleImage,Neurotec.Biometrics.NeeImageKind,Neurotec.Biometrics.Tools.NESegmenterAttributes@,System.Byte@,Neurotec.Biometrics.NeeExtractionStatus@)">
            <summary>
            Segments iris image.
            </summary>
            <param name="image">Grayscale image containing iris.</param>
            <param name="resultImageKind">One of NeeImageKind image kind values.</param>
            <param name="attributes">[out] Segmented iris image attributes.</param>
            <param name="quality">[out] Quality of iris image.</param>
            <param name="status">[out] Iris extraction status value.</param>
            <returns>
            NGrayscaleImage containing segmented iris image.
            </returns>                                                                  
        </member>
        <member name="M:Neurotec.Biometrics.Tools.NESegmenter.Process(Neurotec.Images.NGrayscaleImage,Neurotec.Biometrics.NeeImageKind,System.Byte@,Neurotec.Biometrics.NeeExtractionStatus@)">
            <summary>
            Segments iris image.
            </summary>
            <param name="image">Grayscale image containing iris.</param>
            <param name="resultImageKind">One of NeeImageKind image kind values.</param>
            <param name="quality">[out] Quality of iris image.</param>
            <param name="status">[out] Iris extraction status value.</param>
            <returns>
            NGrayscaleImage containing segmented iris image. 
            </returns>                                                                  
        </member>
        <member name="M:Neurotec.Biometrics.Tools.NESegmenter.Process(Neurotec.Images.NGrayscaleImage,Neurotec.Biometrics.NeeImageKind,Neurotec.Biometrics.NeeExtractionStatus@)">
            <summary>
            Segments iris image.
            </summary>
            <param name="image">Grayscale image containing iris.</param>
            <param name="resultImageKind">One of NeeImageKind image kind values.</param>
            <param name="status">[out] Iris extraction status value.</param>
            <returns>
            NGrayscaleImage containing segmented iris image. 
            </returns>                                                                  
        </member>
        <member name="P:Neurotec.Biometrics.Tools.NESegmenter.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.Tools.NESegmenter.HorizontalMargin">
            <summary>
            Gets or sets horizontal margin of the pupil image.
            </summary>
            <value>
            Horizontal margin of the pupil image object. 
            </value>                                          
        </member>
        <member name="P:Neurotec.Biometrics.Tools.NESegmenter.VerticalMargin">
            <summary>
            Gets or sets vertical margin of the iris image.
            </summary>
            <value>
            Vertical margin of the iris image object. 
            </value>                                       
        </member>
        <member name="P:Neurotec.Biometrics.Tools.NESegmenter.UpperEyelidMaskValue">
            <summary>
            Gets or sets upper eyelid mask value of the iris image.
            </summary>
            <value>
            Upper eyelid mask value of the iris image object. 
            </value>                                               
        </member>
        <member name="P:Neurotec.Biometrics.Tools.NESegmenter.ScleraMaskValue">
            <summary>
            Gets or sets sclera mask value of the iris image.
            </summary>
            <value>
            Sclera mask value of the iris image object. 
            </value>                                         
        </member>
        <member name="P:Neurotec.Biometrics.Tools.NESegmenter.LowerEyelidMaskValue">
            <summary>
            Gets or sets lower eyelid mask value of the iris image.
            </summary>
            <value>
            Lower eyelid mask value of the iris image object. 
            </value>                                               
        </member>
        <member name="P:Neurotec.Biometrics.Tools.NESegmenter.QualityThreshold">
            <summary>
            Gets or sets quality threshold of the iris image.
            </summary>
            <value>
            Quality threshold of the iris image object. 
            </value>                                         
        </member>
        <member name="P:Neurotec.Biometrics.Tools.NESegmenter.InterlaceThreshold">
            <summary>
            Gets or sets interlace threshold of the iris image.
            </summary>
            <value>
            Interlace threshold of the iris image object. 
            </value>                                           
        </member>
        <member name="T:Neurotec.Biometrics.NETemplate">
            <summary>
            Provides functionality for packing, unpacking and editing
            Neurotechnology iris templates (NETemplates).
            </summary>                                               
        </member>
        <member name="F:Neurotec.Biometrics.NETemplate.MaxRecordCount">
            <summary>
            The maximum number of iris records NETemplate can contain.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NETemplate.FlagProcessFirstRecordOnly">
            <summary>
            The flag indicating whether only the first iris record should be unpacked or packed while unpacking or packing NETemplate.
            </summary>
        </member>
        <member name="M:Neurotec.Biometrics.NETemplate.CalculateSize(System.Int32[])">
            <summary>
            Calculates size of NETemplate object containing particular
            NERecords.
            </summary>
            <param name="recordSizes">Array of separate NERecord sizes.</param>
            <returns>
            Calculated size in bytes.
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NETemplate.Check(System.Byte[])">
            <summary>
            Checks if byte array contains a valid NETemplate object.
            </summary>
            <param name="buffer">Byte array containing a NETemplate.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NETemplate.Check(Neurotec.IO.NBuffer)">
            <summary>
            Checks if byte array contains a valid NETemplate object.
            </summary>
            <param name="buffer">NBuffer containing a NETemplate.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NETemplate.GetSize(System.Byte[])">
            <summary>
            Gets the size of packed NETemplate.
            </summary>
            <param name="buffer">Packed NETemplate.</param>
            <returns>NETemplate size.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NETemplate.GetSize(Neurotec.IO.NBuffer)">
            <summary>
            Gets the size of packed NETemplate.
            </summary>
            <param name="buffer">Packed NETemplate.</param>
            <returns>NETemplate size.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NETemplate.GetRecordCount(System.Byte[])">
            <summary>
            Gets record count in NETemplate.
            </summary>
            <param name="buffer">Memory buffer containing a NETemplate.</param>
            <returns>
            Number of records in the NETemplate.
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NETemplate.GetRecordCount(Neurotec.IO.NBuffer)">
            <summary>
            Gets record count in NETemplate.
            </summary>
            <param name="buffer">NBuffer containing a NETemplate.</param>
            <returns>Number of records in the NETemplate.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NETemplate.#ctor">
            <summary>
            Initializes a new instance of the NETemplate class.
            </summary>                                         
        </member>
        <member name="M:Neurotec.Biometrics.NETemplate.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the NETemplate class.
            </summary>
            <param name="flags">Bitwise combination of zero or more
                                flags that controls behavior of the
                                constructor.</param>
            <remarks>
            The following flags are supported:
            
            • FlagProcessFirstRecordOnly
            
            • Flags are applied to each iris record contained in the
            NETemplate. 
            </remarks>                                              
        </member>
        <member name="M:Neurotec.Biometrics.NETemplate.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the NETemplate class.
            </summary>
            <param name="buffer">A byte array with packed NETemplate
                                 objects.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NETemplate.#ctor(Neurotec.IO.NBuffer)">
            <summary>
            Initializes a new instance of the NETemplate class.
            </summary>
            <param name="buffer">NBuffer with packed NETemplate objects.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NETemplate.#ctor(Neurotec.IO.NBuffer,System.UInt32)">
            <summary>
            Initializes a new instance of the NETemplate class.
            </summary>
            <param name="buffer">NBuffer with packed NETemplate objects.</param>
            <param name="flags">Reserved for future use. Must be zero.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NETemplate.#ctor(Neurotec.IO.NBuffer,System.UInt32,System.Int32@)">
            <summary>
            Initializes a new instance of the NETemplate class.
            </summary>
            <param name="buffer">NBuffer with packed NETemplate objects.</param>
            <param name="flags">Reserved for future use. Must be zero.</param>
            <param name="size">[out] NETemplate size.</param>
        </member>
        <member name="P:Neurotec.Biometrics.NETemplate.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NETemplate.Records">
            <summary>
            Gets collection of records in the NETemplate.
            </summary>
            <value>
            A RecordCollection collection.
            </value>                                     
        </member>
        <member name="T:Neurotec.Biometrics.NETemplate.RecordCollection">
            <summary>
            Collection of NERecords.
            </summary>              
        </member>
        <member name="M:Neurotec.Biometrics.NETemplate.RecordCollection.Add(System.UInt16,System.UInt16)">
            <summary>
            Adds an object to the end of the RecordCollection.
            </summary>
            <param name="width">Width of image.</param>
            <param name="height">Height of image.</param>
            <returns>
            The added to the collection NERecord object. 
            </returns>                                                  
        </member>
        <member name="M:Neurotec.Biometrics.NETemplate.RecordCollection.Add(System.UInt16,System.UInt16,System.UInt32)">
            <summary>
            Adds an object to the end of the RecordCollection.
            </summary>
            <param name="width">Width of image.</param>
            <param name="height">Height of image.</param>
            <param name="flags">Bitwise combination of zero or more
                                flags that controls behavior of the
                                method. This parameter is reserved, must
                                be zero.</param>
            <returns>
            The added to the collection NERecord object. 
            </returns>                                                  
        </member>
        <member name="M:Neurotec.Biometrics.NETemplate.RecordCollection.Add(System.Byte[])">
            <summary>
            Adds an object to the end of the RecordCollection.
            </summary>
            <param name="buffer">The packed NERecord object.</param>
            <returns>
            The added to the collection NERecord object. 
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NETemplate.RecordCollection.Add(Neurotec.IO.NBuffer)">
            <summary>
            Adds an object to the end of the RecordCollection.
            </summary>
            <param name="buffer">The packed NERecord object.</param>
            <returns>
            The added to the collection NERecord object. 
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NETemplate.RecordCollection.Add(Neurotec.IO.NBuffer,System.UInt32)">
            <summary>
            Adds an object to the end of the RecordCollection.
            </summary>
            <param name="buffer">The packed NERecord object.</param>
            <param name="flags">Reserved for future use. Must be zero.</param>
            <returns>The added to the collection NERecord object.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NETemplate.RecordCollection.Add(Neurotec.IO.NBuffer,System.UInt32,System.Int32@)">
            <summary>
            Adds an object to the end of the RecordCollection.
            </summary>
            <param name="buffer">The packed NERecord object.</param>
            <param name="flags">Reserved for future use. Must be zero.</param>
            <param name="size">[out] The size of NERecord.</param>
            <returns>The added to the collection NERecord object.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NETemplate.RecordCollection.AddCopy(Neurotec.Biometrics.NERecord)">
            <summary>
            Copies NERecord object to the RecordCollection.
            </summary>
            <param name="srcRecord">The NERecord object.</param>
            <returns>
            The copied to the collection NERecord object.
            </returns>                                          
        </member>
        <member name="M:Neurotec.Biometrics.NETemplate.RecordCollection.AddCopy(Neurotec.Biometrics.NERecord,System.UInt32)">
            <summary>
            Copies NERecord object to the RecordCollection.
            </summary>
            <param name="srcRecord">The NERecord object.</param>
            <param name="flags">Flags controlling function.</param>
            <returns>
            The copied to the collection NERecord object. 
            </returns>                                             
        </member>
        <member name="T:Neurotec.Biometrics.NFAttributes">
            <summary>
            Provides methods to retrieve fingerprint attributes (metadata
            .which is not saved in fingerprint template).
            </summary>
        </member>
        <member name="M:Neurotec.Biometrics.NFAttributes.#ctor(Neurotec.Biometrics.NFImpressionType,Neurotec.Biometrics.NFPosition)">
            <summary>
            Initializes a new instance of NFAttributes class.
            </summary>
            <param name="impressionType">Impression type.</param>
            <param name="position">Finger position.</param>
        </member>
        <member name="P:Neurotec.Biometrics.NFAttributes.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NFAttributes.ImpressionType">
            <summary>
            Gets fingerprint impression type.
            </summary>
            <value>
            Fingerprint impression type.
            </value>                         
        </member>
        <member name="P:Neurotec.Biometrics.NFAttributes.Position">
            <summary>
            Gets fingerprint position value.
            </summary>
            <value>
            Fingerprint position value. 
            </value>                        
        </member>
        <member name="P:Neurotec.Biometrics.NFAttributes.ImageIndex">
            <summary>
            Gets or sets fingerprint image index.
            </summary>
            <value>
            Fingerprint image index. 
            </value>                             
        </member>
        <member name="P:Neurotec.Biometrics.NFAttributes.BoundingRect">
            <summary>
            Gets or sets the bounding rectangle that completely encloses
            scanned fingerprint.
            </summary>
            <value>
            Rectangle type value containing coordinates, width and
            height. 
            </value>                                                    
        </member>
        <member name="T:Neurotec.Biometrics.NfeReturnedImage">
            <summary>Specifies the returned image.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NfeReturnedImage.None">
            <summary>No image.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NfeReturnedImage.Binarized">
            <summary>The binarized image.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NfeReturnedImage.Skeletonized">
            <summary>The skeletonized image.</summary>
        </member>
        <member name="T:Neurotec.Biometrics.NfeTemplateSize">
            <summary>Specifies a returned NFRecord size from methods: Extract, ExtractUnpacked.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NfeTemplateSize.Small">
            <summary>The small NFRecord size.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NfeTemplateSize.SmallMedium">
            <summary>
            Small-medium NFRecord size.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NfeTemplateSize.LargeMedium">
            <summary>
            Large-medium NFRecord size.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NfeTemplateSize.Large">
            <summary>The large NFRecord size.</summary>
        </member>
        <member name="T:Neurotec.Biometrics.NfeExtractionStatus">
            <summary>Specifies fingerprint features extraction status.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NfeExtractionStatus.TemplateCreated">
            <summary>Features extracted successfully.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NfeExtractionStatus.TooFewMinutiae">
            <summary>
            Extracted minutiae count is less than MinMinutiaCount.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NfeExtractionStatus.QualityCheckFailed">
            <summary>Fingerprint image is low quality.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NfeExtractionStatus.MatchingFailed">
            <summary>
            During generalization score between two templates was less
            than required threshold.
            </summary>
        </member>
        <member name="T:Neurotec.Biometrics.NFExtractor">
            <summary>
            Provides functionality for extracting Neurotechnology Finger
            Records (NFRecords) from fingerprint images using algorithm
            encapsulated in Neurotechnology Fingerprint Features
            Extractor (NFExtractor) object.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFExtractor.ParameterTemplateSize">
            <summary>Identifier specifying template size parameter. Parameter value can be one of the TemplateSize enumeration members.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFExtractor.ParameterExtractQualities">
            <summary>Identifier specifying whether to extract quality value for each minutia.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFExtractor.ParameterExtractCurvatures">
            <summary>Identifier specifying whether to extract curvature value for each minutia.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFExtractor.ParameterExtractGs">
            <summary>Identifier specifying whether to extract G value for each minutia.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFExtractor.ParameterMinMinutiaCount">
            <summary>
            Identifier specifying minimal minutiae count.
            </summary>                                   
        </member>
        <member name="F:Neurotec.Biometrics.NFExtractor.ParameterExtractedRidgeCounts">
            <summary>Identifier specifying type of ridge counts extracted parameter of type int. Parameter value can be one of the NFRidgeCountsType enumeration members.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFExtractor.ParameterReturnedImage">
            <summary>Identifier specifying kind of image returned after extraction parameter of type int. Parameter value can be one of the NfeReturnedImage enumeration members.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFExtractor.ParameterUseQuality">
            <summary>If identifier is set to true, then methods  Extract,  ExtractUnpacked determines the quality of the image. If the image quality is lower than ParameterQualityThreshold the method do not returns template.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFExtractor.ParameterQualityThreshold">
            <summary>Identifier specifies image quality threshold.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFExtractor.ParameterGeneralizationThreshold">
            <summary>Has the same meaning for features generalization as ParameterMatchingThreshold parameter for features matching.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFExtractor.ParameterGeneralizationMaximalRotation">
            <summary>Maximal rotation of two features collection to each other. Must be in range 0°..180°.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFExtractor.ParameterGeneralizationMinMinutiaCount">
            <summary>
            Identifier specifying minimal minutiae count for
            generalization.
            </summary>                                      
        </member>
        <member name="F:Neurotec.Biometrics.NFExtractor.ParameterMode">
            <summary>Identifier specifying mode (parameter value set) parameter of type uint. Parameter value can be one of the ModeXXX.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFExtractor.ModeGeneral">
            This mode is used when none of these ModeXXX modes suites.
        </member>
        <member name="F:Neurotec.Biometrics.NFExtractor.ModeDigitalPersonaUareU">
            <summary>
            DigitalPersona U.are.U 2000 / 4000 / 4500 scanners.
            </summary>                                         
        </member>
        <member name="F:Neurotec.Biometrics.NFExtractor.ModeBiometrikaFX2000">
            <summary>
            BiometriKa FX 2000 scanner.
            </summary>                 
        </member>
        <member name="F:Neurotec.Biometrics.NFExtractor.ModeBiometrikaFX3000">
            <summary>
            BiometriKa FX 3000 scanner.
            </summary>                 
        </member>
        <member name="F:Neurotec.Biometrics.NFExtractor.ModeKeytronicSecureDesktop">
            <summary>
            Keytronic Secure Desktop scanner.
            </summary>                       
        </member>
        <member name="F:Neurotec.Biometrics.NFExtractor.ModeIdentixTouchView">
            <summary>
            Identix TouchView scanner.
            </summary>                
        </member>
        <member name="F:Neurotec.Biometrics.NFExtractor.ModeIdentixDfr2090">
            <summary>
            Identix DFR 2090 scanner. 
            </summary>                
        </member>
        <member name="F:Neurotec.Biometrics.NFExtractor.ModePreciseBiometrics100CS">
            <summary>
            Precise Biometrics 100CS scanner.
            </summary>                       
        </member>
        <member name="F:Neurotec.Biometrics.NFExtractor.ModeUpekTouchChip">
            <summary>
            UPEK TouchChip.
            </summary>     
        </member>
        <member name="F:Neurotec.Biometrics.NFExtractor.ModeIdenticatorTechnologyDF90">
            <summary>
            Identicator Technology DF90 scanner.
            </summary>                          
        </member>
        <member name="F:Neurotec.Biometrics.NFExtractor.ModeAuthentecAFS2">
            <summary>
            AuthenTec AF-S2 scanner.
            </summary>              
        </member>
        <member name="F:Neurotec.Biometrics.NFExtractor.ModeAuthentecAes4000">
            <summary>
            AuthenTec AES4000 scanner.
            </summary>                
        </member>
        <member name="F:Neurotec.Biometrics.NFExtractor.ModeAuthentecAes2501B">
            <summary>
            AuthenTec AES2501B scanner.
            </summary>                 
        </member>
        <member name="F:Neurotec.Biometrics.NFExtractor.ModeAtmelFingerChip">
            <summary>
            Atmel FingerChip scanner. 
            </summary>                
        </member>
        <member name="F:Neurotec.Biometrics.NFExtractor.ModeBmfBlp100">
            <summary>
            BMF BLP100 scanner.
            </summary>         
        </member>
        <member name="F:Neurotec.Biometrics.NFExtractor.ModeSecugenHamster">
            <summary>
            SecuGen Hamster scanner.
            </summary>              
        </member>
        <member name="F:Neurotec.Biometrics.NFExtractor.ModeEthentica">
            <summary>
            Ethentica scanner.
            </summary>        
        </member>
        <member name="F:Neurotec.Biometrics.NFExtractor.ModeCrossMatchVerifier300">
            <summary>
            Cross Match Verifier 300 scanner. 
            </summary>                        
        </member>
        <member name="F:Neurotec.Biometrics.NFExtractor.ModeNitgenFingkeyHamster">
            <summary>
            NITGEN Fingkey Hamster scanner.
            </summary>                     
        </member>
        <member name="F:Neurotec.Biometrics.NFExtractor.ModeTestechBioI">
            <summary>
            Testech Bio-i scanner.
            </summary>            
        </member>
        <member name="F:Neurotec.Biometrics.NFExtractor.ModeDigentIzzix">
            <summary>
            Digent Izzix 1000 scanner.
            </summary>                
        </member>
        <member name="F:Neurotec.Biometrics.NFExtractor.ModeStartekFM200">
            <summary>
            Startek FM200 scanner.
            </summary>            
        </member>
        <member name="F:Neurotec.Biometrics.NFExtractor.ModeFujitsuMbf200">
            <summary>
            Fujitsu MBF200 scanner.
            </summary>             
        </member>
        <member name="F:Neurotec.Biometrics.NFExtractor.ModeFutronicFS80">
            <summary>
            Futronic FS80 scanner. 
            </summary>             
        </member>
        <member name="F:Neurotec.Biometrics.NFExtractor.ModeLighTuningLttC500">
            <summary>
            LighTuning LTT-C500 Fingerprint Sensor.
            </summary>                             
        </member>
        <member name="F:Neurotec.Biometrics.NFExtractor.ModeTacomaCmos">
            <summary>
            Tacoma CMOS scanner.
            </summary>          
        </member>
        <member name="M:Neurotec.Biometrics.NFExtractor.MakeLightTemplate(Neurotec.Biometrics.NFRecord,System.Boolean,System.Boolean)">
            <summary>
            Makes template for FingerCell matcher.
            </summary>
            <param name="record">NFRecord object.</param>
            <param name="makeSmallTemplate">Determinates template
                                            size. If parameter will be
                                            true then method returns
                                            NfeTemplateSize.Small
                                            NFRecord FingerCell
                                            template; otherwise,
                                            NfeTemplateSize.Large
                                            NFRecord FingerCell
                                            template.</param>
            <param name="preserveRidgeCounts">Reserved. Should be false.</param>
            <returns>
            NFRecord template for FingerCell matcher.
            </returns>
            <remarks>
            makeSmallTemplate should be NfeTemplateSize.Small for
            FingerCell matcher.
            </remarks>                                                          
        </member>
        <member name="M:Neurotec.Biometrics.NFExtractor.MakeSmallTemplate(Neurotec.Biometrics.NFRecord)">
            <summary>
            Makes template for FingerCell matcher of NfeTemplateSize.Small
            size.
            </summary>
            <param name="record">NFRecord object.</param>
            <returns>
            NFRecord template for FingerCell matcher. 
            </returns>                                                    
        </member>
        <member name="M:Neurotec.Biometrics.NFExtractor.IsTemplateSmall(Neurotec.Biometrics.NFRecord)">
            <summary>
            Checks if specified NFRecord is of size
            NfeTemplateSize.Small.
            </summary>
            <param name="record">NFRecord object.</param>
            <returns>
            True if NFRecord is of size NfeTemplateSize.Small, false
            otherwise. 
            </returns>                                              
        </member>
        <member name="M:Neurotec.Biometrics.NFExtractor.#ctor">
            <summary>
            Initializes a new instance of the NFExtractor class.
            </summary>                                          
        </member>
        <member name="M:Neurotec.Biometrics.NFExtractor.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the NFExtractor class.
            </summary>
            <param name="isPalm">NFExtractor is a palmprint extractor.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NFExtractor.Extract(Neurotec.Images.NGrayscaleImage,Neurotec.Biometrics.NFPosition,Neurotec.Biometrics.NFImpressionType,Neurotec.Biometrics.NfeExtractionStatus@)">
            <summary>
            Extracts a NFRecord from a fingerprint image.
            </summary>
            <param name="image">The NGrayscaleImage image.</param>
            <param name="position">The finger NFPosition.</param>
            <param name="impressionType">The finger NFImpressionType.</param>
            <param name="extractionStatus">One of the
                                           NfeExtractionStatus values.</param>
            <returns>
            NFRecord object.
            </returns>
            <remarks>
            position and impressionType are written to extracted
            NFRecord. Method accepts images with 50-5000 ppi. If image
            resolution is not equal 500 ppi it will be converted to 500
            ppi. Recommended image resolution is 500 ppi.
            </remarks>                                                        
        </member>
        <member name="M:Neurotec.Biometrics.NFExtractor.UpdateTemplate(Neurotec.Images.NGrayscaleImage,Neurotec.Biometrics.NFRecord)">
            <summary></summary>
            <param name="image">The NGrayscaleImage image.</param>
            <param name="record">The NFRecord object.</param>
            <remarks>This method updates ridge counts and minutiae curvatures and Gs using the image provided.</remarks>
        </member>
        <member name="M:Neurotec.Biometrics.NFExtractor.Generalize(Neurotec.Biometrics.NFRecord[],Neurotec.Biometrics.NfeExtractionStatus@,System.Int32@)">
            <summary>
            Generalizes count features collections to single features
            collection.
            </summary>
            <param name="records">The array of NFRecord
                                  templates.</param>
            <param name="status">Generalization status</param>
            <param name="baseTemplateIndex">Index of main generalization
                                            template.</param>
            <returns>
            Byte array that contains generalized NFRecord. 
            </returns>                                                  
        </member>
        <member name="P:Neurotec.Biometrics.NFExtractor.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NFExtractor.NfeReturnedImageNativeType">
            <summary>
            Defines the native type of the fingerprint extractor returned image.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NFExtractor.NfeTemplateSizeNativeType">
            <summary>
            Defines the native type of the fingerprint extractor template size.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NFExtractor.NfeExtractionStatusNativeType">
            <summary>
            Defines the native type of the fingerprint extractor extraction status.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NFExtractor.IsPalm">
            <summary>
            Checks if the NFExtractor is a palmprint extractor.
            </summary>
            <value>
            true if NFExtractor is a palmprint extractor; otherwise,
            false.
            </value>
        </member>
        <member name="P:Neurotec.Biometrics.NFExtractor.TemplateSize">
            <summary>Gets or sets template size.</summary>
            <value>One of the NfeTemplateSize value.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NFExtractor.ExtractQualities">
            <summary>Gets or sets value indicating whether quality value for each minutia is calculated.</summary>
        </member>
        <member name="P:Neurotec.Biometrics.NFExtractor.ExtractCurvatures">
            <summary>Gets or sets value indicating whether curvature value for each minutia is calculated.</summary>
        </member>
        <member name="P:Neurotec.Biometrics.NFExtractor.ExtractGs">
            <summary>Gets or sets value indicating whether G value for each minutia is calculated.</summary>
        </member>
        <member name="P:Neurotec.Biometrics.NFExtractor.MinMinutiaCount">
            <summary>
            Gets or sets minimal minutiae count.
            </summary>
            <value>
            Gets or sets minimal minutiae count. 
            </value>                             
        </member>
        <member name="P:Neurotec.Biometrics.NFExtractor.ExtractedRidgeCounts">
            <summary>Gets or sets extracted ridge counts.</summary>
            <value>One of the NFRidgeCountsType values.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NFExtractor.ReturnedImage">
            <summary>Gets or sets the image type.</summary>
            <value>One of the NfeReturnedImage value.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NFExtractor.Mode">
            <summary>Gets or sets scanners mode.</summary>
            <value>One of the Mode constants.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NFExtractor.UseQuality">
            <summary>Gets or sets value indicating whether image quality should be checked.</summary>
            <value>true if then methods Extract, ExtractUnpacked determines the quality of the image.</value>
            <remarks>If property returns true, then methods Extract, ExtractUnpacked determines the quality of the image. If the image quality is lower than ParameterQualityThreshold the method do not returns template. The using of the quality can be set also through SetParameter method.</remarks>
        </member>
        <member name="P:Neurotec.Biometrics.NFExtractor.QualityThreshold">
            <summary>Gets or sets image quality threshold.</summary>
            <value>The image quality threshold. The value should be in range [0, 255].</value>
            <remarks>The image quality threshold can be set also through SetParameter method.</remarks>
        </member>
        <member name="P:Neurotec.Biometrics.NFExtractor.GeneralizationThreshold">
            <summary>Gets or sets generalization threshold.</summary>
            <value>Get or set generalization threshold.</value>
            <remarks>Has the same meaning for features generalization as NFMP_MATCHING_THRESHOLD parameter for features matching. The generalization threshold can be set also through SetParameter method.</remarks>
        </member>
        <member name="P:Neurotec.Biometrics.NFExtractor.GeneralizationMaximalRotation">
            <summary>
            Gets or sets maximal rotation of two features collection to
            each other.
            </summary>
            <value>
            Gets or sets generalization maximal rotation.
            </value>
            <remarks>
            Maximal rotation of two features collection to each other.
            Must be in range 0°..180°. This parameter is important to
            Generalize, GeneralizeUnpacked methods. The generalization
            maximal rotation can be set also through SetParameter method.
            </remarks>                                                   
        </member>
        <member name="P:Neurotec.Biometrics.NFExtractor.GeneralizationMinMinutiaCount">
            <summary>
            Gets or sets minimal minutiae count required for
            generalization.
            </summary>
            <value>
            Gets or sets generalization minimal minutiae count. 
            </value>                                            
        </member>
        <member name="T:Neurotec.Biometrics.NFMatchingDetails">
            <summary>
            Represents Neurotechnology Fingerprint or Palmprint Records
            (NFRecords) matching details.
            </summary>                                                 
        </member>
        <member name="M:Neurotec.Biometrics.NFMatchingDetails.GetMatedMinutiae">
            <summary>
            Gets an array of NIndexPair containing pairs of indexes of
            mated minutiae in first and second matched NFRecords.
            </summary>
            <returns>
            Array of NIndexPair containing pairs of indexes of mated
            minutiae
            </returns>                                                
        </member>
        <member name="P:Neurotec.Biometrics.NFMatchingDetails.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NFMatchingDetails.CenterX">
            <summary>
            Gets X coordinate center of mass of the second NfmVerify
            matched template.
            </summary>
            <value>
            X coordinate center of mass of matched template.
            </value>                                                
        </member>
        <member name="P:Neurotec.Biometrics.NFMatchingDetails.CenterY">
            <summary>
            Gets Y coordinate center of mass of the second NfmVerify
            matched template.
            </summary>
            <value>
            Y coordinate of second matched template.
            </value>                                                
        </member>
        <member name="P:Neurotec.Biometrics.NFMatchingDetails.Rotation">
            <summary>
            Gets rotation of second matched NFRecord against the first
            one.
            </summary>
            <value>
            Rotation of second matched NFRecord
            </value>                                                  
        </member>
        <member name="P:Neurotec.Biometrics.NFMatchingDetails.TranslationX">
            <summary>
            Gets horizontal translation of second matched NFRecord
            against the first one.
            </summary>
            <value>
            Horizontal translation of second matched NFRecord
            </value>                                              
        </member>
        <member name="P:Neurotec.Biometrics.NFMatchingDetails.TranslationY">
            <summary>
            Gets vertical translation of second matched NFRecord against
            the first one.
            </summary>
            <value>
            Vertical translation of second matched NFRecord
            </value>                                                    
        </member>
        <member name="T:Neurotec.Biometrics.NFMinutiaOrder">
            <summary>Specifies minutia order.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFMinutiaOrder.None">
            <summary>
            Specifies that minutiae are not sorted.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFMinutiaOrder.Ascending">
            <summary>Specifies that minutiae are sorted ascending by the specified order.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFMinutiaOrder.Descending">
            <summary>Specifies that minutiae are sorted descending by the specified order.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFMinutiaOrder.CartesianXY">
            <summary>Specifies that minutiae are sorted by X field. If X field of two minutiae are equal Y field is compared.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFMinutiaOrder.CartesianYX">
            <summary>Specifies that minutiae are sorted by Y field. If Y field of two minutiae are equal X field is compared.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFMinutiaOrder.Angle">
            <summary>Specifies that minutiae are sorted by Angle field.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFMinutiaOrder.Polar">
            <summary>Specifies that minutiae are sorted by distance from minutiae center of mass. If distance of two minutiae are equal Angle field is compared.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFMinutiaOrder.Quality">
            <summary>Specifies that minutiae are sorted by quality.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFMinutiaOrder.Matching">
            <summary>Specifies that minutiae are sorted by matching.</summary>
        </member>
        <member name="T:Neurotec.Biometrics.NFRecord">
            <summary>
            Provides functionality for packing, unpacking and editing
            Neurotechnology Finger Records (NFRecords).
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFRecord.Resolution">
            <summary>The resolution of minutiae, cores, deltas and double cores coordinates in a NFRecord.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFRecord.MaxFingerDimension">
            <summary>
            The maximum number of finger dimension. 
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFRecord.MaxFingerMinutiaCount">
            <summary>
            The maximum number of finger minutiae a NFRecord can contain.
            
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFRecord.MaxFingerCoreCount">
            <summary>
            The maximum number of cores a NFRecord can contain. 
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFRecord.MaxFingerDeltaCount">
            <summary>
            The maximum number of deltas a NFRecord can contain. 
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFRecord.MaxFingerDoubleCoreCount">
            <summary>
            The maximum number of double cores a NFRecord can contain. 
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFRecord.MaxPalmDimension">
            <summary>
            The maximum number of a palmprint dimension. 
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFRecord.MaxPalmMinutiaCount">
            <summary>
            The maximum number of minutiae in a palmprint a NFRecord can
            contain.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFRecord.MaxPalmCoreCount">
            <summary>
            The maximum number of cores in a palmprint a NFRecord can
            contain. 
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFRecord.MaxPalmDeltaCount">
            <summary>
            The maximum number of deltas in a palmprint a NFRecord can
            contain. 
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFRecord.MaxPalmDoubleCoreCount">
            <summary>
            The maximum number of double cores in a palmprint a NFRecord
            can contain.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFRecord.MaxPossiblePositionCount">
            <summary>
            The maximum number of possible positions a NFRecord can contain.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFRecord.FlagSkipRidgeCounts">
            <summary>
            The flag indicating whether ridge counts should be skipped while unpacking or packing NFRecord.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFRecord.FlagSkipSingularPoints">
            <summary>
            The flag indicating whether singular points (cores, deltas
            and double cores) should be skipped while unpacking or
            packing NFRecord.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFRecord.FlagSkipBlockedOrients">
            <summary>
            The flag indicating whether blocked orientations should be
            skipped while unpacking NFRecord.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFRecord.FlagSaveBlockedOrients">
            <summary>
            The flag indicating whether blocked orientations should be
            packed in NFRecord.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFRecord.FlagAllowOutOfBoundsFeatures">
            <summary>
            The flag indicating whether NFRecord shall allow features outside image dimensions.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFRecord.FlagSkipQualities">
            <summary>
            The flag indicating whether minutiae qualities should be skipped while unpacking or packing NFRecord.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFRecord.FlagSkipCurvatures">
            <summary>
            The flag indicating whether minutiae curvatures should be
            skipped while unpacking or packing NFRecord.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFRecord.FlagSkipGs">
            <summary>
            The flag indicating whether G field should be skipped while
            unpacking or packing NFRecord. 
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFRecord.FlagSaveV1">
            <summary>
            The flag indicating whether NFRecord should be saved using
            \version 1 algorithm. 
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFRecord.FlagSaveV2">
            <summary>
            The flag indicating whether NFRecord should be saved using
            \version 2 algorithm. 
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFRecord.FlagSaveV3">
            <summary>
            The flag indicating whether NFRecord should be saved using
            \version 3 algorithm.
            </summary>
        </member>
        <member name="M:Neurotec.Biometrics.NFRecord.GetMaxSize(System.Int32,System.Boolean,Neurotec.Biometrics.NFMinutiaFormat,System.Int32,Neurotec.Biometrics.NFRidgeCountsType,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Calculates the maximal NFRecord size.
            </summary>
            <param name="version">Specifies algorithm version
                                  used by this function. Can
                                  have these values\: 0, 1, 2,
                                  \3. The default value is 0 (in
                                  this case third version of
                                  algorithm will be used). </param>
            <param name="isPalm">Boolean value indicating the
                                 type of the NFRecord. If set
                                 to true, NFRecord contains
                                 palmprint record. </param>
            <param name="minutiaFormat">One of the NFMinutiaFormat
                                        values.</param>
            <param name="minutiaCount">The minutiae count</param>
            <param name="ridgeCountsType">One of the NFRidgeCountsType
                                          values.</param>
            <param name="coreCount">The cores count.</param>
            <param name="deltaCount">The deltas count.</param>
            <param name="doubleCoreCount">The double cores count.</param>
            <param name="boWidth">The width of blocked
                                  orientations. </param>
            <param name="boHeight">The height of blocked
                                   orientations.</param>
            <returns>
            The maximal NFRecord size. The size depends on method
            \parameters. 
            </returns>                                                   
        </member>
        <member name="M:Neurotec.Biometrics.NFRecord.GetMaxSize(Neurotec.Biometrics.NFMinutiaFormat,System.Int32,Neurotec.Biometrics.NFRidgeCountsType,System.Int32,System.Int32,System.Int32)">
            <summary>
            Calculates the maximal NFRecord size.
            </summary>
            <param name="minutiaFormat">One of the NFMinutiaFormat
                                        values.</param>
            <param name="minutiaCount">The minutiae count.</param>
            <param name="ridgeCountsType">One of the NFRidgeCountsType
                                          values.</param>
            <param name="coreCount">The cores count.</param>
            <param name="deltaCount">The deltas count.</param>
            <param name="doubleCoreCount">The double cores count.</param>
            <returns>
            The maximal NFRecord size. The size depends on method
            \parameters.
            </returns>                                                   
        </member>
        <member name="M:Neurotec.Biometrics.NFRecord.GetMaxSizeV1(Neurotec.Biometrics.NFMinutiaFormat,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Calculates the maximal version 1.0 NFRecord size.
            </summary>
            <param name="minutiaFormat">One of the NFMinutiaFormat
                                        values.</param>
            <param name="minutiaCount">The minutiae count.</param>
            <param name="coreCount">The cores count.</param>
            <param name="deltaCount">The deltas count.</param>
            <param name="doubleCoreCount">The double cores count.</param>
            <returns>
            The maximal version 1.0 NFRecord size. The size depends on
            method parameters.
            </returns>                                                   
        </member>
        <member name="M:Neurotec.Biometrics.NFRecord.GetMaxSizeV1(Neurotec.Biometrics.NFMinutiaFormat,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Calculates the maximal version 1.0 NFRecord size.
            </summary>
            <param name="minutiaFormat">One of the NFMinutiaFormat
                                        values.</param>
            <param name="minutiaCount">The minutiae count.</param>
            <param name="coreCount">The cores count.</param>
            <param name="deltaCount">The deltas count.</param>
            <param name="doubleCoreCount">The double cores count.</param>
            <param name="boWidth">For compatibility with
                                  VeriFinger.</param>
            <param name="boHeight">For compatibility with
                                   VeriFinger.</param>
            <returns>
            The maximal version 1.0 NFRecord size. The size depends on
            method parameters.
            </returns>                                                   
        </member>
        <member name="M:Neurotec.Biometrics.NFRecord.Check(System.Byte[])">
            <summary>Checks if format of packed NFRecord is correct.</summary>
            <param name="buffer">The packed NFRecord object.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NFRecord.Check(Neurotec.IO.NBuffer)">
            <summary>Checks if format of packed NFRecord is correct.</summary>
            <param name="buffer">The packed NFRecord object.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NFRecord.GetSize(System.Byte[])">
            <summary>
            Gets the size of packed NFRecord.
            </summary>
            <param name="buffer">The packed NFRecord object.</param>
            <returns>Size of NFRecord object.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NFRecord.GetSize(Neurotec.IO.NBuffer)">
            <summary>
            Gets the size of packed NFRecord.
            </summary>
            <param name="buffer">The packed NFRecord object.</param>
            <returns>Size of NFRecord object.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NFRecord.GetWidth(System.Byte[])">
            <summary>Retrieves width of fingerprint image from packed NFRecord.</summary>
            <param name="buffer">The byte array of packed NFRecord.</param>
            <returns>The width of fingerprint image.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NFRecord.GetWidth(Neurotec.IO.NBuffer)">
            <summary>Retrieves width of fingerprint image from packed NFRecord.</summary>
            <param name="buffer">NBuffer of packed NFRecord.</param>
            <returns>The width of fingerprint image.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NFRecord.GetHeight(System.Byte[])">
            <summary>Retrieves height of fingerprint image from packed NFRecord.</summary>
            <param name="buffer">The packed NFRecord object.</param>
            <returns>The height of fingerprint image.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NFRecord.GetHeight(Neurotec.IO.NBuffer)">
            <summary>Retrieves height of fingerprint image from packed NFRecord.</summary>
            <param name="buffer">The packed NFRecord object.</param>
            <returns>The height of fingerprint image.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NFRecord.GetHorzResolution(System.Byte[])">
            <summary>Retrieves horizontal resolution in pixels per inch of fingerprint image from packed NFRecord.</summary>
            <param name="buffer">The byte array of packed NFRecord.</param>
            <returns>The horizontal resolution in pixels per inch of fingerprint image.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NFRecord.GetHorzResolution(Neurotec.IO.NBuffer)">
            <summary>Retrieves horizontal resolution in pixels per inch of fingerprint image from packed NFRecord.</summary>
            <param name="buffer">NBuffer of packed NFRecord.</param>
            <returns>The horizontal resolution in pixels per inch of fingerprint image.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NFRecord.GetVertResolution(System.Byte[])">
            <summary>Retrieves vertical resolution of fingerprint image from packed NFRecord.</summary>
            <param name="buffer">The byte array of packed NFRecord.</param>
            <returns>The vertical resolution in pixels per inch of fingerprint image.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NFRecord.GetVertResolution(Neurotec.IO.NBuffer)">
            <summary>Retrieves vertical resolution of fingerprint image from packed NFRecord.</summary>
            <param name="buffer">NBuffer of packed NFRecord.</param>
            <returns>The vertical resolution in pixels per inch of fingerprint image.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NFRecord.GetPosition(System.Byte[])">
            <summary>Retrieves finger position from packed NFRecord.</summary>
            <param name="buffer">The byte array of packed NFRecord.</param>
            <returns>One of the NFPosition values.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NFRecord.GetPosition(Neurotec.IO.NBuffer)">
            <summary>Retrieves finger position from packed NFRecord.</summary>
            <param name="buffer">NBuffer of packed NFRecord.</param>
            <returns>One of the NFPosition values.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NFRecord.GetImpressionType(System.Byte[])">
            <summary>Retrieves impression type from packed NFRecord.</summary>
            <param name="buffer">The byte array of packed NFRecord.</param>
            <returns>A NFImpressionType enumeration member specifying impression type of fingerprint.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NFRecord.GetImpressionType(Neurotec.IO.NBuffer)">
            <summary>Retrieves impression type from packed NFRecord.</summary>
            <param name="buffer">NBuffer of packed NFRecord.</param>
            <returns>A NFImpressionType enumeration member specifying impression type of fingerprint.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NFRecord.GetPatternClass(System.Byte[])">
            <summary>
            Retrieves fingerprint pattern class from packed NFRecord.
            </summary>
            <param name="buffer">The byte array of packed NFRecord.</param>
            <returns>
            One of the NFPatternClass values.
            </returns>
            <remarks>
            \1. This function supports both NFRecord version 1.0 and 2.0
            formats. Always returns NFPatternClass.Unknown for version
            1.0 format.
            
            \2. This method returns NFPatternClass if NFPatternClass was
            set using PatternClass.
            
            \3. Classify can be used for classification. 
            </remarks>
        </member>
        <member name="M:Neurotec.Biometrics.NFRecord.GetPatternClass(Neurotec.IO.NBuffer)">
            <summary>
            Retrieves fingerprint pattern class from packed NFRecord.
            </summary>
            <param name="buffer">NBuffer of packed NFRecord.</param>
            <returns>
            One of the NFPatternClass values.
            </returns>
            <remarks>
            \1. This function supports both NFRecord version 1.0 and 2.0
            formats. Always returns NFPatternClass.Unknown for version
            1.0 format.
            
            \2. This method returns NFPatternClass if NFPatternClass was
            set using PatternClass.
            
            \3. Classify can be used for classification. 
            </remarks>
        </member>
        <member name="M:Neurotec.Biometrics.NFRecord.GetQuality(System.Byte[])">
            <summary>Retrieves fingerprint quality from packed NFRecord.</summary>
            <param name="buffer">The byte array of packed NFRecord.</param>
            <returns>The value of fingerprint quality.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NFRecord.GetQuality(Neurotec.IO.NBuffer)">
            <summary>Retrieves fingerprint quality from packed NFRecord.</summary>
            <param name="buffer">NBuffer of packed NFRecord.</param>
            <returns>The value of fingerprint quality.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NFRecord.GetG(System.Byte[])">
            <summary>Retrieves G from packed NFRecord.</summary>
            <param name="buffer">The packed NFRecord object.</param>
            <returns>The G from packed NFRecord. G - average fingerprint ridge density. It can have values from 0 to 255, so it occupies one byte.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NFRecord.GetG(Neurotec.IO.NBuffer)">
            <summary>Retrieves G from packed NFRecord.</summary>
            <param name="buffer">The packed NFRecord object.</param>
            <returns>The G from packed NFRecord. G - average fingerprint ridge density. It can have values from 0 to 255, so it occupies one byte.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NFRecord.GetCbeffProductType(System.Byte[])">
            <summary>
            Retrieves the Cbeff product type of the NFRecord.
            </summary>
            <param name="buffer">The packed NFRecord object.</param>
            <returns>
            The Cbeff product type.
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NFRecord.GetCbeffProductType(Neurotec.IO.NBuffer)">
            <summary>
            Retrieves the Cbeff product type of the NFRecord.
            </summary>
            <param name="buffer">The packed NFRecord object.</param>
            <returns>
            The Cbeff product type.
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NFRecord.#ctor(System.UInt16,System.UInt16,System.UInt16,System.UInt16)">
            <summary>Initializes a new instance of the NFRecord class.</summary>
            <param name="width">The fingerprint image width.</param>
            <param name="height">The fingerprint image height.</param>
            <param name="horzResolution">Horizontal resolution in pixels per inch of fingerprint image.</param>
            <param name="vertResolution">Vertical resolution in pixels per inch of fingerprint image.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NFRecord.#ctor(System.UInt16,System.UInt16,System.UInt16,System.UInt16,System.UInt32)">
            <summary>Initializes a new instance of the NFRecord class.</summary>
            <param name="width">The fingerprint image width.</param>
            <param name="height">The fingerprint image height.</param>
            <param name="horzResolution">Horizontal resolution in pixels per inch of fingerprint image.</param>
            <param name="vertResolution">Vertical resolution in pixels per inch of fingerprint image.</param>
            <param name="flags">Bitwise combination of zero or more flags that controls behavior of the constructor.</param>
            <remarks>The following flags are supported: FlagSkipBlockedOrients, FlagSkipCurvatures, FlagSkipGs, FlagSkipQualities, FlagSkipRidgeCounts, FlagSkipSingularPoints.</remarks>
        </member>
        <member name="M:Neurotec.Biometrics.NFRecord.#ctor(System.Boolean,System.UInt16,System.UInt16,System.UInt16,System.UInt16)">
            <summary>
            Initializes a new instance of the NFRecord class.
            </summary>
            <param name="isPalm">Indicates that NFRecord was
                                 created for palmprints.</param>
            <param name="width">Specifies width of fingerprint
                                or palmprint image. </param>
            <param name="height">Specifies height of fingerprint
                                 or palmprint image.</param>
            <param name="horzResolution">Specifies horizontal resolution
                                         in pixels per inch of
                                         fingerprint or palmprint image.
                                         </param>
            <param name="vertResolution">Specifies vertical resolution
                                         in pixels per inch of
                                         fingerprint or palmprint image.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NFRecord.#ctor(System.Boolean,System.UInt16,System.UInt16,System.UInt16,System.UInt16,System.UInt32)">
            <summary>
            Initializes a new instance of the NFRecord class.
            </summary>
            <param name="isPalm">Indicates if the NFRecord is
                                 for palmprints.</param>
            <param name="width">Specifies width of fingerprint
                                or palmprint image. </param>
            <param name="height">Specifies height of fingerprint
                                 or palmprint image.</param>
            <param name="horzResolution">Specifies horizontal resolution
                                         in pixels per inch of
                                         fingerprint or palmprint image.</param>
            <param name="vertResolution">Specifies vertical resolution
                                         in pixels per inch of
                                         fingerprint or palmprint image.</param>
            <param name="flags">Bitwise combination of zero or
                                more flags that controls
                                behavior of the constructor.</param>
            <remarks>
            The following flags are supported: FlagSkipBlockedOrients,
            FlagSkipCurvatures, FlagSkipGs, FlagSkipQualities,
            FlagSkipRidgeCounts, FlagSkipSingularPoints. 
            </remarks>
        </member>
        <member name="M:Neurotec.Biometrics.NFRecord.#ctor(System.Byte[])">
            <summary>Initializes a new instance of the NFRecord class.</summary>
            <param name="buffer">The packed NFRecord object.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NFRecord.#ctor(Neurotec.IO.NBuffer)">
            <summary>Initializes a new instance of the NFRecord class.</summary>
            <param name="buffer">The packed NFRecord object.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NFRecord.#ctor(Neurotec.IO.NBuffer,System.UInt32)">
            <summary>Initializes a new instance of the NFRecord class.</summary>
            <param name="buffer">The packed NFRecord object.</param>
            <param name="flags">Bitwise combination of zero or
                                more flags that controls
                                behavior of the constructor.</param>
            <remarks>
            The following flags are supported: FlagSkipBlockedOrients,
            FlagSkipCurvatures, FlagSkipGs, FlagSkipQualities,
            FlagSkipRidgeCounts, FlagSkipSingularPoints. 
            </remarks>
        </member>
        <member name="M:Neurotec.Biometrics.NFRecord.#ctor(Neurotec.IO.NBuffer,System.UInt32,System.Int32@)">
            <summary>Initializes a new instance of the NFRecord class.</summary>
            <param name="buffer">The packed NFRecord object.</param>
            <param name="flags">Bitwise combination of zero or
                                more flags that controls
                                behavior of the constructor.</param>
            <param name="size">NFRecord size.</param>
            <remarks>
            The following flags are supported: FlagSkipBlockedOrients,
            FlagSkipCurvatures, FlagSkipGs, FlagSkipQualities,
            FlagSkipRidgeCounts, FlagSkipSingularPoints. 
            </remarks>
        </member>
        <member name="M:Neurotec.Biometrics.NFRecord.GetSizeV1(System.UInt32)">
            <summary>Calculates version 1.0 packed size of NFRecord. Behavior is controlled through flags.</summary>
            <param name="flags">Bitwise combination of zero or more flags that controls behavior of the method.</param>
            <returns>The packed size of NFRecord.</returns>
            <remarks>For the list of flags that are supported seeSaveV1 function.</remarks>
        </member>
        <member name="M:Neurotec.Biometrics.NFRecord.GetSizeV1">
            <summary>Calculates version 1.0 packed size of NFRecord.</summary>
            <returns>The packed size of NFRecord.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NFRecord.SaveV1(Neurotec.IO.NBuffer)">
            <summary>
            Packs NFRecord to memory buffer in version 1.0 format.
            </summary>
            <param name="buffer">NBuffer to save NFRecord to.</param>
            <returns>The size of the buffer.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NFRecord.SaveV1(Neurotec.IO.NBuffer,System.UInt32)">
            <summary>
            Packs NFRecord to memory buffer in version 1.0 format.
            </summary>
            <param name="buffer">NBuffer to save NFRecord to.</param>
            <param name="flags">Associated flags.</param>
            <returns>The size of the buffer.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NFRecord.SaveV1(System.UInt32)">
            <summary>Packs NFRecord to memory buffer in version 1.0 format.</summary>
            <param name="flags">Bitwise combination of zero or more flags that controls behavior of the method.</param>
            <returns>The byte array of packed NFRecord.</returns>
            <remarks>Note that blocked orientations are not packed by default. The following flags are supported: FlagSaveBlockedOrients, FlagSkipCurvatures, FlagSkipGs, FlagSkipSingularPoints.</remarks>
        </member>
        <member name="M:Neurotec.Biometrics.NFRecord.SaveV1">
            <summary>
            Packs NFRecord to byte array in version 1.0 format.
            </summary>
            <returns>
            The byte array of packed NFRecord. 
            </returns>                                         
        </member>
        <member name="M:Neurotec.Biometrics.NFRecord.SortMinutiae(Neurotec.Biometrics.NFMinutiaOrder)">
            <summary>Sorts minutiae in NFRecord by the specified order.</summary>
            <param name="order">NFMinutiaOrder value.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NFRecord.TruncateMinutiaeByQuality(System.Byte,System.Int32)">
            <summary>Truncates minutiae in NFRecord by removing minutiae which NFMinutia.Quality field value is less than the specified threshold while minutia count is greater than the specified maximal count.</summary>
            <param name="threshold">Specifies minimal NFMinutia.Quality field value of minutiae not to be removed.</param>
            <param name="maxCount">Maximal minutia count to be present in the NFRecord after truncation.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NFRecord.TruncateMinutiae(System.Int32)">
            <summary>Truncates minutiae in NFRecord by peeling off the minutiae convex hull while minutia count is greater than the specified maximal count.</summary>
            <param name="maxCount">Maximal minutia count to be present in the NFRecord after truncation.</param>
        </member>
        <member name="P:Neurotec.Biometrics.NFRecord.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NFRecord.Width">
            <summary>Gets width of fingerprint image.</summary>
            <value>Width of fingerprint image.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NFRecord.Height">
            <summary>Gets the height of fingerprint image.</summary>
            <value>Height of fingerprint image.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NFRecord.HorzResolution">
            <summary>Gets horizontal resolution of fingerprint image.</summary>
            <value>Horizontal resolution in pixels per inch of fingerprint image.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NFRecord.VertResolution">
            <summary>Gets vertical resolution of fingerprint image.</summary>
            <value>Vertical resolution in pixels per inch of fingerprint image.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NFRecord.Position">
            <summary>
            Gets or sets finger position.
            </summary>
            <value>
            One of the NFPosition values. By default is Neurotec.Biometrics.NFPosition.Unknown.
            </value>                                                                           
        </member>
        <member name="P:Neurotec.Biometrics.NFRecord.ImpressionType">
            <summary>
            Gets or sets the impression type of the NFRecord.
            </summary>
            <value>
            One of the NFImpressionType values. The default is
            Neurotec.Biometrics.NFImpressionType.LiveScanPlain.
            </value>                                           
        </member>
        <member name="P:Neurotec.Biometrics.NFRecord.PatternClass">
            <summary>
            Gets or sets pattern class.
            </summary>
            <value>
            One of the NFPatternClass values. By default is
            Neurotec.Biometrics.NFPatternClass.Unknown.
            </value>
            <remarks>
            This property gets NFPatternClass if NFPatternClass was set
            before getting.
            </remarks>                                                 
        </member>
        <member name="P:Neurotec.Biometrics.NFRecord.Quality">
            <summary>Gets or sets fingerprint quality.</summary>
            <value>Fingerprint quality.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NFRecord.G">
            <summary>Gets or sets additional fingerprint coefficient.</summary>
            <value>Fingerprint coefficient.</value>
            <remarks>G - average fingerprint ridge density. It can have values from 0 to 255, so it occupies one byte.</remarks>
        </member>
        <member name="P:Neurotec.Biometrics.NFRecord.CbeffProductType">
            <summary>Gets or sets the Cbeff product type of the NFRecord.</summary>
            <value>The Cbeff product type.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NFRecord.RidgeCountsType">
            <summary>Gets or sets ridge counts type.</summary>
            <value>One of the NFRidgeCountsType values.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NFRecord.MinutiaFormat">
            <summary>
            Gets or sets minutia format minutia format from NFRecord.
            </summary>
            <value>
            One of the NFMinutiaFormat values. The default is
            Neurotec.Biometrics.NFMinutiaFormat.HasCurvature.
            </value>                                                 
        </member>
        <member name="P:Neurotec.Biometrics.NFRecord.Minutiae">
            <summary>
            Gets minutiae collection.
            </summary>
            <returns>
            A MinutiaCollection that contains minutiae.
            </returns>                                 
        </member>
        <member name="P:Neurotec.Biometrics.NFRecord.MinutiaeNeighbors">
            <summary>Gets minutia neighbors format from NFRecord.</summary>
            <value>A MinutiaNeighborsCollection collection.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NFRecord.Cores">
            <summary>
            Gets cores collection.
            </summary>
            <returns>
            A CoreCollection that contains cores.
            </returns>                           
        </member>
        <member name="P:Neurotec.Biometrics.NFRecord.Deltas">
            <summary>
            Gets deltas collection.
            </summary>
            <returns>
            A DeltaCollection that contains deltas.
            </returns>                             
        </member>
        <member name="P:Neurotec.Biometrics.NFRecord.DoubleCores">
            <summary>
            Gets double cores collection.
            </summary>
            <returns>
            A DoubleCoreCollection that contains double cores. 
            </returns>                                         
        </member>
        <member name="P:Neurotec.Biometrics.NFRecord.PossiblePositions">
            <summary>
            Gets possible position collection.
            </summary>
            <returns>
            A PossiblePositionCollection that contains possible positions.
            </returns>                             
        </member>
        <member name="T:Neurotec.Biometrics.NFRecord.MinutiaCollection">
            <summary>
            Represents the collection of NFMinutia.
            </summary>                             
        </member>
        <member name="T:Neurotec.Biometrics.NFRecord.MinutiaNeighborsCollection">
            <summary>
            Represents the collection of NFMinutiaNeighbor.
            </summary>                                     
        </member>
        <member name="T:Neurotec.Biometrics.NFRecord.CoreCollection">
            <summary>
            Represents the collection of NFCore.
            </summary>                          
        </member>
        <member name="T:Neurotec.Biometrics.NFRecord.DeltaCollection">
            <summary>
            Represents the collection of NFDelta.
            </summary>                           
        </member>
        <member name="T:Neurotec.Biometrics.NFRecord.DoubleCoreCollection">
            <summary>
            Represents the collection of NFDoubleCore.
            </summary>                                
        </member>
        <member name="T:Neurotec.Biometrics.NFRecord.PossiblePositionCollection">
            <summary>
            Represents the collection of possible NFPosition.
            </summary>                             
        </member>
        <member name="T:Neurotec.Biometrics.Tools.NFSegment">
            <summary>
            Provides functionality for detecting and cutting fingerprints from fingerprint cards. 
            </summary>                                                                            
        </member>
        <member name="P:Neurotec.Biometrics.Tools.NFSegment.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.Tools.NFSegment.TopLeft">
            <summary>
            Gets top left corner coordinates of fingerprint segment.
            </summary>
            <value>
            Top left corner coordinates of fingerprint segment object.
            </value>                                                  
        </member>
        <member name="P:Neurotec.Biometrics.Tools.NFSegment.TopRight">
            <summary>
            Gets top right corner coordinates of fingerprint segment.
            </summary>
            <value>
            Top right corner coordinates of fingerprint segment object.
            </value>                                                   
        </member>
        <member name="P:Neurotec.Biometrics.Tools.NFSegment.BottomRight">
            <summary>
            Gets bottom right corner coordinates of fingerprint segment.
            </summary>
            <value>
            Bottom right corner coordinates of fingerprint segment
            object.
            </value>                                                    
        </member>
        <member name="P:Neurotec.Biometrics.Tools.NFSegment.BottomLeft">
            <summary>
            Gets bottom left corner coordinates of fingerprint segment.
            </summary>
            <value>
            Bottom left corner coordinates of fingerprint segment object.
            </value>                                                     
        </member>
        <member name="P:Neurotec.Biometrics.Tools.NFSegment.Position">
            <summary>
            Gets position of fingerprint segment.
            </summary>
            <value>
            Position of fingerprint segment object.
            </value>                                                     
        </member>
        <member name="P:Neurotec.Biometrics.Tools.NFSegment.Status">
            <summary>
            Gets status of fingerprint segment.
            </summary>
            <value>
            Object status indicates whether an object was detected. If at least one of
            requested objects has status not equal to Ok, it indicates that segmentation
            has failed. Application can display partial results to user nonetheless.
            </value>                                                     
        </member>
        <member name="P:Neurotec.Biometrics.Tools.NFSegment.PossiblePositions">
            <summary>
            Gets or sets possible fingerprint positions.
            </summary>
        </member>
        <member name="T:Neurotec.Biometrics.Tools.NFSegment.PossiblePositionCollection">
            <summary>
            Represents the collection of possible NFPosition.
            </summary>                             
        </member>
        <member name="T:Neurotec.Biometrics.Tools.NFSegmenter">
            <summary>
            Provides functionality for detecting and cutting fingerprints
            from fingerprint cards.
            </summary>
            <remarks>
            The functionality of the NFSegment is accessible through
            Neurotec.Biometrics.NFSegmenter.dll which is a wrapper of the
            NFSegmenter.dll. 
            </remarks>                                                   
        </member>
        <member name="F:Neurotec.Biometrics.Tools.NFSegmenter.ParameterRemoveBackground">
            If set to true removes background from segmented fingerprint pictures (background is filled with
            white color).                                                                                   
        </member>
        <member name="F:Neurotec.Biometrics.Tools.NFSegmenter.ParameterUseOld">
            <paraattr align="justify">
            Turns on old NFSegmenter algorithm. Old fingerprint segmenting algorithm returns positions for all
            segments. New algorithm can return less segments (also sometimes can assign <i>Unknown</i>
            positions).
            </paraattr>                                                                                       
        </member>
        <member name="M:Neurotec.Biometrics.Tools.NFSegmenter.Locate(Neurotec.Images.NGrayscaleImage,Neurotec.Biometrics.NFPosition,Neurotec.Biometrics.NFPosition[])">
            <summary>
            Locates fingerprint segments by finger position in a given
            fingerprint card.
            </summary>
            <param name="image">Fingerprint card image.</param>
            <param name="position">Finger position which to locate in
                                   fingerprint card image.</param>
            <param name="missingFingers">Missing fingerprint positions.</param>
            <returns>
            Array of fingerprint segments NFSegment.
            </returns>                                                
        </member>
        <member name="M:Neurotec.Biometrics.Tools.NFSegmenter.Locate(Neurotec.Images.NGrayscaleImage,Neurotec.Biometrics.NFPosition)">
            <summary>
            Locates fingerprint segments by finger position in a given
            fingerprint card.
            </summary>
            <param name="image">Fingerprint card image.</param>
            <param name="position">Finger position which to locate in
                                   fingerprint card image.</param>
            <returns>
            Array of fingerprint segments NFSegment.
            </returns>                                                
        </member>
        <member name="M:Neurotec.Biometrics.Tools.NFSegmenter.CutSingle(Neurotec.Images.NGrayscaleImage,Neurotec.Biometrics.Tools.NFSegment)">
            <summary>Cuts one fingerprint image from a given fingerprint card using a given fingerprint segment.</summary>
            <param name="image">Fingerprint card image</param>
            <param name="segment">Fingerprint segment in given fingerprint card image.</param>
            <returns>Image of fingerprint in the given segment cut from the fingerprint card image.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.Tools.NFSegmenter.CutMultiple(Neurotec.Images.NGrayscaleImage,Neurotec.Biometrics.Tools.NFSegment[])">
            <summary>Cuts multiple fingerprint images form a given fingerprint card using array of fingerprint segments.</summary>
            <param name="image">Fingerprint card image</param>
            <param name="segments">Array of fingerprint segments in given fingerprint card image.</param>
            <returns>Array of image of fingerprints in the given segments cut from the fingerprint card image.</returns>
        </member>
        <member name="P:Neurotec.Biometrics.Tools.NFSegmenter.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.Tools.NFSegmenter.RemoveBackground">
            <summary>
            Gets or sets ParameterRemoveBackground value.
            </summary>
            <value>
            ParameterRemoveBackground value.
            </value>                                     
        </member>
        <member name="P:Neurotec.Biometrics.Tools.NFSegmenter.UseOld">
            <summary>
            Gets or sets ParameterUseOld value.
            </summary>
            <value>
            ParameterUseOld value.
            </value>                           
        </member>
        <member name="T:Neurotec.Biometrics.NFTemplate">
            <summary>
            Provides functionality for packing, unpacking and editing
            Neurotechnology Fingers Templates (NFTemplates). 
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFTemplate.MaxRecordCount">
            <summary>The maximum number of finger records NFTemplate can contain.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NFTemplate.FlagProcessFirstRecordOnly">
            <summary>
            The flag indicating whether only the first finger record
            should be unpacked or packed while unpacking or packing
            NFTemplate. 
            </summary>                                              
        </member>
        <member name="M:Neurotec.Biometrics.NFTemplate.CalculateSize(System.Int32[])">
            <summary>Calculates NFTemplate size.</summary>
            <param name="recordSizes">An array that contains NFRecords sizes.</param>
            <returns>A size of records.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NFTemplate.CalculateSize(System.Boolean,System.Int32[])">
            <summary>
            Calculates NFTemplate size.
            </summary>
            <param name="isPalm">Indicates if the record contains
                                 palms. </param>
            <param name="recordSizes">An array that contains NFRecords
                                      sizes.</param>
            <returns>
            The value of NFTemplate size. 
            </returns>                                                
        </member>
        <member name="M:Neurotec.Biometrics.NFTemplate.Check(System.Byte[])">
            <summary>Checks if format of packed NFTemplate format is correct.</summary>
            <param name="buffer">A byte array with packed NFTemplate.</param>
            <returns>true if NFTemplate format is correct, false otherwise.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NFTemplate.Check(Neurotec.IO.NBuffer)">
            <summary>Checks if format of packed NFTemplate format is correct.</summary>
            <param name="buffer">NBuffer with packed NFTemplate.</param>
            <returns>true if NFTemplate format is correct, false otherwise.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NFTemplate.IsPalmTemplate(System.Byte[])">
            <summary>
            Checks if the NFTemplate contains packed palm records.
            </summary>
            <param name="buffer">Byte array that contains packed
                                 NFTemplate. </param>
            <returns>
            true if the NFTemplate contains palm records; otherwise,
            false. 
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NFTemplate.IsPalmTemplate(Neurotec.IO.NBuffer)">
            <summary>
            Checks if the NFTemplate contains packed palm records.
            </summary>
            <param name="buffer">NBuffer that contains packed
                                 NFTemplate. </param>
            <returns>
            true if the NFTemplate contains palm records; otherwise,
            false. 
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NFTemplate.GetSize(System.Byte[])">
            <summary>
            Gets packed NFTemplate size.
            </summary>
            <param name="buffer">Packed NFTemplate.</param>
            <returns>NFTemplate size.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NFTemplate.GetSize(Neurotec.IO.NBuffer)">
            <summary>
            Gets packed NFTemplate size.
            </summary>
            <param name="buffer">Packed NFTemplate.</param>
            <returns>NFTemplate size.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NFTemplate.GetRecordCount(System.Byte[])">
            <summary>Retrieves records count.</summary>
            <param name="buffer">A byte array with NFTemplate.</param>
            <returns>Records count.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NFTemplate.GetRecordCount(Neurotec.IO.NBuffer)">
            <summary>Retrieves records count.</summary>
            <param name="buffer">NBuffer with NFTemplate.</param>
            <returns>Records count.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NFTemplate.#ctor">
            <summary>Initializes a new instance of the NFTemplate class.</summary>
        </member>
        <member name="M:Neurotec.Biometrics.NFTemplate.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the NFTemplate class.
            </summary>
            <param name="flags">Bitwise combination of zero or more
                                flags that controls behavior of the
                                constructor. </param>
            <remarks>
            The following flags are supported:
              * FlagProcessFirstRecordOnly
              * FlagSkipBlockedOrients
              * FlagSkipCurvatures
              * FlagSkipGs
              * FlagSkipQualities
              * FlagSkipRidgeCounts
              * FlagSkipSingularPoints
            are applied to each finger record contained in the
            NFTemplate. 
            </remarks>                                             
        </member>
        <member name="M:Neurotec.Biometrics.NFTemplate.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the NFTemplate class.
            </summary>
            <param name="isPalm">Boolean value indicating the type of
                                 NFTemplate. If set to true, NFTemplate
                                 contains palmprint record. If set to
                                 false, NFTemplate contains fingerprint
                                 record. </param>                      
        </member>
        <member name="M:Neurotec.Biometrics.NFTemplate.#ctor(System.Boolean,System.UInt32)">
            <summary>
            Initializes a new instance of the NFTemplate class.
            </summary>
            <param name="isPalm">Boolean value indicating the type of
                                 NFTemplate. If set to true, NFTemplate
                                 contains palmprint record. If set to
                                 false, NFTemplate contains fingerprint
                                 record. </param>
            <param name="flags">Bitwise combination of zero or more
                                flags that controls behavior of the
                                constructor. This parameter is
                                reserved, must be zero. </param>       
        </member>
        <member name="M:Neurotec.Biometrics.NFTemplate.#ctor(System.Byte[])">
            <summary>Initializes a new instance of the NFTemplate class.</summary>
            <param name="buffer">A byte array with packed NFTemplate objects.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NFTemplate.#ctor(Neurotec.IO.NBuffer)">
            <summary>
            Initializes a new instance of the NFTemplate class.
            </summary>
            <param name="buffer">NBuffer with packed NFTemplate objects.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NFTemplate.#ctor(Neurotec.IO.NBuffer,System.UInt32)">
            <summary>
            Initializes a new instance of the NFTemplate class.
            </summary>
            <param name="buffer">NBuffer with packed NFTemplate objects.</param>
            <param name="flags">Must be zero.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NFTemplate.#ctor(Neurotec.IO.NBuffer,System.UInt32,System.Int32@)">
            <summary>
            Initializes a new instance of the NFTemplate class.
            </summary>
            <param name="buffer">NBuffer with packed NFTemplate objects.</param>
            <param name="flags">Must be zero.</param>
            <param name="size">[out] NFTemplate size.</param>
        </member>
        <member name="P:Neurotec.Biometrics.NFTemplate.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NFTemplate.IsPalm">
            <summary>
            Checks if the NFTemplate contains palm records.
            </summary>
            <value>
            true if NFTemplate contains palm records; otherwise, false.
            </value>                                                   
        </member>
        <member name="P:Neurotec.Biometrics.NFTemplate.Records">
            <summary>
            Gets Records collection.
            </summary>
            <value>
            A RecordCollection collection.
            </value>                      
        </member>
        <member name="T:Neurotec.Biometrics.NFTemplate.RecordCollection">
            <summary>
            Collection of NFRecords. 
            </summary>               
        </member>
        <member name="M:Neurotec.Biometrics.NFTemplate.RecordCollection.Add(System.UInt16,System.UInt16,System.UInt16,System.UInt16)">
            <summary>
            Adds an object to the end of the RecordCollection.
            </summary>
            <param name="width">width of image.</param>
            <param name="height">height of image.</param>
            <param name="horzResolution">horizontal resolution in pixels
                                         per inch of image.</param>
            <param name="vertResolution">vertical resolution in pixels
                                         per inch of image.</param>
            <returns>
            Added to the collection NFTemplate object. 
            </returns>                                                  
        </member>
        <member name="M:Neurotec.Biometrics.NFTemplate.RecordCollection.Add(System.UInt16,System.UInt16,System.UInt16,System.UInt16,System.UInt32)">
            <summary>
            Adds an object to the end of the RecordCollection.
            </summary>
            <param name="width">width of image.</param>
            <param name="height">height of image.</param>
            <param name="horzResolution">horizontal resolution in pixels
                                         per inch of image.</param>
            <param name="vertResolution">vertical resolution in pixels
                                         per inch of image.</param>
            <param name="flags">Bitwise combination of zero or
                                more flags that controls
                                behavior of the method. This
                                parameter is reserved, must be
                                zero.</param>
            <returns>
            Added to the collection NFTemplate object. 
            </returns>                                                  
        </member>
        <member name="M:Neurotec.Biometrics.NFTemplate.RecordCollection.Add(System.Byte[])">
            <summary>
            Adds an object to the end of the RecordCollection.
            </summary>
            <param name="buffer">The packed NFTemplate object.</param>
            <returns>
            Added to the collection NFTemplate object. 
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NFTemplate.RecordCollection.Add(Neurotec.IO.NBuffer)">
            <summary>
            Adds an object to the end of the RecordCollection.
            </summary>
            <param name="buffer">The packed NFTemplate object.</param>
            <returns>Added to the collection NFTemplate object. </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NFTemplate.RecordCollection.Add(Neurotec.IO.NBuffer,System.UInt32)">
            <summary>
            Adds an object to the end of the RecordCollection.
            </summary>
            <param name="buffer">The packed NFTemplate object.</param>
            <param name="flags">Must be zero.</param>
            <returns>Added to the collection NFTemplate object. </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NFTemplate.RecordCollection.Add(Neurotec.IO.NBuffer,System.UInt32,System.Int32@)">
            <summary>
            Adds an object to the end of the RecordCollection.
            </summary>
            <param name="buffer">The packed NFTemplate object.</param>
            <param name="flags">Must be zero.</param>
            <param name="size">[out] NFTemplate size.</param>
            <returns>Added to the collection NFTemplate object. </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NFTemplate.RecordCollection.AddCopy(Neurotec.Biometrics.NFRecord)">
            <summary>
            Copies NFTemplate object to the RecordCollection.
            </summary>
            <param name="srcRecord">The NFTemplate object.</param>
            <returns>
            Copied to the collection NFTemplate object. 
            </returns>                                            
        </member>
        <member name="M:Neurotec.Biometrics.NFTemplate.RecordCollection.AddCopy(Neurotec.Biometrics.NFRecord,System.UInt32)">
            <summary>
            Copies NFTemplate object to the RecordCollection.
            </summary>
            <param name="srcRecord">The NFTemplate object.</param>
            <param name="flags">Flag controlling function.</param>
            <returns>
            Copied to the collection NFTemplate object. 
            </returns>                                            
        </member>
        <member name="T:Neurotec.Biometrics.NLAttributes">
            <summary>
            Provides methods to retrieve face template attributes. 
            </summary>
        </member>
        <member name="M:Neurotec.Biometrics.NLAttributes.#ctor">
            <summary>
            Initializes a new instance of NLAttributes class.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NLAttributes.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="T:Neurotec.Biometrics.NleRotation">
            <summary>
            Structure containing information of a face rotation in an
            image as a deviation from frontal face in degrees.
            </summary>                                               
        </member>
        <member name="P:Neurotec.Biometrics.NleRotation.Yaw">
            <summary>
            Face yaw angle in degrees.
            </summary>                
        </member>
        <member name="P:Neurotec.Biometrics.NleRotation.Pitch">
            <summary>
            Face pitch angle in degrees.
            </summary>                
        </member>
        <member name="P:Neurotec.Biometrics.NleRotation.Roll">
            <summary>
            Face roll angle in degrees.
            </summary>                
        </member>
        <member name="T:Neurotec.Biometrics.NleFace">
            <summary>
            Structure containing information of a face location in an
            image.
            </summary>                                               
        </member>
        <member name="P:Neurotec.Biometrics.NleFace.Rectangle">
            <summary>
            Gets or sets information of the rectangle covering the face
            region.
            </summary>
            <value>
            A set of four integers that represent the location and size of
            a rectangle.
            </value>                                                     
        </member>
        <member name="P:Neurotec.Biometrics.NleFace.Rotation">
            <summary>
            Gets or sets information on face rotation in the image.
            </summary>
            <value>
            A set of three shorts that represent rotation of the face in
            the image in degrees.
            </value>                                                     
        </member>
        <member name="P:Neurotec.Biometrics.NleFace.Confidence">
            <summary>
            Determines how confident the face region was found.
            </summary>                                         
        </member>
        <member name="T:Neurotec.Biometrics.NleEyes">
            <summary>
            Structure defining information of an eye pair.
            </summary>                                    
        </member>
        <member name="P:Neurotec.Biometrics.NleEyes.First">
            <summary>
            Gets or sets first eye coordinates.
            </summary>
            <value>
            First eye coordinates. 
            </value>                           
        </member>
        <member name="P:Neurotec.Biometrics.NleEyes.FirstConfidence">
            <summary>
            Gets or sets first eye coordinate confidence
            </summary>
            <value>
            Double value which represents first eye coordinates
            confidence.
            </value>                                           
        </member>
        <member name="P:Neurotec.Biometrics.NleEyes.Second">
            <summary>
            Gets or sets second eye coordinates.
            </summary>
            <value>
            Second eye coordinates.
            </value>                            
        </member>
        <member name="P:Neurotec.Biometrics.NleEyes.SecondConfidence">
            <summary>
            Gets or sets a double value which represents second eye
            coordinates confidence.
            </summary>
            <value>
            Double value which represents second eye coordinates
            confidence.
            </value>                                               
        </member>
        <member name="T:Neurotec.Biometrics.NleDetectionDetails">
            <summary>
            Structure containing face detection results.
            </summary>
        </member>
        <member name="M:Neurotec.Biometrics.NleDetectionDetails.#ctor">
            <summary>
            Initializes a new instance of NleDetectionDetails class.
            </summary>
        </member>
        <member name="M:Neurotec.Biometrics.NleDetectionDetails.Clear">
            <summary>
            Clears NleDetectionDetails object.
            </summary>                        
        </member>
        <member name="P:Neurotec.Biometrics.NleDetectionDetails.FaceAvailable">
            <summary>
            Gets or sets a boolean value determining if face was found. 
            </summary>                                                  
        </member>
        <member name="P:Neurotec.Biometrics.NleDetectionDetails.Face">
            <summary>
            Gets or sets information of the found face. 
            </summary> 
        </member>
        <member name="P:Neurotec.Biometrics.NleDetectionDetails.EyesAvailable">
            <summary>
            Gets or sets boolean value determining if eyes were found in
            the found face. 
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NleDetectionDetails.Eyes">
            <summary>
            Gets or sets information of the found eyes.
            </summary>
            <value>
            NleEyes object that contains information about eyes. 
            </value>                                             
        </member>
        <member name="P:Neurotec.Biometrics.NleDetectionDetails.Gender">
            <summary>
            Gets or sets the gender information.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NleDetectionDetails.GenderConfidence">
            <summary>
            Gets or sets the gender confidence. Value can be [0..100].
            </summary>                                                
        </member>
        <member name="P:Neurotec.Biometrics.NleDetectionDetails.Properties">
            <summary>
            Gets or sets NLProperties value.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NleDetectionDetails.GlassesConfidence">
            <summary>
            Gets or sets the glasses confidence. Value can be [0..100].
            </summary>                                                 
        </member>
        <member name="P:Neurotec.Biometrics.NleDetectionDetails.Expression">
            <summary>
            Gets or sets NLExpression value.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NleDetectionDetails.ExpressionConfidence">
            <summary>
            Gets or sets the expression confidence. Value can be [0..100].
            </summary>                                                    
        </member>
        <member name="P:Neurotec.Biometrics.NleDetectionDetails.RightEyeCenter">
            <summary>
            Gets the center of the right eye.
            </summary>
            <value>
            The center of the right eye.
            </value>
        </member>
        <member name="P:Neurotec.Biometrics.NleDetectionDetails.LeftEyeCenter">
            <summary>
            Gets the center of the left eye.
            </summary>
            <value>
            The center of the left eye.
            </value>
        </member>
        <member name="P:Neurotec.Biometrics.NleDetectionDetails.NoseTip">
            <summary>
            Gets the tip of the nose.
            </summary>
            <value>
            The tip of the nose.
            </value>
        </member>
        <member name="P:Neurotec.Biometrics.NleDetectionDetails.MouthCenter">
            <summary>
            Gets the center of the mouth.
            </summary>
            <value>
            The center of the mouth.
            </value>
        </member>
        <member name="P:Neurotec.Biometrics.NleDetectionDetails.Points">
            <summary>
            Gets or sets the feature points.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NleDetectionDetails.DarkGlassesConfidence">
            <summary>
            Gets or sets the dark glasses confidence. Value can be [0...100].
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NleDetectionDetails.BlinkConfidence">
            <summary>
            Gets or sets the blink confidence. Value can be [0...100].
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NleDetectionDetails.MouthOpenConfidence">
            <summary>
            Gets or sets the mouth open confidence. Value can be [0...100].
            </summary>
        </member>
        <member name="T:Neurotec.Biometrics.NleTemplateSize">
            <summary>Specifies NLRecord type by its size.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NleTemplateSize.Small">
            <summary>The small NLRecord size (~4KB).</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NleTemplateSize.Compact">
            <summary>The compact NLRecord size (~2.2KB, used for smartcards).</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NleTemplateSize.Medium">
            <summary>The medium NLRecord size (~20KB).</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NleTemplateSize.Large">
            <summary>The large NLRecord size (~36KB).</summary>
        </member>
        <member name="T:Neurotec.Biometrics.NleExtractionStatus">
            <summary>
            Specifies face features extraction status.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NleExtractionStatus.None">
            <summary>
            No extraction status usage.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NleExtractionStatus.TemplateCreated">
            <summary>
            Template created.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NleExtractionStatus.FaceNotDetected">
            <summary>
            Face not detected.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NleExtractionStatus.EyesNotDetected">
            <summary>
            Eyes not detected.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NleExtractionStatus.FaceTooCloseToImageBorder">
            <summary>
            Face too close to image border.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NleExtractionStatus.QualityCheckGrayscaleDensityFailed">
            <summary>
            Quality check grayscale density failed.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NleExtractionStatus.QualityCheckExposureFailed">
            <summary>
            Quality check exposure failed.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NleExtractionStatus.QualityCheckSharpnessFailed">
            <summary>
            Quality check sharpness failed.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NleExtractionStatus.LivenessCheckFailed">
            <summary>
            Liveness check failed.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NleExtractionStatus.GeneralizationFailed">
            <summary>
            Generalization failed.
            </summary>
        </member>
        <member name="T:Neurotec.Biometrics.NLExtractor">
            <summary>
            Provides functionality for extracting Neurotechnology Face
            Records (NLRecord) from face images. 
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NLExtractor.ParameterMinIod">
            <summary>
            Identifier specifying minimum distance between eyes in face.
            Faces which have smaller distance between eyes than this
            parameter, won't be returned by the face detection methods.
            </summary>                                                  
        </member>
        <member name="F:Neurotec.Biometrics.NLExtractor.ParameterMaxIod">
            <summary>
            Identifier specifying maximum distance between eyes in face.
            Faces which have greater distance between eyes than this
            parameter, won't be returned by the face detection methods.
            </summary>                                                  
        </member>
        <member name="F:Neurotec.Biometrics.NLExtractor.ParameterFaceConfidenceThreshold">
            <summary>
            Specifies the threshold which is considered when looking for
            faces in an image. For each face candidate confidence
            parameter is calculated. With higher threshold value faces
            are selected more strictly by the face detection method.
            </summary>                                                  
        </member>
        <member name="F:Neurotec.Biometrics.NLExtractor.ParameterFavorLargestFace">
            <summary>
            If set to true the largest face found in an image will be
            used for facial feature extraction instead of the one with
            the highest face confidence score. The default value is true.
            </summary>                                                   
        </member>
        <member name="F:Neurotec.Biometrics.NLExtractor.ParameterMaxRollAngleDeviation">
            <summary>
            Identifier specifying the maximum roll angle deviation from
            frontal face in degrees. The value of this parameter can be
            in range [0..180]. The default value is 15.
            </summary>                                                    
        </member>
        <member name="F:Neurotec.Biometrics.NLExtractor.ParameterMaxYawAngleDeviation">
            <summary>
            Identifier specifying the maximum yaw angle deviation from
            frontal face in degrees. The value of this parameter can be
            in range [0..180]. The default value is 15.
            </summary>                                                    
        </member>
        <member name="F:Neurotec.Biometrics.NLExtractor.ParameterDetectMoreFaces">
            <summary>
            Identifier specifying whether to use different face detection
            procedure, which has a higher recall rate.
            </summary>                                                    
        </member>
        <member name="F:Neurotec.Biometrics.NLExtractor.ParameterFaceDetectionScaleCount">
            <summary>
            <paraattr align="justify">
            Identifier specifying number of scales in one octave when
            constructing scale space for face detection. Higher values
            mean slower face detection but higher recall rate. Values are
            in range [1..16].
            </paraattr>
            </summary>                                                   
        </member>
        <member name="F:Neurotec.Biometrics.NLExtractor.ParameterFaceRollAngleBase">
            <summary>
            Parameter specifying a base angle for faces roll angle in the image to search. Available values are
            these: -180; -90; 0; 90; 180. The default value is 0. Parameter is used to set extractor base angle
            to support mobile devices with orientation sensor.
            </summary>                                                                                         
        </member>
        <member name="F:Neurotec.Biometrics.NLExtractor.ParameterDetectAllFeaturePoints">
            <summary>
            Identifier specifying whether all facial feature points should
            be detected during facial feature detection. The default value
            is false.
            </summary>                                                    
        </member>
        <member name="F:Neurotec.Biometrics.NLExtractor.ParameterDetectBaseFeaturePoints">
            <summary>
            Identifier specifying whether base facial feature points should
            be detected during facial feature detection. Currently, base facial
            feature points are: center of right eye, center of left eye, nose
            tip and center of mouth. The default value is false.
            </summary>                                                    
        </member>
        <member name="F:Neurotec.Biometrics.NLExtractor.ParameterFaceQualityThreshold">
            <summary>
            Identifier specifying the threshold which is considered when
            extracting facial features from the image. With higher
            threshold better quality of face image is required to
            successfully extract facial features. The value of this
            parameter can be in range [0..255]. The default value is 128.
            </summary>                                                   
        </member>
        <member name="F:Neurotec.Biometrics.NLExtractor.ParameterTemplateSize">
            <summary>
            Identifier specifying template size parameter. Parameter value
            can be one of the TemplateSize enumeration members.
            </summary>                                                    
        </member>
        <member name="F:Neurotec.Biometrics.NLExtractor.ParameterUseLivenessCheck">
            <summary>
            If set to true liveness check is performed while doing facial
            feature extraction from an image stream.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NLExtractor.ParameterLivenessThreshold">
            <summary>
            This threshold checks if faces are extracted from a live
            image stream. The higher the value of this parameter, the
            more strictly the stream is checked if the face in it is real
            (for example if it's not forged by showing a photo of a
            person in front a camera). The value of this parameter can be
            in range [0..100]. The default value is 50.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NLExtractor.ParameterMaxRecordsPerTemplate">
            <summary>
            Sets the maximum number of records an extraction method can
            return in one NLTemplate. The value of this parameter can be
            in range [1..16]. The default value is 4.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NLExtractor.ParameterMaxStreamDurationInFrames">
            <summary>
            <paraattr align="justify">
            Identifier specifying maximum number of frames to use for
            extraction from stream.
            </paraattr>
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NLExtractor.ParameterDetectGender">
            <summary>
            Identifier specifying whether gender should be estimated.
            </summary>
            <remarks>
            <paraattr align="justify">
            By enabling this parameter (setting to true) you can ask to estimate person's gender from the face
            during facial features template extraction. Gender estimator works more accurate on near-frontal face images.
            </paraattr>
            </remarks>                                                                                         
        </member>
        <member name="F:Neurotec.Biometrics.NLExtractor.ParameterGenderConfidenceThreshold">
            <summary>
            Identifier specifying the gender detection confidence threshold. If the confidence does not pass
            this threshold it will we reset to value 255 indicating that decision taking failed.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NLExtractor.ParameterDetectGlasses">
            <summary>
            Identifier specifying whether glasses should be detected.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NLExtractor.ParameterGlassesConfidenceThreshold">
            <summary>
            Identifier specifying the glasses detection confidence threshold. If the confidence does not pass
            this threshold it will we reset to value 255 indicating that decision taking failed.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NLExtractor.ParameterDetectDarkGlasses">
            <summary>
            Identifier specifying whether dark glasses should be detected.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NLExtractor.ParameterDarkGlassesConfidenceThreshold">
            <summary>
            Identifier specifying the dark glasses detection confidence threshold. If the confidence does not pass
            this threshold it will we reset to value 255 indicating that decision taking failed.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NLExtractor.ParameterDetectExpression">
            <summary>
            Identifier specifying whether expression should be estimated.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NLExtractor.ParameterExpressionConfidenceThreshold">
            <summary>
            Identifier specifying the expression detection confidence threshold. If the confidence does not pass
            this threshold it will we reset to value 255 indicating that decision taking failed.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NLExtractor.ParameterDetectBlink">
            <summary>
            Identifier specifying whether closed eyes should be detected.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NLExtractor.ParameterBlinkConfidenceThreshold">
            <summary>
            Identifier specifying the blink detection confidence threshold. If the confidence does not pass
            this threshold it will we reset to value 255 indicating that decision taking failed.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NLExtractor.ParameterDetectMouthOpen">
            <summary>
            Identifier specifying whether open mouth should be detected.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NLExtractor.ParameterMouthOpenConfidenceThreshold">
            <summary>
            Identifier specifying the open mouth detection confidence threshold. If the confidence does not pass
            this threshold it will we reset to value 255 indicating that decision taking failed.
            </summary>
        </member>
        <member name="M:Neurotec.Biometrics.NLExtractor.Compress(Neurotec.Biometrics.NLTemplate,Neurotec.Biometrics.NleTemplateSize)">
            <summary>
            Compresses the extracted template to a format suitable for storing the
            template.
            </summary>
            <param name="template">Face feature template to be compressed.</param>
            <param name="compressedTemplateSize">Compressed template size.</param>
            <returns>
            Compressed face feature template.
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NLExtractor.#ctor">
            <summary>
            Initializes a new instance of NLExtractor class.
            </summary>                                      
        </member>
        <member name="M:Neurotec.Biometrics.NLExtractor.DetectFaces(Neurotec.Images.NGrayscaleImage)">
            <summary>
            Method to detect all faces in a given image.
            </summary>
            <param name="image">Source image, in which to search for the
                                faces.</param>
            <returns>Returns an array of NleFace structures with information of faces found in the image. If no faces were found returns NULL.</returns> 
            <retval name="Array">\Returns an array of NleFace structures
                                 with information of faces found in the
                                 image.</retval>
            <retval name="NULL">If no faces were found returns NULL.</retval>
        </member>
        <member name="M:Neurotec.Biometrics.NLExtractor.DetectFace(Neurotec.Images.NGrayscaleImage,Neurotec.Biometrics.NleFace@)">
            <summary>
            Method to detect a face in an image, that best fits the
            requirements for the face enrollment requirements.
            </summary>
            <param name="image">Source image, in which to search for a
                                face.</param>
            <param name="face">NleFace structure with information about
                               the found face.</param>
            <returns>A boolean value indicating whether a face was found in the image.</returns>
            <retval name="True">\Returns true if face was found in the
                                image.</retval>
            <retval name="False">\Returns false if face was found in the
                                 image.</retval>                        
        </member>
        <member name="M:Neurotec.Biometrics.NLExtractor.DetectFacialFeatures(Neurotec.Images.NGrayscaleImage,Neurotec.Biometrics.NleFace)">
            <summary>
            Finds locations of facial feature points.
            </summary>
            <param name="image">Source image, in which to search for the
                                faces.</param>
            <param name="face">NleFace structure with information about
                               the face in the image.</param>
            <returns>Face detection routine results.</returns>    
        </member>
        <member name="M:Neurotec.Biometrics.NLExtractor.Extract(Neurotec.Images.NGrayscaleImage,Neurotec.Biometrics.NleDetectionDetails@,Neurotec.Biometrics.NleExtractionStatus@)">
            <summary>
            Describes the extract method of the NLExtractor, which is
            used to extract face feature templates form the images.
            </summary>
            <param name="image">Source image, from which the
                                face features should be
                                extracted.</param>
            <param name="detectionDetails">\Returns face detection
                                           routine results.</param>
            <param name="extractionStatus">One of the value.</param>
            <returns>NLTemplate object.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NLExtractor.ExtractStart(System.Int32)">
            <summary>
            Extraction from an image set initialization method.
            </summary>
            <param name="durationInFrames">Sets the number of frames on
                                           which face detection should
                                           be performed.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NLExtractor.ExtractStart">
            <summary>
            Starts extraction from an image.
            </summary> 
        </member>
        <member name="M:Neurotec.Biometrics.NLExtractor.ExtractNext(Neurotec.Images.NGrayscaleImage,Neurotec.Biometrics.NleDetectionDetails@,System.Int32@,Neurotec.Biometrics.NLTemplate@)">
            <summary>
            Describes the extract method of the NLExtractor, which is
            used to extract face feature templates from the images.
            </summary>
            <param name="image">Source image, from which the face features should be extracted.</param>
            <param name="detectionDetails">Face detection result.</param>
            <param name="baseFrameIndex">[out] Base frame index.</param>
            <param name="template">[out] NLTemplate object.</param>
            <returns>NleExtractionStatus object.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NLExtractor.ExtractNext(Neurotec.Images.NGrayscaleImage,Neurotec.Biometrics.NleDetectionDetails@)">
            <summary>
            Describes the extract method of the NLExtractor, which is
            used to extract face feature templates from the images.
            </summary>
            <param name="image">Source image, from which the
                                face features should be
                                extracted.</param>
            <param name="detectionDetails">Face detection result.</param>
            <returns>
            NleExtractionStatus object.
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NLExtractor.ExtractEnd(System.Int32@,Neurotec.Biometrics.NleExtractionStatus@)">
            <summary>
            Ends extracting face features.
            </summary>
            <param name="baseFrameIndex">Index of a frame which was
                                         used to create the template.</param>
            <param name="extractionStatus">Extraction status value.</param>
            <returns>
            NLTemplate object.
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NLExtractor.ExtractEnd(System.Int32@,Neurotec.Biometrics.NleDetectionDetails@,Neurotec.Biometrics.NleExtractionStatus@)">
            <summary>
            Ends extracting face features.
            </summary>
            <param name="baseFrameIndex">Index of a frame which was used to create the template.</param>
            <param name="detectionDetails">Face detection result.</param>
            <param name="extractionStatus">Extraction status value.</param>
            <returns>NLTemplate object.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NLExtractor.ExtractUsingDetails(Neurotec.Images.NGrayscaleImage,Neurotec.Biometrics.NleDetectionDetails,Neurotec.Biometrics.NleExtractionStatus@)">
            <summary>
            Extracts feature template from the face with given detection
            details from an image.
            </summary>
            <param name="image">Source image.</param>
            <param name="detectionDetails">Face detection results.</param>
            <param name="extractionStatus">One of the
                                           NleExtractionStatus value.</param>
            <returns>NLTemplate object.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NLExtractor.Generalize(Neurotec.Biometrics.NLTemplate[],Neurotec.Biometrics.NleExtractionStatus@,System.Int32@)">
            <summary>
            Generalizes extracted templates.
            </summary>
            <param name="templates">Array of face templates to
                                    be generalized.</param>
            <param name="extractionStatus">Generalization status.</param>
            <param name="baseTemplateIndex">Index to one of templates
                                            array member which is the
                                            main generalization
                                            template. If \-1 is returned
                                            templates were not
                                            generalized. </param>
            <returns>
            Byte array that contains generalized NLTemplate. 
            </returns>                                                   
        </member>
        <member name="P:Neurotec.Biometrics.NLExtractor.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NLExtractor.NleTemplateSizeNativeType">
            <summary>
            Defines the native type of the face extractor template size.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NLExtractor.NleExtractionStatusNativeType">
            <summary>
            Defines the native type of the face extractor extraction status.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NLExtractor.MinIod">
            <summary>
            Sets or gets minimum distance between eyes in face. Faces
            which have smaller distance between eyes than this parameter,
            won't be returned by the face detection methods. Must be in
            range [10..16384].
            </summary>
            Note
            <paraattr align="justify">
            If MinIod and/or MaxIod will be set very similar to the real
            distance between the eyes, it could cause to not so accurate
            results (of face detection).
            
            When the face is set MinIod and MaxIod the face could be
            found up to ~1.5 times bigger/smaller value it is set.
            </paraattr>                                                  
        </member>
        <member name="P:Neurotec.Biometrics.NLExtractor.MaxIod">
            <summary>
            Gets or sets maximum distance between eyes in face. Faces
            which have greater distance between eyes than this parameter,
            won't be returned by the face detection routines. Must be in
            range [10..16384].
            </summary>
            <value>
            Integer value which represents maximum Iod.
            </value>
            Note
            <paraattr align="justify">
            If MinIod and/or MaxIod will be set very similar to the real
            distance between the eyes, it could cause to not so accurate
            results (of face detection).
            
            When the face is set MinIod and MaxIod the face could be
            found up to ~1.5 times bigger/smaller value it is set.
            </paraattr>                                                  
        </member>
        <member name="P:Neurotec.Biometrics.NLExtractor.FaceConfidenceThreshold">
            <summary>
            Gets or sets the threshold which is considered when looking
            for faces in an image. For each face candidate confidence
            parameter is calculated. With higher threshold value faces
            are selected more strictly by the face detection method. Must
            be in range [0..100].
            </summary>
            <value>
            Double value which represents face confidence threshold
            value.
            </value>                                                     
        </member>
        <member name="P:Neurotec.Biometrics.NLExtractor.FavorLargestFace">
            <summary>
            Gets or sets a value indicating if the largest face will be
            used for facial features extraction.
            </summary>
            <value>
            Boolean value indicating if the largest face should be used
            for facial features extraction. If set to true the largest
            face found in an image will be used for facial feature
            extraction instead of the one with the highest
            ParameterFaceConfidenceThreshold score.
            </value>                                                   
        </member>
        <member name="P:Neurotec.Biometrics.NLExtractor.MaxRollAngleDeviation">
            <summary>
            Gets or sets maximum roll angle deviation from frontal face 
            in degrees which is considered when looking for faces in an image.
            Must be in range [0..180].
            </summary>
            <value>
            Short value which represents maximum face roll angle deviation
            value.
            </value>     
        </member>
        <member name="P:Neurotec.Biometrics.NLExtractor.MaxYawAngleDeviation">
            <summary>
            Gets or sets maximum yaw angle deviation from frontal face 
            in degrees which is considered when looking for faces in an image.
            Must be in range [0..180].
            </summary>
            <value>
            Short value which represents maximum face yaw angle deviation
            value.
            </value>     
        </member>
        <member name="P:Neurotec.Biometrics.NLExtractor.DetectMoreFaces">
            <summary>
            Gets or sets a value indicating whether face detection with
            higher recall should be used.
            </summary>
            <value>
            Boolean value indicating whether to use face detection
            procedure, which has a higher recall rate (but also a lower 
            precision rate - more false detections).
            </value>                                                   
        </member>
        <member name="P:Neurotec.Biometrics.NLExtractor.FaceDetectionScaleCount">
            <summary>
            Gets or sets face detection scale count (identifier
            specifying number of scales in one octave when constructing
            scale space for face detection. Higher values mean slower
            face detection but higher recall rate).
            </summary>
            <value>
            Int value which represents face detection scale count (values
            are in range [1..16].
            </value>                                                     
        </member>
        <member name="P:Neurotec.Biometrics.NLExtractor.FaceRollAngleBase">
            <summary>
            Gets or sets faces base roll angle in the image to search. That's
            a base angle which together with MaxRollAngleDeviation defines
            the interval of angles considered when looking for faces in an
            image. Must be in range [-180..180].
            </summary>
            <value>
            Short value which represents face roll angle base.
            </value>     
        </member>
        <member name="P:Neurotec.Biometrics.NLExtractor.DetectAllFeaturePoints">
            <summary>
            Gets or sets a value indicating whether all facial feature
            points should be detected.
            </summary>
            <value>
            Boolean value indicating whether all facial feature points
            should be detected. If the value is false, only centers of
            eyes or base facial features are detected, otherwise all
            supported facial feature points are detected.
            </value>                                                   
        </member>
        <member name="P:Neurotec.Biometrics.NLExtractor.DetectBaseFeaturePoints">
            <summary>
            Gets or sets a value indicating whether base facial feature
            points should be detected.
            </summary>
            <value>
            Boolean value indicating whether all facial feature points
            should be detected. If the value is true, center of right eye,
            center of left eye, nose tip and center of mouth are detected.
            </value>                                                   
        </member>
        <member name="P:Neurotec.Biometrics.NLExtractor.FaceQualityThreshold">
            <summary>
            Gets or sets the threshold which is considered when
            extracting facial features from the image. With higher
            threshold better quality of face image is required to
            successfully extract facial features.
            </summary>
            <value>
            Byte value which represents face quality threshold.
            </value>                                              
        </member>
        <member name="P:Neurotec.Biometrics.NLExtractor.TemplateSize">
            <summary>Gets or sets template size.</summary>
            <value>One of the NleTemplateSize value.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NLExtractor.LivenessThreshold">
            <summary>
            Gets or sets liveness threshold which checks if faces are
            extracted from a live image stream. The higher the value of
            this parameter, the more strictly the stream is checked if
            the face in it is real (for example if it's not forged by
            showing a photo of a person in front a camera).
            </summary>
            Note
            The value can be in range [0..100]. The default value is 50.
            <value>
            Liveness threshold value.
            </value>                                                    
        </member>
        <member name="P:Neurotec.Biometrics.NLExtractor.UseLivenessCheck">
            <summary>
            Sets or gets a boolean value indicating whether to use liveness
            check.
            </summary>
            <value>
            Boolean value indicating whether to use liveness check. The
            \property value is true if liveness check is performed while
            doing facial feature extraction from an image stream.
            Otherwise, the property value is false.
            </value>                                                       
        </member>
        <member name="P:Neurotec.Biometrics.NLExtractor.MaxRecordsPerTemplate">
            <summary>
            Gets or sets the maximum number of records an extraction
            method can return in one NLTemlate.
            </summary>
            <value>
            Integer value which represents maximum number of record per
            template. The value can be in range [2..16]. The default
            value is 5.
            </value>                                                   
        </member>
        <member name="P:Neurotec.Biometrics.NLExtractor.MaxStreamDurationInFrames">
            <summary>
            Gets or sets identifier specifying maximum number of frames
            to use for extraction from stream.
            </summary>
            <value>
            Int value representing maximum stream duration in frames. 
            </value>                                                   
        </member>
        <member name="P:Neurotec.Biometrics.NLExtractor.DetectGender">
            <summary>
            Gets or sets a value indicating whether to use gender detection procedure.
            </summary>
            <value>
            Bool value indicating whether to use gender detection procedure.
            </value>                                                                  
        </member>
        <member name="P:Neurotec.Biometrics.NLExtractor.GenderConfidenceThreshold">
            <summary>
            Gets or sets a threshold for gender detection confidence.
            </summary>
            <value>
            Gender detection confidence threshold.
            </value>                            
        </member>
        <member name="P:Neurotec.Biometrics.NLExtractor.DetectGlasses">
            <summary>
            Gets or sets a value indicating whether to use glasses detection procedure.
            </summary>
            <value>
            Bool value indicating whether to use glasses detection procedure.
            </value>                                                                  
        </member>
        <member name="P:Neurotec.Biometrics.NLExtractor.GlassesConfidenceThreshold">
            <summary>
            Gets or sets a threshold for glasses detection confidence.
            </summary>
            <value>
            Glasses detection confidence threshold.
            </value>                            
        </member>
        <member name="P:Neurotec.Biometrics.NLExtractor.DetectDarkGlasses">
            <summary>
            Gets or sets a value indicating whether to use dark glasses detection procedure.
            </summary>
            <value>
            Bool value indicating whether to use dark glasses detection procedure.
            </value>                                                                  
        </member>
        <member name="P:Neurotec.Biometrics.NLExtractor.DarkGlassesConfidenceThreshold">
            <summary>
            Gets or sets a threshold for dark glasses detection confidence.
            </summary>
            <value>
            Dark glasses detection confidence threshold.
            </value>                            
        </member>
        <member name="P:Neurotec.Biometrics.NLExtractor.DetectExpression">
            <summary>
            Gets or sets a value indicating whether to use expression detection procedure.
            Currently, only smiling is detected.
            </summary>
            <value>
            Bool value indicating whether to use expression detection procedure.
            </value>                                                                  
        </member>
        <member name="P:Neurotec.Biometrics.NLExtractor.ExpressionConfidenceThreshold">
            <summary>
            Gets or sets a threshold for expression estimation confidence.
            </summary>
            <value>
            Expression estimation confidence threshold.
            </value>                            
        </member>
        <member name="P:Neurotec.Biometrics.NLExtractor.DetectBlink">
            <summary>
            Gets or sets a value indicating whether to use blink detection procedure.
            Detected blink indicates closed eyes.
            </summary>
            <value>
            Bool value indicating whether to use blink detection procedure.
            </value>                                                                  
        </member>
        <member name="P:Neurotec.Biometrics.NLExtractor.BlinkConfidenceThreshold">
            <summary>
            Gets or sets a threshold for blink detection confidence.
            </summary>
            <value>
            Blink detection confidence threshold.
            </value>                            
        </member>
        <member name="P:Neurotec.Biometrics.NLExtractor.DetectMouthOpen">
            <summary>
            Gets or sets a value indicating whether to use open mouth detection procedure.
            </summary>
            <value>
            Bool value indicating whether to use open mouth detection procedure.
            </value>                                                                  
        </member>
        <member name="P:Neurotec.Biometrics.NLExtractor.MouthOpenConfidenceThreshold">
            <summary>
            Gets or sets a threshold for open mouth detection confidence.
            </summary>
            <value>
            Open mouth detection confidence threshold.
            </value>                            
        </member>
        <member name="T:Neurotec.Biometrics.NLMatchingDetails">
            <summary>
            Provides functionality to retrieve face templates matching
            details.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NLMatchingDetails.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="T:Neurotec.Biometrics.NLRecord">
            <summary>
            Provides functionality for packing, unpacking and editing
            Neurotechnology Face Records (NLRecords). 
            </summary>                                               
        </member>
        <member name="M:Neurotec.Biometrics.NLRecord.Check(System.Byte[])">
            <summary>
            Checks if format of packed NLRecord is correct.
            </summary>
            <param name="buffer">The packed NLRecord object.</param>
            <summary>Checks if format of packed NLRecord is correct.</summary>
        </member>
        <member name="M:Neurotec.Biometrics.NLRecord.Check(Neurotec.IO.NBuffer)">
            <summary>
            Checks if format of packed NLRecord is correct.
            </summary>
            <param name="buffer">The packed NLRecord object.</param>
            <summary>Checks if format of packed NLRecord is correct.</summary>
        </member>
        <member name="M:Neurotec.Biometrics.NLRecord.GetSize(System.Byte[])">
            <summary>
            Gets the size of packed NLRecord.
            </summary>
            <param name="buffer">The packed NLRecord.</param>
            <returns>Size of NLRecord.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NLRecord.GetSize(Neurotec.IO.NBuffer)">
            <summary>
            Gets the size of packed NLRecord.
            </summary>
            <param name="buffer">The packed NLRecord.</param>
            <returns>Size of NLRecord.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NLRecord.GetQuality(System.Byte[])">
            <summary>Retrieves face quality from packed NLRecord.</summary>
            <param name="buffer">The byte array of packed NLRecord.</param>
            <returns>The value of face quality.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NLRecord.GetQuality(Neurotec.IO.NBuffer)">
            <summary>Retrieves face quality from packed NLRecord.</summary>
            <param name="buffer">NBuffer of packed NLRecord.</param>
            <returns>The value of face quality.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NLRecord.#ctor">
            <summary>Initializes a new instance of the NLRecord class.</summary>
        </member>
        <member name="M:Neurotec.Biometrics.NLRecord.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the NLRecord class.
            </summary>
            <param name="flags">Bitwise combination of zero or more flags that controls behavior of the
                                constructor. Exclusive\-OR is performed when few flags needed.</param>
            <remarks>
            The following flags are supported:
              * FlagSkipBlockedOrients
              * FlagSkipGs
              * FlagSkipQualities
            
            </remarks>                                                                                 
        </member>
        <member name="M:Neurotec.Biometrics.NLRecord.#ctor(System.Byte[])">
            <summary>Initializes a new instance of the NLRecord class.</summary>
            <param name="buffer">The packed NLRecord object.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NLRecord.#ctor(Neurotec.IO.NBuffer)">
            <summary>
            Initializes a new instance of the NLRecord class.
            </summary>
            <param name="buffer">The packed NLRecord object.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NLRecord.#ctor(Neurotec.IO.NBuffer,System.UInt32)">
            <summary>
            Initializes a new instance of the NLRecord class.
            </summary>
            <param name="buffer">The packed NLRecord object.</param>
            <param name="flags">Must be zero.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NLRecord.#ctor(Neurotec.IO.NBuffer,System.UInt32,System.Int32@)">
            <summary>
            Initializes a new instance of the NLRecord class.
            </summary>
            <param name="buffer">The packed NLRecord object.</param>
            <param name="flags">Must be zero.</param>
            <param name="size">[out] NLRecord size.</param>
        </member>
        <member name="P:Neurotec.Biometrics.NLRecord.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NLRecord.Quality">
            <summary>Gets or sets face quality.</summary>
            <value>Face quality.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NLRecord.CbeffProductType">
            <summary>Gets or sets the Cbeff product type of the NLRecord.</summary>
            <value>The Cbeff product type.</value>
        </member>
        <member name="T:Neurotec.Biometrics.NLTemplate">
            <summary>
            Provides functionality for packing, unpacking and editing
            Neurotechnology Faces Templates (NLTemplates).
            </summary>                                               
        </member>
        <member name="F:Neurotec.Biometrics.NLTemplate.MaxRecordCount">
            <summary>The maximum number of face records NLTemplate can contain.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NLTemplate.FlagProcessFirstRecordOnly">
            <summary>The flag indicating whether only the first face record should be unpacked or packed while unpacking or packing NLTemplate.</summary>
        </member>
        <member name="M:Neurotec.Biometrics.NLTemplate.CalculateSize(System.Int32[])">
            <summary>Calculates NLTemplate size.</summary>
            <param name="recordSizes">An array that contains NLRecords sizes.</param>
            <returns>A size of records.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NLTemplate.Check(System.Byte[])">
            <summary>Checks if format of packed NLTemplate format is correct.</summary>
            <param name="buffer">A byte array with packed NLTemplate.</param>
            <returns>true if NLTemplate format is correct, false otherwise.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NLTemplate.Check(Neurotec.IO.NBuffer)">
            <summary>
            Checks if format of packed NLTemplate format is correct.
            </summary>
            <param name="buffer">NBuffer with packed NLTemplate.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NLTemplate.GetSize(System.Byte[])">
            <summary>
            Gets the size of packed NLTemplate.
            </summary>
            <param name="buffer">The packed NLTemplate.</param>
            <returns>NLTemplate size.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NLTemplate.GetSize(Neurotec.IO.NBuffer)">
            <summary>
            Gets the size of packed NLTemplate.
            </summary>
            <param name="buffer">The packed NLTemplate.</param>
            <returns>NLTemplate size.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NLTemplate.GetRecordCount(System.Byte[])">
            <summary>Retrieves records count.</summary>
            <param name="buffer">A byte array with NLTemplate.</param>
            <returns>Records count.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NLTemplate.GetRecordCount(Neurotec.IO.NBuffer)">
            <summary>
            Retrieves records count.
            </summary>
            <param name="buffer">NBuffer with NLTemplate.</param>
            <returns>Records count.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NLTemplate.#ctor">
            <summary>Initializes a new instance of the NLTemplate class.</summary>
        </member>
        <member name="M:Neurotec.Biometrics.NLTemplate.#ctor(System.UInt32)">
            <unfinished />
            
            <summary>
            Initializes a new instance of the NLTemplate class.
            </summary>
            <param name="flags">Bitwise combination of zero or more
                                flags that controls behavior of the
                                constructor.</param>               
        </member>
        <member name="M:Neurotec.Biometrics.NLTemplate.#ctor(System.Byte[])">
            <summary>Initializes a new instance of the NLTemplate class.</summary>
            <param name="buffer">A byte array with packed NLTemplate objects.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NLTemplate.#ctor(Neurotec.IO.NBuffer)">
            <summary>
            Initializes a new instance of the NLTemplate class.
            </summary>
            <param name="buffer">NBuffer with packed NLTemplate objects.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NLTemplate.#ctor(Neurotec.IO.NBuffer,System.UInt32)">
            <summary>
            Initializes a new instance of the NLTemplate class.
            </summary>
            <param name="buffer">NBuffer with packed NLTemplate objects.</param>
            <param name="flags">Reserved for future use. Must be zero.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NLTemplate.#ctor(Neurotec.IO.NBuffer,System.UInt32,System.Int32@)">
            <summary>
            Initializes a new instance of the NLTemplate class.
            </summary>
            <param name="buffer">NBuffer with packed NLTemplate objects.</param>
            <param name="flags">Reserved for future use. Must be zero.</param>
            <param name="size">[out] NLTemplate size.</param>
        </member>
        <member name="P:Neurotec.Biometrics.NLTemplate.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NLTemplate.Records">
            <summary>
            Gets Records collection.
            </summary>
            <value>
            A RecordCollection collection. 
            </value>                       
        </member>
        <member name="T:Neurotec.Biometrics.NLTemplate.RecordCollection">
            <summary>
            Collection of NLRecords. 
            </summary>               
        </member>
        <member name="M:Neurotec.Biometrics.NLTemplate.RecordCollection.Add">
            <summary>
            Adds an object to the end of the RecordCollection.
            </summary>
            <returns>
            The added to the collection NLRecord object.
            </returns>                                        
        </member>
        <member name="M:Neurotec.Biometrics.NLTemplate.RecordCollection.Add(System.UInt32)">
            <summary>
            Adds an object to the end of the RecordCollection.
            </summary>
            <param name="flags">Bitwise combination of zero or more
                                flags that controls behavior of the
                                method. This parameter is reserved, must
                                be zero.</param>
            <returns>
            The added to the collection NLRecord object. 
            </returns>                                                  
        </member>
        <member name="M:Neurotec.Biometrics.NLTemplate.RecordCollection.Add(System.Byte[])">
            <summary>
            Adds an object to the end of the RecordCollection.
            </summary>
            <param name="buffer">The packed NLRecord object.</param>
            <returns>
            The added to the collection NLRecord object. 
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NLTemplate.RecordCollection.Add(Neurotec.IO.NBuffer)">
            <summary>
            Adds an object to the end of the RecordCollection.
            </summary>
            <param name="buffer">The packed NLRecord object.</param>
            <returns>The added to the collection NLRecord object.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NLTemplate.RecordCollection.Add(Neurotec.IO.NBuffer,System.UInt32)">
            <summary>
            Adds an object to the end of the RecordCollection.
            </summary>
            <param name="buffer">The packed NLRecord object.</param>
            <param name="flags">Reserved for future use. Must be zero.</param>
            <returns>The added to the collection NLRecord object.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NLTemplate.RecordCollection.Add(Neurotec.IO.NBuffer,System.UInt32,System.Int32@)">
            <summary>
            Adds an object to the end of the RecordCollection.
            </summary>
            <param name="buffer">The packed NLRecord object.</param>
            <param name="flags">Reserved for future use. Must be zero.</param>
            <param name="size">NLRecord size.</param>
            <returns>The added to the collection NLRecord object.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NLTemplate.RecordCollection.AddCopy(Neurotec.Biometrics.NLRecord)">
            <summary>
            Copies NLRecord object to the RecordCollection.
            </summary>
            <param name="srcRecord">The NLRecord object.</param>
            <returns>
            The copied to the collection NLRecord object.
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NLTemplate.RecordCollection.AddCopy(Neurotec.Biometrics.NLRecord,System.UInt32)">
            <summary>
            Copies NLRecord object to the RecordCollection.
            </summary>
            <param name="srcRecord">The NLRecord object.</param>
            <param name="flags">Reserved for future use. Must be zero.</param>
            <returns>The copied to the collection NLRecord object.</returns>
        </member>
        <member name="T:Neurotec.Biometrics.NMatchingSpeed">
            <summary>
            Specifies biometric templates matching speed.
            </summary>
            <remarks>
            <paraattr align="justify">
            Slow matcher has low speed and medium speed matching options.
            Fast matcher has low, medium and high speed options.
            </paraattr>
            </remarks>                                                   
        </member>
        <member name="F:Neurotec.Biometrics.NMatchingSpeed.Low">
            <summary>Low matching speed (slower but more accurate).</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NMatchingSpeed.Medium">
            <summary>Medium matching speed. </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NMatchingSpeed.High">
            <summary>High matching speed (faster but less accurate).</summary>
        </member>
        <member name="T:Neurotec.Biometrics.NMFusionType">
            <summary>
            Specifies the fingerprints, palmprints, faces and irises
            matching fusion.
            </summary>                                              
        </member>
        <member name="F:Neurotec.Biometrics.NMFusionType.FuseAlways">
            <summary>
            Always matches fingerprints, palmprints, faces and irises.
            The results of are fused.
            </summary>                                                
        </member>
        <member name="F:Neurotec.Biometrics.NMFusionType.SelectByFaceThenFuse">
            <summary>
            Matches faces. If the result is greater than
            ParameterFacesMatchingThresholdNew, then matches
            fingerprints, palms and irises also and fuses results;
            otherwise, score is zero.
            </summary>                                            
        </member>
        <member name="F:Neurotec.Biometrics.NMFusionType.SelectByIrisThenFuse">
            <summary>
            Matches irises. If the result is greater than
            ParameterIrisesMatchingThreshold, then matches fingerprints,
            palms and faces also and fuses results; otherwise, score is
            zero.
            </summary>                                                  
        </member>
        <member name="T:Neurotec.Biometrics.NMatcher">
            <summary>
            Provides functionality for comparing all Neurotechnology Templates (NTemplates, NFTemplates, NFRecords,
            NLTemplates, NLRecords, NETemplates, NERecords), encapsulated in Neurotechnology Matcher (NMatcher) object.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.ParameterFingersMatcherBase">
            Helper parameter for internal usage.
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.ParameterFacesMatcherBase">
            Helper parameter for internal usage.
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.ParameterIrisesMatcherBase">
            Helper parameter for internal usage.
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.ParameterPalmsMatcherBase">
            Helper parameter for internal usage.
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.ParameterVoicesMatcherBase">
            Helper parameter for internal usage.
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.PartNone">
            <summary>
            Identifier specifying that retrieving or setting parameter
            for NMatcher. See GetParameter, SetParameter,
            GetStaticParameter
            </summary>                                                
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.PartFingers">
            <summary>
            Identifier specifying that retrieving or setting parameter
            for fingers matcher (NfsMatcher) contained in NMatcher. See
            GetParameter, SetParameter, GetStaticParameter
            </summary>                                                 
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.PartFaces">
            <summary>
            Identifier specifying that retrieving or setting parameter
            for faces matcher (NlsMatcher) contained in NMatcher. See
            GetParameter, SetParameter, GetStaticParameter
            </summary>                                                
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.PartIrises">
            <summary>
            Identifier specifying that retrieving or setting parameter
            for irises matcher (NesMatcher) contained in NMatcher. See
            GetParameter, SetParameter, GetStaticParameter
            </summary>                                                
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.PartPalms">
            <summary>
            Identifier specifying that retrieving or setting parameter
            for palms matcher (NfsMatcher) contained in NMatcher. See
            GetParameter, SetParameter, GetStaticParameter 
            </summary>                                                
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.ParameterMatchingThreshold">
            <summary>
            Identifier specifying matching threshold (biggest allowed
            FAR) parameter of type int. Parameter value is equal to - 12
            \* log10(FAR) and must be not less than zero (for example, 48
            for FAR = 0.01%).
            </summary>                                                   
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.ParameterFusionType">
            <summary>
            Identifier specifying fingerprints and faces fusion of type
            int. Parameter value can be one of the NMFusionType
            enumeration members.
            </summary>                                                 
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.ParameterFacesMatchingThreshold">
            <summary>
            Matters only if ParameterFusionType is
            SelectByFaceThenFuse(NMFusionType) set.
            </summary>                             
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.ParameterFacesMatchingThresholdNew">
            <summary>
            Matters only if ParameterFusionType is
            SelectByFaceThenFuse(NMFusionType) set.
            </summary>                             
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.ParameterIrisesMatchingThreshold">
            <summary>
            Matters only if ParameterFusionType is
            SelectByIrisThenFuse(NMFusionType) set.
            </summary>                             
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.ParameterFingersMaximalRotation">
            <summary>
            Identifier specifying modulus of maximal rotation allowed
            between two matched NFRecords parameter of type N_TYPE_BYTE.
            Parameter value is specified in 180/128 degrees units and
            cannot be greater than 128 (180 degrees).
            </summary>                                                  
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.ParameterFingersMatchingSpeed">
            <summary>
            Specifies finger templates matching speed. Can be Low, Medium
            or High matching speed.
            </summary>                                                   
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.ParameterFingersFillFullMatchingDetails">
            <summary>
            Specifies whether full matching details are filled during
            the fingers matching.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.ParameterFingersMode">
            Parameter specifying fingers mode (parameter value set).
            Parameter value can be one of the FingersModeXXX.       
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.ParameterFingersMinMatchedCount">
            <summary>
            <paraattr align="justify">
            Identifier specifying minimal number of fingerprints from
            probe template to match parameter of type int. Parameter
            value is from zero to NFTemplate.MaxRecordCount.
            </paraattr>
            
            </summary>                                               
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.ParameterFingersMinMatchedCountThreshold">
            <summary>
            <paraattr align="justify">
            Identifier specifying matching threshold (biggest allowed
            FAR) when matching is stopped (with respect to
            Neurotec.Biometrics.NMatcher.ParameterFingersMinMatchedCount
            parameter value) parameter of type N_TYPE_INT. Parameter
            value is equal to -12 * log10(FAR) and must be not less than
            zero (for example, 48 for FAR = 0.01%).
            </paraattr>
            
            </summary>                                                  
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.ParameterFacesMatchingSpeed">
            <summary>
            Specifies face templates matching speed. Can be Low or High
            matching speed.
            </summary>
            Note
            High matching speed is equal to Medium.                    
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.ParameterIrisesMatchingSpeed">
            <summary>
            Specifies iris templates matching speed. Can be Low, Medium
            or High matching speed.
            </summary>
            Note
            High speed is equal to Medium.                             
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.ParameterIrisesMaximalRotation">
            <summary>
            Defines the maximal rotation allowed between two matched
            irises. It is specified in 180/128 degrees units and cannot
            be greater than 128 (180 degrees).
            </summary>                                                 
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.ParameterIrisesMinMatchedCount">
            <summary>
            <paraattr align="justify">
            Identifier specifying minimal number of irises from probe
            template to match parameter of type N_TYPE_INT. Parameter
            value is from zero to NET_MAX_RECORD_COUNT.
            </paraattr>
            </summary>                                               
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.ParameterIrisesMinMatchedCountThreshold">
            <paraattr align="justify">
            Parameter specifying matching threshold (biggest allowed FAR)
            when matching is stopped (with respect to
            Neurotec.Biometrics.NMatcher.ParameterIrisesMinMatchedCount
            parameter value). Parameter value is equal to -12 *
            log10(FAR) and must be not less than zero (for example, 48
            for FAR = 0.01%).
            </paraattr>                                                  
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.ParameterPalmsMaximalRotation">
            <summary>
            <paraattr align="justify">
            Identifier specifying modulus of maximal rotation allowed
            between two matched NFRecords parameter of type N_TYPE_BYTE.
            Parameter value is specified in 180/128 degrees units and
            cannot be greater than 128 (180 degrees).
            </paraattr>
            </summary>                                                  
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.ParameterPalmsMatchingSpeed">
            <summary>
            Specifies palm templates matching speed. Can be Low, Medium
            or High matching speed.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.ParameterPalmsFillFullMatchingDetails">
            <summary>
            Specifies whether full matching details are filled during
            the palms matching.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.ParameterPalmsMinMatchedCount">
            <summary>
            <paraattr align="justify">
            Identifier specifying minimal number of palmprints from probe
            template to match parameter of type N_TYPE_INT. Parameter
            value is from zero to NFT_MAX_RECORD_COUNT.
            </paraattr>
            </summary>                                                   
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.ParameterPalmsMinMatchedCountThreshold">
            <summary>
            <paraattr align="justify">
            Identifier specifying matching threshold (biggest allowed
            FAR) when matching is stopped (with respect to
            Neurotec.Biometrics.NMatcher.ParameterPalmsMinMatchedCount
            parameter value) parameter of type N_TYPE_INT. Parameter
            value is equal to -12 * log10(FAR) and must be not less than
            zero (for example, 48 for FAR = 0.01%).
            </paraattr>
            
            </summary>                                                  
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.ParameterVoicesUniquePhrasesOnly">
            <summary>
            Identifier specifying whether each user in the system always
            uses only his own phrases which are unique throughout the whole
            database of users.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.FingersModeGeneral">
            <summary>
            Represents general scanner.
            </summary>                 
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.FingersModeDigitalPersonaUareU">
            <summary>
            Represents Digital Persona U are U scanner.
            </summary>                                 
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.FingersModeBiometrikaFX2000">
            <summary>
            Represents Biometrika FX2000 scanner.
            </summary>                           
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.FingersModeBiometrikaFX3000">
            <summary>
            Represents Biometrika FX3000 scanner.
            </summary>                           
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.FingersModeKeytronicSecureDesktop">
            <summary>
            Represents Keytronic Secure Desktop scanner. 
            </summary>                                   
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.FingersModeIdentixTouchView">
            <summary>
            Represents Identix TouchView scanner.
            </summary>                           
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.FingersModeIdentixDfr2090">
            <summary>
            Represents Identix Dfr2090 scanner.
            </summary>                         
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.FingersModePreciseBiometrics100CS">
            <summary>
            Represents Precise Biometrics 100CS scanner. 
            </summary>                                   
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.FingersModeUpekTouchChip">
            <summary>
            Represents Upek Touch Chip scanner. 
            </summary>                          
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.FingersModeIdenticatorTechnologyDF90">
            <summary>
            Represents Identicator Technology DF90 scanner.
            </summary>                                     
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.FingersModeAuthentecAFS2">
            <summary>
            Represents Authentec AFS2 scanner.
            </summary>                        
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.FingersModeAuthentecAes4000">
            <summary>
            Represents Authentec Aes 4000 scanner.
            </summary>                            
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.FingersModeAuthentecAes2501B">
            <summary>
            Represents Authentec Aes 2501B scanner.
            </summary>                             
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.FingersModeAtmelFingerChip">
            <summary>
            Represents Atmel Finger Chip scanner.
            </summary>                           
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.FingersModeBmfBlp100">
            <summary>
            Represents Bmf Blp 100 scanner.
            </summary>                     
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.FingersModeSecugenHamster">
            <summary>
            Represents Secugen Hamster scanner. 
            </summary>                          
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.FingersModeEthentica">
            <summary>
            Represents Ethentica scanner.
            </summary>                   
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.FingersModeCrossMatchVerifier300">
            <summary>
            Represents Cross Match Verifier 300 scanner.
            </summary>                                  
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.FingersModeNitgenFingkeyHamster">
            <summary>
            Represents Nitgen Fingkey Hamster scanner. 
            </summary>                                 
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.FingersModeTestechBioI">
            <summary>
            Represents Testech Bio I scanner. 
            </summary>                        
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.FingersModeDigentIzzix">
            <summary>
            Represents Digent Izzix scanner.
            </summary>                      
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.FingersModeStartekFM200">
            <summary>
            Represents Startek FM200 scanner.
            </summary>                       
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.FingersModeFujitsuMbf200">
            <summary>
            Represents Fujitsu Mbf200 scanner.
            </summary>                        
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.FingersModeFutronicFS80">
            <summary>
            Represents Futronic FS80 scanner.
            </summary>                       
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.FingersModeLighTuningLttC500">
            <summary>
            Represents Light Tuning LttC500 scanner. 
            </summary>                               
        </member>
        <member name="F:Neurotec.Biometrics.NMatcher.FingersModeTacomaCmos">
            <summary>
            Represents Tacoma Cmos scanner. 
            </summary>                      
        </member>
        <member name="M:Neurotec.Biometrics.NMatcher.#ctor">
            <summary>
            Initializes a new instance of the NMatcher class.
            </summary>                                       
        </member>
        <member name="M:Neurotec.Biometrics.NMatcher.Verify(System.Byte[],System.Byte[])">
            <summary>
            Compares two NTemplate.
            </summary>
            <param name="template1">The byte array that contains packed NTemplate.</param>
            <param name="template2">The byte array that contains packed NTemplate.</param>
            <returns>
            Verification score.
            </returns>
            <remarks>
            Method returns zero if similarity is less than matching threshold, i.e. two NTemplates do not match
            (see ParameterMatchingThreshold and SetParameter method), and is greater than or equal to matching
            threshold otherwise. 
            </remarks>                                                                                         
        </member>
        <member name="M:Neurotec.Biometrics.NMatcher.Verify(Neurotec.IO.NBuffer,Neurotec.IO.NBuffer)">
            <summary>
            Compares two packed templates.
            </summary>
            <param name="template1">Buffer containing first packed template.</param>
            <param name="template2">Buffer containing second packed template.</param>
            <returns>
            Verification score.
            </returns>
            <remarks>
            Method returns zero if similarity is less than matching threshold, i.e. two templates do not match
            (see ParameterMatchingThreshold and SetParameter method), and is greater than or equal to matching
            threshold otherwise. 
            </remarks>                                                                                        
        </member>
        <member name="M:Neurotec.Biometrics.NMatcher.Verify(System.Byte[],System.Byte[],Neurotec.Biometrics.NMatchingDetails@)">
            <summary>
            Compares two NTemplate.
            </summary>
            <param name="template1">The byte array that contains packed NTemplate.</param>
            <param name="template2">The byte array that contains packed NTemplate.</param>
            <param name="matchingDetails">Detailed matching info.</param>
            <returns>
            Verification score.
            </returns>
            <remarks>
            Method returns zero if similarity is less than matching threshold, i.e. two NTemplates do not match
            (see ParameterMatchingThreshold and SetParameter method), and is greater than or equal to matching
            threshold otherwise. 
            </remarks>                                                                                         
        </member>
        <member name="M:Neurotec.Biometrics.NMatcher.Verify(Neurotec.IO.NBuffer,Neurotec.IO.NBuffer,Neurotec.Biometrics.NMatchingDetails@)">
            <summary>
            Compares two packed templates.
            </summary>
            <param name="template1">Buffer containing first packed template.</param>
            <param name="template2">Buffer containing second packed template.</param>
            <param name="matchingDetails">Detailed matching info.</param>
            <returns>
            Verification score.
            </returns>
            <remarks>
            Method returns zero if similarity is less than matching threshold, i.e. two templates do not match
            (see ParameterMatchingThreshold and SetParameter method), and is greater than or equal to matching
            threshold otherwise. 
            </remarks>                                                                                        
        </member>
        <member name="M:Neurotec.Biometrics.NMatcher.Verify(System.Byte[],System.Byte[],Neurotec.Biometrics.NMMatchDetails@)">
            <summary>
            Compares two NTemplate.
            </summary>
            <param name="template1">The byte array that contains packed NTemplate.</param>
            <param name="template2">The byte array that contains packed NTemplate.</param>
            <param name="matchDetails">The NMMatchDetails object.</param>
            <returns>
            Verification score.
            </returns>
            <remarks>
            Method returns zero if similarity is less than matching threshold, i.e. two NTemplates do not match
            (see ParameterMatchingThreshold and SetParameter method), and is greater than or equal to matching
            threshold otherwise. 
            </remarks>                                                                                         
        </member>
        <member name="M:Neurotec.Biometrics.NMatcher.IdentifyStart(System.Byte[])">
            <summary>
            Starts identification with the specified packed NTemplate.
            </summary>
            <param name="template">The byte array with packed NFTemplate.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NMatcher.IdentifyStart(Neurotec.IO.NBuffer)">
            <summary>
            Starts identification with the specified packed NTemplate.
            </summary>
            <param name="template">Buffer that contains packed NTemplate.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NMatcher.IdentifyStart(System.Byte[],Neurotec.Biometrics.NMatchingDetails@)">
            <summary>
            Starts identification with the specified packed NTemplate.
            </summary>
            <param name="template">The byte array with packed NFTemplate.</param>
            <param name="matchingDetails">Matching details which provide details matching info.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NMatcher.IdentifyStart(Neurotec.IO.NBuffer,Neurotec.Biometrics.NMatchingDetails@)">
            <summary>
            Starts identification with the specified packed NTemplate.
            </summary>
            <param name="template">Buffer that contains packed NTemplate.</param>
            <param name="matchingDetails">Matching details which provide details matching info.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NMatcher.IdentifyStart(System.Byte[],Neurotec.Biometrics.NMMatchDetails@)">
            <summary>
            Starts identification with the specified packed NTemplate.
            </summary>
            <param name="template">The byte array with packed
                                   NFTemplate.</param>
            <param name="matchDetails">The NMMatchDetails object.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NMatcher.IdentifyNext(System.Byte[])">
            <summary>
            Compares the specified NTemplate with the one identification
            was started with.
            </summary>
            <param name="template">The byte array that contains packed
                                   NTemplate.</param>
            <returns>
            The score of matched NFTemplates.
            </returns>
            <remarks>
            Method returns zero if similarity is less than matching
            threshold, i.e. two NTemplates do not match(see
            ParameterMatchingThreshold and SetParameter method),and is
            greater than or equal to matching threshold otherwise. 
            </remarks>                                                  
        </member>
        <member name="M:Neurotec.Biometrics.NMatcher.IdentifyNext(Neurotec.IO.NBuffer)">
            <summary>
            Compares the specified NTemplate with the one identification
            was started with.
            </summary>
            <param name="template">Memory buffer that contains packed NTemplate.</param>
            <returns>
            The score of matched NTemplates.
            </returns>
            <remarks>
            Method returns zero if similarity is less than matching
            threshold, i.e. two NTemplates do not match (see
            ParameterMatchingThreshold and SetParameter method),and is
            greater than or equal to matching threshold otherwise. 
            </remarks>                                                  
        </member>
        <member name="M:Neurotec.Biometrics.NMatcher.IdentifyNext(System.Byte[],Neurotec.Biometrics.NMatchingDetails)">
            <summary>
            Compares the specified NTemplate with the one identification
            was started with.
            </summary>
            <param name="template">The byte array that contains packed
                                   NTemplate.</param>
            <param name="matchingDetails">Matching details which are filled with detailed matching info.</param>
            <returns>
            The score of matched NFTemplates.
            </returns>
            <remarks>
            Method returns zero if similarity is less than matching
            threshold, i.e. two NTemplates do not match(see
            ParameterMatchingThreshold and SetParameter method),and is
            greater than or equal to matching threshold otherwise. 
            </remarks>                                                  
        </member>
        <member name="M:Neurotec.Biometrics.NMatcher.IdentifyNext(Neurotec.IO.NBuffer,Neurotec.Biometrics.NMatchingDetails)">
            <summary>
            Compares the specified NTemplate with the one identification
            was started with.
            </summary>
            <param name="template">Memory buffer that contains packed NTemplate.</param>
            <param name="matchingDetails">Matching details which are filled with detailed matching info.</param>
            <returns>
            The score of matched NTemplates.
            </returns>
            <remarks>
            Method returns zero if similarity is less than matching
            threshold, i.e. two NTemplates do not match (see
            ParameterMatchingThreshold and SetParameter method),and is
            greater than or equal to matching threshold otherwise. 
            </remarks>                                                  
        </member>
        <member name="M:Neurotec.Biometrics.NMatcher.IdentifyNext(System.Byte[],Neurotec.Biometrics.NMMatchDetails)">
            <summary>
            Compares the specified NTemplate with the one identification
            was started with.
            </summary>
            <param name="template">The byte array that contains
                                   packed NTemplate.</param>
            <param name="matchDetails">The NMMatchDetails object.</param>
            <returns>
            The score of matched NFTemplates.
            </returns>
            <remarks>
            Method returns zero if similarity is less than matching
            threshold, i.e. two NTemplates do not match(see
            ParameterMatchingThreshold and SetParameter method),and is
            greater than or equal to matching threshold otherwise. 
            </remarks>                                                   
        </member>
        <member name="M:Neurotec.Biometrics.NMatcher.IdentifyEnd">
            <summary>
            Ends identification process.
            </summary>                  
        </member>
        <member name="M:Neurotec.Biometrics.NMatcher.PrepareTemplate(Neurotec.Biometrics.NTemplate)">
            <summary>
            Changes specified template for faster matching.
            </summary>
            <param name="template">Template to change for faster matching.</param>
            <remarks>
            <paraattr align="justify">
            This method is primarily used by cluster. It is not recommended to use it directly because template
            size can increase. When cluster is not used, this method can be used directly to prepare template for
            faster matching.
            </paraattr>
            
            </remarks>                                                                                           
        </member>
        <member name="P:Neurotec.Biometrics.NMatcher.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NMatcher.NMatchingSpeedNativeType">
            <summary>
            Defines the native type of the matching speed.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NMatcher.NMFusionTypeNativeType">
            <summary>
            Defines the native type of the fusion type.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NMatcher.MatchingThreshold">
            <summary>Gets or sets the matching threshold.</summary>
            <value>The matching speed.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NMatcher.FusionType">
            <summary>
            Gets or sets fingerprints, irises and faces fusion type.
            </summary>
            <value>
            One of the NMFusionType values. 
            </value>                                                
        </member>
        <member name="P:Neurotec.Biometrics.NMatcher.FacesMatchingThreshold">
            <summary>
            Matters only if ParameterFusionType is
            SelectByFaceThenFuse(NMFusionType) set.
            </summary>
            <value>
            The faces matching threshold.
            </value>                               
        </member>
        <member name="P:Neurotec.Biometrics.NMatcher.FacesMatchingThresholdNew">
            <summary>
            Matters only if ParameterFusionType is
            SelectByFaceThenFuse(NMFusionType) set.
            </summary>
            <value>
            The faces matching threshold.
            </value>                               
        </member>
        <member name="P:Neurotec.Biometrics.NMatcher.IrisesMatchingThreshold">
            <summary>
            Matters only if ParameterFusionType is
            SelectByIrisThenFuse(NMFusionType) set.
            </summary>
            <value>
            The faces matching threshold.
            </value>                               
        </member>
        <member name="P:Neurotec.Biometrics.NMatcher.FingersNfmMaximalRotation">
            <summary>Gets or sets maximal rotation.</summary>
            <value>The finger maximal rotation.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NMatcher.FingersMaximalRotation">
            <summary>Gets or sets maximal rotation.</summary>
            <value>The finger maximal rotation.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NMatcher.FingersNfmMatchingSpeed">
            <summary>
            Gets or sets fingers matching speed.
            </summary>
            <value>
            One of the NfmSpeed value. 
            </value>                            
        </member>
        <member name="P:Neurotec.Biometrics.NMatcher.FingersMatchingSpeed">
            <summary>
            Gets or sets fingers matching speed.
            </summary>
            <value>
            One of the NMatchingSpeed value. 
            </value>                            
        </member>
        <member name="P:Neurotec.Biometrics.NMatcher.FingersNfmMode">
            <summary>Gets or sets scanners mode.</summary>
            <value>One of the scanner types.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NMatcher.FingersMode">
            <summary>Gets or sets scanners mode.</summary>
            <value>One of the scanner types.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NMatcher.FingersMinMatchedFingerCount">
            <summary>
            Gets or sets minimal number of fingerprints from probe
            template to match parameter. The value is from zero to
            MaxRecordCount (NFTemplate). 
            </summary>                                            
        </member>
        <member name="P:Neurotec.Biometrics.NMatcher.FingersMinMatchedCount">
            <summary>
            Gets or sets minimal number of fingerprints from probe
            template to match parameter. The value is from zero to
            MaxRecordCount (NFTemplate). 
            </summary>                                            
        </member>
        <member name="P:Neurotec.Biometrics.NMatcher.FingersMinMatchedFingerCountThreshold">
            <summary>
            Gets or sets matching threshold (biggest allowed FAR) when
            matching is stopped (with respect to FingersMinMatchedFingerCount
            parameter value) parameter. Parameter value is equal to -12 *
            log10(FAR) and must be not less than zero (for example, 48
            for FAR = 0.01%). 
            </summary>                                                       
        </member>
        <member name="P:Neurotec.Biometrics.NMatcher.FingersMinMatchedCountThreshold">
            <summary>
            Gets or sets matching threshold (biggest allowed FAR) when
            matching is stopped (with respect to FingersMinMatchedFingerCount
            parameter value) parameter. Parameter value is equal to -12 *
            log10(FAR) and must be not less than zero (for example, 48
            for FAR = 0.01%). 
            </summary>                                                       
        </member>
        <member name="P:Neurotec.Biometrics.NMatcher.FacesNlmMatchingSpeed">
            <summary>
            Gets or sets faces matching speed.
            </summary>
            <value>
            One of the NlmSpeed values. 
            </value>                          
        </member>
        <member name="P:Neurotec.Biometrics.NMatcher.FacesMatchingSpeed">
            <summary>
            Gets or sets faces matching speed.
            </summary>
            <value>
            One of the NMatchingSpeed values. 
            </value>                          
        </member>
        <member name="P:Neurotec.Biometrics.NMatcher.IrisesNemMatchingSpeed">
            <summary>
            Gets or sets irises matching speed.
            </summary>
            <value>
            One of the NemSpeed values. 
            </value>                           
        </member>
        <member name="P:Neurotec.Biometrics.NMatcher.IrisesMatchingSpeed">
            <summary>
            Gets or sets irises matching speed.
            </summary>
            <value>
            One of the NMatchingSpeed values. 
            </value>                           
        </member>
        <member name="P:Neurotec.Biometrics.NMatcher.IrisesNemMaximalRotation">
            <summary>
            Gets or sets the maximal rotation allowed
            between two matched irises.
            It is specified in 180/128 degrees units and
            cannot be greater than 128 (180 degrees).
            </summary>
            <value>
            The maximal rotation allowed between two matched
            irises.
            </value>                                        
        </member>
        <member name="P:Neurotec.Biometrics.NMatcher.IrisesMaximalRotation">
            <summary>
            Gets or sets the maximal rotation allowed
            between two matched irises.
            It is specified in 180/128 degrees units and
            cannot be greater than 128 (180 degrees).
            </summary>
            <value>
            The maximal rotation allowed between two matched
            irises.
            </value>                                        
        </member>
        <member name="P:Neurotec.Biometrics.NMatcher.IrisesMinMatchedCount">
            <summary>
            Gets or sets minimal number of irises from probe
            template to match parameter. The value is from zero to
            MaxRecordCount (NFTemplate). 
            </summary>                                            
        </member>
        <member name="P:Neurotec.Biometrics.NMatcher.IrisesMinMatchedCountThreshold">
            <summary>
            Gets or sets matching threshold (biggest allowed FAR) when
            matching is stopped (with respect to IrisesMinMatchedCount
            parameter value) parameter. Parameter value is equal to -12 *
            log10(FAR) and must be not less than zero (for example, 48
            for FAR = 0.01%). 
            </summary>                                                       
        </member>
        <member name="P:Neurotec.Biometrics.NMatcher.PalmsNfmMaximalRotation">
            <summary>Gets or sets maximal rotation.</summary>
            <value>The palm maximal rotation.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NMatcher.PalmsMaximalRotation">
            <summary>Gets or sets maximal rotation.</summary>
            <value>The palm maximal rotation.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NMatcher.PalmsNfmMatchingSpeed">
            <summary>
            Gets or sets palms matching speed.
            </summary>
            <value>
            One of the NfmSpeed value. 
            </value>                            
        </member>
        <member name="P:Neurotec.Biometrics.NMatcher.PalmsMatchingSpeed">
            <summary>
            Gets or sets palms matching speed.
            </summary>
            <value>
            One of the NMatchingSpeed value. 
            </value>                            
        </member>
        <member name="P:Neurotec.Biometrics.NMatcher.PalmsMinMatchedCount">
            <summary>
            Gets or sets minimal number of palmprints from probe
            template to match parameter. The value is from zero to
            MaxRecordCount (NFTemplate). 
            </summary>                                            
        </member>
        <member name="P:Neurotec.Biometrics.NMatcher.PalmsMinMatchedCountThreshold">
            <summary>
            Gets or sets matching threshold (biggest allowed FAR) when
            matching is stopped (with respect to PalmsMinMatchedCount
            parameter value) parameter. Parameter value is equal to -12 *
            log10(FAR) and must be not less than zero (for example, 48
            for FAR = 0.01%). 
            </summary>                                                       
        </member>
        <member name="P:Neurotec.Biometrics.NMatcher.VoicesUniquePhrasesOnly">
            <summary>
            Gets or sets identifier specifying whether each user in the system always uses only his own phrases
            which are unique throughout the whole database of users.
            </summary>
            <value>
            true, if unique phrases are used; false, otherwise.
            </value>                                                                                           
        </member>
        <member name="T:Neurotec.Biometrics.NMatchingDetails">
            <summary>
            Provides functionality for retrieving Neurotechnology
            templates matching details.
            </summary>                                           
        </member>
        <member name="M:Neurotec.Biometrics.NMatchingDetails.#cctor">
            <summary>
            Creates new instance of NMatchingDetails object. 
            </summary>                                       
        </member>
        <member name="M:Neurotec.Biometrics.NMatchingDetails.#ctor(Neurotec.IO.NBuffer,System.UInt32,System.Int32@)">
            <summary>
            Creates new instance of NMatchingDetails class.
            </summary>
            <param name="buffer">Memory buffer which contains templates matching details.</param>
            <param name="flags">Bitwise combination of zero or more flags that controls behavior of the
                                constructor. Should be zero.</param>
            <param name="size">Size of actually read buffer (in bytes).</param>                        
        </member>
        <member name="M:Neurotec.Biometrics.NMatchingDetails.#ctor(Neurotec.IO.NBuffer,System.UInt32)">
            <summary>
            Creates new instance of NMatchingDetails class.
            </summary>
            <param name="buffer">Memory buffer which contains templates matching details.</param>
            <param name="flags">Bitwise combination of zero or more flags that controls behavior of the
                                constructor. Should be zero.</param>                                   
        </member>
        <member name="M:Neurotec.Biometrics.NMatchingDetails.#ctor(Neurotec.IO.NBuffer)">
            <summary>
            Creates new instance of NMatchingDetails class.
            </summary>
            <param name="buffer">Memory buffer which contains templates matching details.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NMatchingDetails.#ctor(System.Byte[])">
            <summary>
            Creates new instance of NMatchingDetails class.
            </summary>
            <param name="buffer">Byte buffer which contains templates matching details.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NMatchingDetails.#ctor(System.IO.Stream,System.UInt32)">
            <summary>
            Creates new instance of NMatchingDetails class.
            </summary>
            <param name="stream">Stream containing matching details.</param>
            <param name="flags">Bitwise combination of zero or more flags that controls behavior of the
                                constructor. Should be zero.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NMatchingDetails.#ctor(System.IO.Stream)">
            <summary>
            Creates new instance of NMatchingDetails class.
            </summary>
            <param name="stream">Stream containing matching details.</param>
        </member>
        <member name="P:Neurotec.Biometrics.NMatchingDetails.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NMatchingDetails.FingersScore">
            <summary>
            Gets similarity score of two matched finger templates (NFTemplate).
            </summary>
            <value>
            Similarity (matching) score. of two fingerprint templates.
            </value>                                                           
        </member>
        <member name="P:Neurotec.Biometrics.NMatchingDetails.Fingers">
            <summary>
            Gets collection of fingers matching details.
            </summary>
            <value>
            Fingers matching details collection (FingerCollection). 
            </value>                                                
        </member>
        <member name="P:Neurotec.Biometrics.NMatchingDetails.FacesScore">
            <summary>
            Gets similarity score of two matched face templates (NLTemplate).
            </summary>
            <value>
            Similarity (matching) score.
            </value>                                                         
        </member>
        <member name="P:Neurotec.Biometrics.NMatchingDetails.FacesMatchedIndex">
            <summary>
            Gets index of matched face in the second matched NLTemplate (or NTemplate)).
            </summary>
            <value>
            Index of matched face in the second template.
            </value>                                                                    
        </member>
        <member name="P:Neurotec.Biometrics.NMatchingDetails.Faces">
            <summary>
            Gets collection of faces matching details.
            </summary>
            <value>
            Faces matching details collection (FaceCollection).
            </value>                                           
        </member>
        <member name="P:Neurotec.Biometrics.NMatchingDetails.IrisesScore">
            <summary>
            Gets similarity score of two matched iris templates (NETemplate).
            </summary>
            <value>
            Similarity (matching) score. of two iris templates. 
            </value>                                                         
        </member>
        <member name="P:Neurotec.Biometrics.NMatchingDetails.Irises">
            <summary>
            Gets collection of irises matching details.
            </summary>
            <value>
            Irises matching details collection (IrisCollection). 
            </value>                                             
        </member>
        <member name="P:Neurotec.Biometrics.NMatchingDetails.PalmsScore">
            <summary>
            Gets similarity score of two matched palm templates (NFTemplate).
            </summary>
            <value>
            Similarity (matching) score. of two palm templates. 
            </value>                                                         
        </member>
        <member name="P:Neurotec.Biometrics.NMatchingDetails.Palms">
            <summary>
            Gets collection of palms matching details.
            </summary>
            <value>
            Palmprints matching details collection (PalmCollection). 
            </value>                                                 
        </member>
        <member name="P:Neurotec.Biometrics.NMatchingDetails.VoicesScore">
            <summary>
            Gets similarity score of two matched voice templates (NSTemplate).
            </summary>
            <value>
            Similarity (matching) score. of two voice templates. 
            </value>                                                          
        </member>
        <member name="P:Neurotec.Biometrics.NMatchingDetails.Voices">
            <summary>
            Gets collection of voices matching details.
            </summary>
            <value>
            Voices matching details collection (VoiceCollection). 
            </value>                                              
        </member>
        <member name="T:Neurotec.Biometrics.NMatchingDetails.FingerCollection">
            <summary>
            Finger templates matching details collection.
            </summary>                                   
        </member>
        <member name="T:Neurotec.Biometrics.NMatchingDetails.FaceCollection">
            <summary>
            Face templates matching details collection.
            </summary>                                 
        </member>
        <member name="T:Neurotec.Biometrics.NMatchingDetails.IrisCollection">
            <summary>
            Iris templates matching details collection.
            </summary>                                 
        </member>
        <member name="T:Neurotec.Biometrics.NMatchingDetails.PalmCollection">
            <summary>
            Palm templates matching details collection.
            </summary>                                 
        </member>
        <member name="T:Neurotec.Biometrics.NMatchingDetails.VoiceCollection">
            <summary>
            Voice templates matching details collection.
            </summary>                                  
        </member>
        <member name="T:Neurotec.Biometrics.NSAttributes">
            <summary>
            Provides methods to retrieve sound template attributes.
            </summary>                                             
        </member>
        <member name="M:Neurotec.Biometrics.NSAttributes.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of NSAttributes class.
            </summary>
            <param name="phraseId">Phrase ID.</param>
        </member>
        <member name="P:Neurotec.Biometrics.NSAttributes.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NSAttributes.PhraseId">
            <summary>
            Gets sound phrase Id.
            </summary>
            <value>
            Sound phrase Id.
            </value>             
        </member>
        <member name="T:Neurotec.Biometrics.NseExtractionStatus">
            <summary>
            Enumerates extraction status options.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NseExtractionStatus.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NseExtractionStatus.TemplateCreated">
            <summary>
            Template created.
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NseExtractionStatus.TooFewFeatures">
            <summary>
            Too few features.
            </summary>
        </member>
        <member name="T:Neurotec.Biometrics.NSExtractor">
            <summary>
            Provides methods for sound features extraction into
            Neurotechnology Sound Record (NSRecord). 
            </summary>
        </member>
        <member name="F:Neurotec.Biometrics.NSExtractor.ParameterMinPhraseDuration">
            Parameter controlling the minimum duration of extracted phrase.
        </member>
        <member name="F:Neurotec.Biometrics.NSExtractor.ParameterMaxPhraseDuration">
            Parameter controlling the maximum duration of extracted phrase.
        </member>
        <member name="F:Neurotec.Biometrics.NSExtractor.ParameterMaxPauseDuration">
            Parameter controlling the duration of pause used to detect
            end of voice activity.
        </member>
        <member name="F:Neurotec.Biometrics.NSExtractor.ParameterUseSpeakerDetection">
            Parameter controlling whether voice activity is detected automatically.
        </member>
        <member name="F:Neurotec.Biometrics.NSExtractor.ParameterExtractTextDependentFeatures">
            Parameter controlling whether text-dependent features are extracted.
        </member>
        <member name="F:Neurotec.Biometrics.NSExtractor.ParameterExtractTextIndependentFeatures">
            Parameter controlling whether text-independent features are extracted.
        </member>
        <member name="M:Neurotec.Biometrics.NSExtractor.#ctor">
            <summary>
            Initializes a new instance of NSExtractor.
            </summary>                                
        </member>
        <member name="M:Neurotec.Biometrics.NSExtractor.ExtractStart(System.Int32)">
            <summary>
            Initializes sound features extraction routines that use sound
            stream to extract features.
            </summary>
            <param name="phraseId">Sound prase Id which will be used for
                                   extracted features. Phrase Id should
                                   be specified by user and should be
                                   &gt;=0.</param>                       
        </member>
        <member name="M:Neurotec.Biometrics.NSExtractor.ExtractNext(Neurotec.Sound.NSoundBuffer,System.Boolean@)">
            <summary>
            Extracts one sound feature from sound stream.
            </summary>
            <param name="voiceDetected">Is set to true, when speaker starts to speak, false - otherwise.</param>
            <param name="soundBuffer">NSoundBuffer used to extract sound
                                      (voice) features.</param>
            <returns>
            Sound record attributes.
            </returns>
            <remarks>
            This method can be called only after calling ExtractStart
            method. 
            </remarks>                                                  
        </member>
        <member name="M:Neurotec.Biometrics.NSExtractor.ExtractNext(Neurotec.Sound.NSoundBuffer)">
            <summary>
            Extracts one sound feature from sound stream.
            </summary>
            <param name="soundBuffer">NSoundBuffer used to extract sound
                                      (voice) features.</param>
            <returns>
            Sound record attributes.
            </returns>
            <remarks>
            This method can be called only after calling ExtractStart
            method. 
            </remarks>                                                  
        </member>
        <member name="M:Neurotec.Biometrics.NSExtractor.ExtractEnd(System.TimeSpan@,System.TimeSpan@,Neurotec.Sound.NSoundBuffer@,Neurotec.Biometrics.NseExtractionStatus@)">
            <summary>
            Ends extracting sound (voice) features from sound stream.
            </summary>
            <param name="voiceStart">TimeSpan from the beginning of the given NSoundBuffer when speaker started to speak.</param>
            <param name="voiceDuration">Duration of detected speaker voice starting from voiceStart.</param>
            <param name="voice">NSoundBuffer containing speaker voice cropped from audio stream.</param>
            <param name="status">[out] Sound extraction status.</param>
            <returns>
            Extracted sound record. 
            </returns>                                                         
        </member>
        <member name="M:Neurotec.Biometrics.NSExtractor.ExtractEnd(System.TimeSpan@,System.TimeSpan@,Neurotec.Biometrics.NseExtractionStatus@)">
            <summary>
            Ends extracting sound (voice) features from sound stream.
            </summary>
            <param name="voiceStart">TimeSpan from the beginning of the given NSoundBuffer when speaker started to speak.</param>
            <param name="voiceDuration">Duration of detected speaker voice starting from voiceStart.</param>
            <param name="status">[out] Sound extraction status.</param>
            <returns>Extracted sound record.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NSExtractor.ExtractEnd(Neurotec.Biometrics.NseExtractionStatus@)">
            <summary>
            Ends extracting sound (voice) features from sound stream.
            </summary>
            <param name="status">[out] Sound extraction status.</param>
            <returns>
            Extracted sound record. 
            </returns>                                                         
        </member>
        <member name="M:Neurotec.Biometrics.NSExtractor.Extract(System.Int32,Neurotec.Sound.NSoundBuffer,System.TimeSpan@,System.TimeSpan@,Neurotec.Biometrics.NseExtractionStatus@)">
            <summary>
            Extracts sound attributes from specified sound buffer and
            creates NSRecord using the specified NSExtractor.
            </summary>
            <param name="phraseId">User specified phrase Id. </param>
            <param name="soundBuffer">NSoundBuffer used to extract sound
                                      (voice) attributes and record. </param>
            <param name="voiceStart">TimeSpan from the beginning of the given NSoundBuffer when speaker started to speak.</param>
            <param name="voiceDuration">Duration of detected speaker voice starting from voiceStart.</param>
            <param name="status">[out] Sound extraction status.</param>
            <returns>
            Extracted sound record.
            </returns>                                                        
        </member>
        <member name="M:Neurotec.Biometrics.NSExtractor.Extract(System.Int32,Neurotec.Sound.NSoundBuffer,Neurotec.Biometrics.NseExtractionStatus@)">
            <summary>
            Extracts sound attributes from specified sound buffer and
            creates NSRecord using the specified NSExtractor.
            </summary>
            <param name="phraseId">User specified phrase Id. </param>
            <param name="soundBuffer">NSoundBuffer used to extract sound
                                      (voice) attributes and record. </param>
            <param name="status">[out] Sound extraction status.</param>
            <returns>
            Extracted sound record.
            </returns>                                                        
        </member>
        <member name="P:Neurotec.Biometrics.NSExtractor.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NSExtractor.NseExtractionStatusNativeType">
            <summary>
            Defines the native type of the sound extractor extraction status.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NSExtractor.MinPhraseDurationRaw">
            <summary>Controls minimum duration of extracted phrase.</summary>
            <value>Phrase duration in milliseconds.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NSExtractor.MaxPhraseDurationRaw">
            <summary>Controls maximum duration of extracted phrase.</summary>
            <value>Phrase duration in milliseconds.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NSExtractor.MaxPauseDurationRaw">
            <summary>Controls duration of pause used to detect end of voice activity.</summary>
            <value>Pause duration in milliseconds.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NSExtractor.UseSpeakerDetection">
            <summary>Shows whether voice activity is detected automatically.</summary>
            <value>Controls voice activity detection.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NSExtractor.ExtractTextDependentFeatures">
            <summary>Shows whether text-dependent features are extracted.</summary>
            <value>Controls text-dependent features extraction.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NSExtractor.ExtractTextIndependentFeatures">
            <summary>Shows whether text-independent features are extracted.</summary>
            <value>Controls text-independent features extraction.</value>
        </member>
        <member name="T:Neurotec.Biometrics.NSMatchingDetails">
            <summary>
            Provides functionality to retrieve speaker matching
            details.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NSMatchingDetails.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="T:Neurotec.Biometrics.NSRecord">
            <summary>
            Provides functionality for packing, unpacking and editing
            Neurotechnology Speaker Records (NSRecords). 
            </summary>
        </member>
        <member name="M:Neurotec.Biometrics.NSRecord.Check(System.Byte[])">
            <summary>Checks if format of packed NSRecord is correct.</summary>
            <param name="buffer">The packed NSRecord object.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NSRecord.Check(Neurotec.IO.NBuffer)">
            <summary>
            Checks if format of packed NSRecord is correct.
            </summary>
            <param name="buffer">The packed NSRecord object.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NSRecord.GetSize(System.Byte[])">
            <summary>
            Gets the size of packed NSRecord.
            </summary>
            <param name="buffer">The packed NSRecord object.</param>
            <returns>The size of NSRecord.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NSRecord.GetSize(Neurotec.IO.NBuffer)">
            <summary>
            Gets the size of packed NSRecord.
            </summary>
            <param name="buffer">The packed NSRecord object.</param>
            <returns>The size of NSRecord.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NSRecord.GetPhraseId(System.Byte[])">
            <summary>
            Gets phrase Id saved in NSRecord.
            </summary>
            <param name="buffer">The packed NSRecord object.</param>
            <returns>Phrase Id.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NSRecord.GetPhraseId(Neurotec.IO.NBuffer)">
            <summary>
            Gets phrase Id saved in NSRecord.
            </summary>
            <param name="buffer">The packed NSRecord object.</param>
            <returns>
            Phrase Id.
            </returns>                                              
        </member>
        <member name="M:Neurotec.Biometrics.NSRecord.GetCbeffProductType(System.Byte[])">
            <summary>
            Retrieves the Cbeff product type of the NSRecord.
            </summary>
            <param name="buffer">The packed NSRecord object.</param>
            <returns>Cbeff product type value.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NSRecord.GetCbeffProductType(Neurotec.IO.NBuffer)">
            <summary>
            Retrieves the Cbeff product type of the NSRecord.
            </summary>
            <param name="buffer">The packed NSRecord object.</param>
            <returns>
            Cbeff product type value. 
            </returns>                                              
        </member>
        <member name="M:Neurotec.Biometrics.NSRecord.GetQuality(System.Byte[])">
            <summary>
            Gets quality saved in NSRecord.
            </summary>
            <param name="buffer">The packed NSRecord object.</param>
            <returns>Quality.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NSRecord.GetQuality(Neurotec.IO.NBuffer)">
            <summary>
            Gets quality saved in NSRecord.
            </summary>
            <param name="buffer">The packed NSRecord object.</param>
            <returns>
            Quality.
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NSRecord.GetSnr(System.Byte[])">
            <summary>
            Gets signal-to-noise ratio saved in NSRecord.
            </summary>
            <param name="buffer">The packed NSRecord object.</param>
            <returns>Signal-to-noise ratio.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NSRecord.GetSnr(Neurotec.IO.NBuffer)">
            <summary>
            Gets signal-to-noise ratio saved in NSRecord.
            </summary>
            <param name="buffer">The packed NSRecord object.</param>
            <returns>
            Signal-to-noise ratio.
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NSRecord.#ctor">
            <summary>Initializes a new instance of the NSRecord class.</summary>
        </member>
        <member name="M:Neurotec.Biometrics.NSRecord.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the NSRecord class.
            </summary>
            <param name="flags">Flags controlling object creation.
                                Reserved for future use and must be 0.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NSRecord.#ctor(System.Byte[])">
            <summary>Initializes a new instance of the NSRecord class.</summary>
            <param name="buffer">The packed NSRecord object.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NSRecord.#ctor(Neurotec.IO.NBuffer)">
            <summary>
            Initializes a new instance of the NSRecord class.
            </summary>
            <param name="buffer">The packed NSRecord object.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NSRecord.#ctor(Neurotec.IO.NBuffer,System.UInt32)">
             <summary>
             Initializes a new instance of the NSRecord class.
             </summary>
             <param name="buffer">The packed NSRecord object.</param>
             <param name="flags">Flags controlling object creation.
            .					Reserved for future use and must be 0.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NSRecord.#ctor(Neurotec.IO.NBuffer,System.UInt32,System.Int32@)">
             <summary>
             Initializes a new instance of the NSRecord class.
             </summary>
             <param name="buffer">The packed NSRecord object.</param>
             <param name="flags">Flags controlling object creation.
            .					Reserved for future use and must be 0.</param>
             <param name="size"></param>
        </member>
        <member name="P:Neurotec.Biometrics.NSRecord.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NSRecord.PhraseId">
            <summary>Gets or sets phrase id.</summary>
            <value>Phrase id.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NSRecord.CbeffProductType">
            <summary>Gets or sets the Cbeff product type of the NSRecord.</summary>
            <value>The Cbeff product type.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NSRecord.Quality">
            <summary>Gets or sets quality.</summary>
            <value>Quality.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NSRecord.Snr">
            <summary>Gets or sets signal-to-noise ratio.</summary>
            <value>Signal-to-noise ratio.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NSRecord.HasTextDependentFeatures">
            <summary>Gets or sets the presence of text-dependent features in the NSRecord.</summary>
            <value>Presence of text-dependent features.</value>
            <remarks>Value can not be changed to true.</remarks>
        </member>
        <member name="P:Neurotec.Biometrics.NSRecord.HasTextIndependentFeatures">
            <summary>Gets or sets the presence of text-independent features in the NSRecord.</summary>
            <value>Presence of text-independent features.</value>
            <remarks>Value can not be changed to true.</remarks>
        </member>
        <member name="T:Neurotec.Biometrics.NSTemplate">
            <summary>
            Provides functionality for packing, unpacking and editing
            Neurotechnology Speaker Templates (NSTemplates).
            </summary>                                               
        </member>
        <member name="F:Neurotec.Biometrics.NSTemplate.MaxRecordCount">
            <summary>The maximum number of records NSTemplate can contain.</summary>
        </member>
        <member name="F:Neurotec.Biometrics.NSTemplate.FlagProcessFirstRecordOnly">
            <summary>The flag indicating whether only the first record should be unpacked or packed while unpacking or packing NSTemplate.</summary>
        </member>
        <member name="M:Neurotec.Biometrics.NSTemplate.CalculateSize(System.Int32[])">
            <summary>Calculates NSTemplate size.</summary>
            <param name="recordSizes">An array that contains NSRecords sizes.</param>
            <returns>A size of records.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NSTemplate.Check(System.Byte[])">
            <summary>Checks if format of packed NSTemplate format is correct.</summary>
            <param name="buffer">A byte array with packed NSTemplate.</param>
            <returns>true if NSTemplate format is correct, false otherwise.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NSTemplate.Check(Neurotec.IO.NBuffer)">
            <summary>
            Checks if format of packed NSTemplate format is correct.
            </summary>
            <param name="buffer">NBuffer with packed NSTemplate.</param>
            <returns>
            true if NSTemplate format is correct, false otherwise.
            </returns>                                                  
        </member>
        <member name="M:Neurotec.Biometrics.NSTemplate.GetSize(System.Byte[])">
            <summary>
            Gets the size of packed NSTemplate.
            </summary>
            <param name="buffer">Packed NSTemplate.</param>
            <returns>NSTemplate size.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NSTemplate.GetSize(Neurotec.IO.NBuffer)">
            <summary>
            Gets the size of packed NSTemplate.
            </summary>
            <param name="buffer">Packed NSTemplate.</param>
            <returns>NSTemplate size.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NSTemplate.GetRecordCount(System.Byte[])">
            <summary>Retrieves records count.</summary>
            <param name="buffer">A byte array with NSTemplate.</param>
            <returns>Records count.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NSTemplate.GetRecordCount(Neurotec.IO.NBuffer)">
            <summary>
            Retrieves records count.
            </summary>
            <param name="buffer">NBuffer with NSTemplate.</param>
            <returns>
            Records count.
            </returns>                                           
        </member>
        <member name="M:Neurotec.Biometrics.NSTemplate.#ctor">
            <summary>Initializes a new instance of the NSTemplate class.</summary>
        </member>
        <member name="M:Neurotec.Biometrics.NSTemplate.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the NSTemplate class.
            </summary>
            <param name="flags">Bitwise combination of zero or more
                                flags that controls behavior of the
                                constructor.</param>               
        </member>
        <member name="M:Neurotec.Biometrics.NSTemplate.#ctor(System.Byte[])">
            <summary>Initializes a new instance of the NSTemplate class.</summary>
            <param name="buffer">A byte array with packed NSTemplate objects.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NSTemplate.#ctor(Neurotec.IO.NBuffer)">
            <summary>
            Initializes a new instance of the NSTemplate class.
            </summary>
            <param name="buffer">The packed NSTemplate object.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NSTemplate.#ctor(Neurotec.IO.NBuffer,System.UInt32)">
            <summary>
            Initializes a new instance of the NSTemplate class.
            </summary>
            <param name="buffer">The packed NSTemplate object.</param>
            <param name="flags">Flags controlling object creation.
                                Reserved for future use and must be 0.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NSTemplate.#ctor(Neurotec.IO.NBuffer,System.UInt32,System.Int32@)">
            <summary>
            Initializes a new instance of the NSTemplate class.
            </summary>
            <param name="buffer">The packed NSTemplate object.</param>
            <param name="flags">Flags controlling object creation. Reserved for future use and must be 0.</param>
            <param name="size">[out] NSTemplate size.</param>
        </member>
        <member name="P:Neurotec.Biometrics.NSTemplate.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NSTemplate.Records">
            <summary>
            Gets Records collection.
            </summary>
            <value>
            A RecordCollection collection. 
            </value>                       
        </member>
        <member name="T:Neurotec.Biometrics.NSTemplate.RecordCollection">
            <summary>
            Collection of NSRecords. 
            </summary>               
        </member>
        <member name="M:Neurotec.Biometrics.NSTemplate.RecordCollection.Add">
            <summary>
            Adds an object to the end of the RecordCollection.
            </summary>
            <returns>
            The added to the collection NSRecord object.
            </returns>                                        
        </member>
        <member name="M:Neurotec.Biometrics.NSTemplate.RecordCollection.Add(System.UInt32)">
            <summary>
            Adds an object to the end of the RecordCollection.
            </summary>
            <param name="flags">Bitwise combination of zero or more
                                flags that controls behavior of the
                                method. This parameter is reserved, must
                                be zero.</param>
            <returns>
            The added to the collection NSRecord object. 
            </returns>                                                  
        </member>
        <member name="M:Neurotec.Biometrics.NSTemplate.RecordCollection.Add(System.Byte[])">
            <summary>
            Adds an object to the end of the RecordCollection.
            </summary>
            <param name="buffer">The packed NSRecord object.</param>
            <returns>
            The added to the collection NSRecord object. 
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NSTemplate.RecordCollection.Add(Neurotec.IO.NBuffer)">
            <summary>
            Adds an object to the end of the RecordCollection.
            </summary>
            <param name="buffer">The packed NSRecord object.</param>
            <returns>The added to the collection NSRecord object.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NSTemplate.RecordCollection.Add(Neurotec.IO.NBuffer,System.UInt32)">
            <summary>
            Adds an object to the end of the RecordCollection.
            </summary>
            <param name="buffer">The packed NSRecord object.</param>
            <param name="flags">Reserved for future use. Must be zero.</param>
            <returns>The added to the collection NSRecord object.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NSTemplate.RecordCollection.Add(Neurotec.IO.NBuffer,System.UInt32,System.Int32@)">
            <summary>
            Adds an object to the end of the RecordCollection.
            </summary>
            <param name="buffer">The packed NSRecord object.</param>
            <param name="flags">Reserved for future use. Must be zero.</param>
            <param name="size">[out] NSRecord size.</param>
            <returns>The added to the collection NSRecord object.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NSTemplate.RecordCollection.AddCopy(Neurotec.Biometrics.NSRecord)">
            <summary>
            Copies NSRecord object to the RecordCollection.
            </summary>
            <param name="srcRecord">The NSRecord object.</param>
            <returns>
            The copied to the collection NSRecord object.
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NSTemplate.RecordCollection.AddCopy(Neurotec.Biometrics.NSRecord,System.UInt32)">
            <summary>
            Copies NSRecord object to the RecordCollection.
            </summary>
            <param name="srcRecord">The NSRecord object.</param>
            <param name="flags">Reserved for future use. Must be zero.</param>
            <returns>The copied to the collection NSRecord object.</returns>
        </member>
        <member name="T:Neurotec.Biometrics.NTemplate">
            <summary>
            Provides functionality for packing, unpacking and editing
            Neurotechnology Templates (NTemplates). 
            </summary>                                               
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.CalculateSize(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Calculates the size of a packed NTemplate containing fingers,
            faces. irises and palms templates of the specified size.
            </summary>
            <param name="fingersTemplateSize">Size of packed NFTemplate.</param>
            <param name="facesTemplateSize">Size of packed NLTemplate.</param>
            <param name="irisesTemplateSize">Size of packed NETemplate.</param>
            <param name="palmsTemplateSize">Size of packed NFTemplate.</param>
            <param name="voicesTemplateSize">Size of packed NSTemplate.</param>
            
            <returns>
            The value of NTemplate size. 
            </returns>                                                          
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.Check(System.Byte[])">
            <summary>
            Checks if format of packed NTemplate format is correct.
            </summary>
            <param name="buffer">Memory buffer that contains packed
                                 NTemplate.</param>
            <returns>
            True if NTemplate format is correct; false otherwise. 
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.Check(Neurotec.IO.NBuffer)">
            <summary>
            Checks if format of packed NTemplate format is correct.
            </summary>
            <param name="buffer">NBuffer that contains packed
                                 NTemplate.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.GetSize(System.Byte[])">
            <summary>
            Gets the size of packed NTemplate.
            </summary>
            <param name="buffer">Packed NTemplate.</param>
            <returns>Size of NTemplate.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.GetSize(Neurotec.IO.NBuffer)">
            <summary>
            Gets the size of packed NTemplate.
            </summary>
            <param name="buffer">Packed NTemplate.</param>
            <returns>Size of NTemplate.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.#ctor">
            <summary>Initializes a new instance of the NTemplate class.</summary>
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the NTemplate class.
            </summary>
            <param name="flags">Bitwise combination of zero or more
                                flags that controls behavior of the
                                constructor. This parameter is reserved,
                                must be zero.</param>                   
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.#ctor(System.Byte[])">
            <summary>Initializes a new instance of the NTemplate class from byte array.</summary>
            <param name="buffer">Byte array that contains packed NTemplate.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.#ctor(Neurotec.IO.NBuffer)">
            <summary>Initializes a new instance of the NTemplate class from byte array.</summary>
            <param name="buffer">NBuffer that contains packed NTemplate.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.#ctor(Neurotec.IO.NBuffer,System.UInt32)">
            <summary>Initializes a new instance of the NTemplate class from byte array.</summary>
            <param name="buffer">NBuffer that contains packed NTemplate.</param>
            <param name="flags">Reserved for future use. Must be zero.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.#ctor(Neurotec.IO.NBuffer,System.UInt32,System.Int32@)">
            <summary>Initializes a new instance of the NTemplate class from byte array.</summary>
            <param name="buffer">NBuffer that contains packed NTemplate.</param>
            <param name="flags">Reserved for future use. Must be zero.</param>
            <param name="size">[out] NTemplate size.</param>
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.AddFingers">
            <summary>
            Creates new NFTemplate object.
            </summary>
            <returns>
            A NFTemplate object.
            </returns>                    
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.AddFingers(System.UInt32)">
            <summary>
            Creates new NFTemplate object.
            </summary>
            <param name="flags">Bitwise combination of zero or more
                                flags that controls behavior of the
                                method. Must be zero.</param>
            <returns>
            The NFTemplate object.
            </returns>                                             
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.AddFingers(System.Byte[])">
            <summary>Creates new NFTemplate object from packed NFTemplate object.</summary>
            <param name="buffer">The packed NFTemplate object.</param>
            <returns>The NFTemplate object.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.AddFingers(Neurotec.IO.NBuffer)">
            <summary>Creates new NFTemplate object from packed NFTemplate object.</summary>
            <param name="buffer">The packed NFTemplate object.</param>
            <returns>The NFTemplate object.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.AddFingers(Neurotec.IO.NBuffer,System.UInt32)">
            <summary>Creates new NFTemplate object from packed NFTemplate object.</summary>
            <param name="buffer">The packed NFTemplate object.</param>
            <param name="flags">Reserved for future use. Must be zero.</param>
            <returns>The NFTemplate object.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.AddFingers(Neurotec.IO.NBuffer,System.UInt32,System.Int32@)">
            <summary>Creates new NFTemplate object from packed NFTemplate object.</summary>
            <param name="buffer">The packed NFTemplate object.</param>
            <param name="flags">Reserved for future use. Must be zero.</param>
            <param name="size">[out] NFTemplate size.</param>
            <returns>The NFTemplate object.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.AddFingersCopy(Neurotec.Biometrics.NFTemplate)">
            <summary>Creates one NFTemplate object from another.</summary>
            <param name="srcFingers">The NFTemplate object.</param>
            <returns>The NFTemplate object.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.AddFingersCopy(Neurotec.Biometrics.NFTemplate,System.UInt32)">
            <summary>
            Creates one NFTemplate object from another.
            </summary>
            <param name="srcFingers">The NFTemplate object.</param>
            <param name="flags">Flags controlling function.</param>
            <returns>
            The NFTemplate object. 
            </returns>                                             
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.RemoveFingers">
            <summary>Removes fingers template from the NTemplate.</summary>
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.AddFaces">
            <summary>
            Creates new NLTemplate object.
            </summary>
            <returns>
            A NLTemplate object.
            </returns>                    
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.AddFaces(System.UInt32)">
            <summary>
            Creates new NLTemplate object.
            </summary>
            <param name="flags">Bitwise combination of zero or more
                                flags that controls behavior of the
                                method. Must be zero.</param>
            <returns>
            A NLTemplate object. 
            </returns>                                             
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.AddFaces(System.Byte[])">
            <summary>
            Creates new NLTemplate object.
            </summary>
            <param name="buffer">The packed NLTemplate object.</param>
            <returns>
            A NLTemplate object.
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.AddFaces(Neurotec.IO.NBuffer)">
            <summary>
            Creates new NLTemplate object.
            </summary>
            <param name="buffer">The packed NLTemplate object.</param>
            <returns>
            A NLTemplate object.
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.AddFaces(Neurotec.IO.NBuffer,System.UInt32)">
            <summary>
            Creates new NLTemplate object.
            </summary>
            <param name="buffer">The packed NLTemplate object.</param>
            <param name="flags">Reserved for future use. Must be zero.</param>
            <returns>A NLTemplate object.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.AddFaces(Neurotec.IO.NBuffer,System.UInt32,System.Int32@)">
            <summary>
            Creates new NLTemplate object.
            </summary>
            <param name="buffer">The packed NLTemplate object.</param>
            <param name="flags">Reserved for future use. Must be zero.</param>
            <param name="size">NLTemplate size.</param>
            <returns>A NLTemplate object.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.AddFacesCopy(Neurotec.Biometrics.NLTemplate)">
            <summary>Creates one NLTemplate object from another.</summary>
            <param name="srcFaces">The packed NLTemplate object.</param>
            <returns>A NLTemplate object.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.AddFacesCopy(Neurotec.Biometrics.NLTemplate,System.UInt32)">
            <summary>
            Creates one NLTemplate object from another.
            </summary>
            <param name="srcFaces">The packed NLTemplate object.</param>
            <param name="flags">Reserved for future use. Must be zero.</param>
            <returns>A NLTemplate object.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.RemoveFaces">
            <summary>Removes faces template from the NTemplate.</summary>
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.AddIrises">
            <summary>
            Creates new NETemplate object.
            </summary>
            <returns>
            The NETemplate object. 
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.AddIrises(System.UInt32)">
            <summary>
            Creates new NETemplate object.
            </summary>
            <param name="flags">Bitwise combination of zero or more
                                flags that controls behavior of the
                                method. Must be zero.</param>
            <returns>
            The NETemplate object.
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.AddIrises(System.Byte[])">
            <summary>
            Creates new NETemplate object.
            </summary>
            <param name="buffer">The packed NETemplate object.</param>
            <returns>
            The NETemplate object. 
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.AddIrises(Neurotec.IO.NBuffer)">
            <summary>
            Creates new NETemplate object.
            </summary>
            <param name="buffer">The packed NETemplate object.</param>
            <returns>The NETemplate object.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.AddIrises(Neurotec.IO.NBuffer,System.UInt32)">
            <summary>
            Creates new NETemplate object.
            </summary>
            <param name="buffer">The packed NETemplate object.</param>
            <param name="flags">Reserved for future use. Must be zero.</param>
            <returns>The NETemplate object.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.AddIrises(Neurotec.IO.NBuffer,System.UInt32,System.Int32@)">
            <summary>
            Creates new NETemplate object.
            </summary>
            <param name="buffer">The packed NETemplate object.</param>
            <param name="flags">Reserved for future use. Must be zero.</param>
            <param name="size">[out] NETemplate size.</param>
            <returns></returns>
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.AddIrisesCopy(Neurotec.Biometrics.NETemplate)">
            <summary>
            Creates one NETemplate object from another.
            </summary>
            <param name="srcIrises">The NETemplate object.</param>
            <returns>
            The NETemplate object.
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.AddIrisesCopy(Neurotec.Biometrics.NETemplate,System.UInt32)">
            <summary>
            Creates one NETemplate object from another.
            </summary>
            <param name="srcIrises">The NETemplate object.</param>
            <param name="flags">Reserved for future use. Must be zero.</param>
            <returns>The NETemplate object.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.RemoveIrises">
            <summary>
            Removes irises template from the NTemplate.
            </summary>                                 
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.AddPalms">
            <summary>
            Creates new NFTemplate object.
            </summary>
            <returns>
            The NFTemplate object. 
            </returns>                    
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.AddPalms(System.UInt32)">
            <summary>
            Creates new NFTemplate object.
            </summary>
            <param name="flags">Bitwise combination of zero or more
                                flags that controls behavior of the
                                method. Must be zero.</param>
            <returns>
            The NFTemplate object.
            </returns>                                             
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.AddPalms(System.Byte[])">
            <summary>
            Creates new NFTemplate object.
            </summary>
            <param name="buffer">The packed NFTemplate object.</param>
            <returns>
            The NFTemplate object.
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.AddPalms(Neurotec.IO.NBuffer)">
            <summary>
            Creates new NFTemplate object.
            </summary>
            <param name="buffer">The packed NFTemplate object.</param>
            <returns>The NFTemplate object.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.AddPalms(Neurotec.IO.NBuffer,System.UInt32)">
            <summary>
            Creates new NFTemplate object.
            </summary>
            <param name="buffer">The packed NFTemplate object.</param>
            <param name="flags">Reserved for future use. Must be zero.</param>
            <returns>The NFTemplate object.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.AddPalms(Neurotec.IO.NBuffer,System.UInt32,System.Int32@)">
            <summary>
            Creates new NFTemplate object.
            </summary>
            <param name="buffer">The packed NFTemplate object.</param>
            <param name="flags">Reserved for future use. Must be zero.</param>
            <param name="size">[out] NFTemplate size.</param>
            <returns>The NFTemplate object.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.AddPalmsCopy(Neurotec.Biometrics.NFTemplate)">
            <summary>
            Creates one NFTemplate object from another.
            </summary>
            <param name="srcPalms">The NFTemplate object.</param>
            <returns>
            The NFTemplate object. 
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.AddPalmsCopy(Neurotec.Biometrics.NFTemplate,System.UInt32)">
            <summary>
            Creates one NFTemplate object from another.
            </summary>
            <param name="srcPalms">The NFTemplate object.</param>
            <param name="flags">Reserved for future use. Must be zero.</param>
            <returns>The NFTemplate object.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.RemovePalms">
            <summary>
            Removes palms template from the NTemplate.
            </summary>
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.AddVoices">
            <summary>
            Adds an empty voice record to NSTemplate object.
            </summary>
            <returns>
            A NSTemplate object. 
            </returns>
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.AddVoices(System.UInt32)">
            <summary>
            Adds an empty voice record to NSTemplate object.
            </summary>
            <param name="flags">Bitwise combination of zero or more
                                flags that controls behavior of the
                                method. Must be zero.</param>
            <returns>
            A NSTemplate object. 
            </returns>                                             
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.AddVoices(System.Byte[])">
            <summary>
            Adds voice record to NSTemplate object.
            </summary>
            <param name="buffer">The packed NSTemplate object.</param>
            <returns>
            A NSTemplate object. 
            </returns>                                                
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.AddVoices(Neurotec.IO.NBuffer)">
            <summary>
            Adds voice record to NSTemplate object.
            </summary>
            <returns>
            A NSTemplate object.
            </returns>
            <param name="buffer">NBuffer containing voice data to add to
                                 NTemplate.</param>                     
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.AddVoices(Neurotec.IO.NBuffer,System.UInt32)">
            <summary>
            Adds voice record to NSTemplate object.
            </summary>
            <returns>
            A NSTemplate object.
            </returns>
            <param name="buffer">NBuffer containing voice data to add to
                                 NTemplate.</param>
            <param name="flags">Bitwise combination of zero or more
                                flags that controls behavior of the
                                method. This parameter is reserved,
                                must be zero.</param>                   
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.AddVoices(Neurotec.IO.NBuffer,System.UInt32,System.Int32@)">
            <summary>
            Adds voice record to NSTemplate object.
            </summary>
            <param name="buffer">Packed NSTemplate.</param>
            <param name="flags">Reserved for future use. Must be zero.</param>
            <param name="size">[out] NSTemplate size.</param>
            <returns>A NSTemplate object.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.AddVoicesCopy(Neurotec.Biometrics.NSTemplate)">
            <summary>Creates one NSTemplate object from another.</summary>
            <param name="srcVoices">The packed NSTemplate object.</param>
            <returns>A NSTemplate object.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.AddVoicesCopy(Neurotec.Biometrics.NSTemplate,System.UInt32)">
            <summary>
            Creates one NSTemplate object from another.
            </summary>
            <param name="srcVoices">The packed NSTemplate object.</param>
            <param name="flags">Reserved for future use. Must be zero.</param>
            <returns>A NSTemplate object.</returns>
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.RemoveVoices">
            <summary>Removes voices template from the NTemplate.</summary>
        </member>
        <member name="M:Neurotec.Biometrics.NTemplate.Clear">
            <summary>Removes all NFRecord objects.</summary>
        </member>
        <member name="P:Neurotec.Biometrics.NTemplate.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.NTemplate.Fingers">
            <summary>Gets NFTemplate object.</summary>
            <value>A NFTemplate object.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NTemplate.Faces">
            <summary>Gets NLTemplate object.</summary>
            <value>A NLTemplate object.</value>
        </member>
        <member name="P:Neurotec.Biometrics.NTemplate.Irises">
            <summary>
            Gets NETemplate object.
            </summary>
            <value>
            A NETemplate object.
            </value>               
        </member>
        <member name="P:Neurotec.Biometrics.NTemplate.Palms">
            <summary>
            Gets NFTemplate object.
            </summary>
            <value>
            A NFTemplate object.
            </value>               
        </member>
        <member name="P:Neurotec.Biometrics.NTemplate.Voices">
            <summary>
            Gets NSTemplate object.
            </summary>
            <value>
            A NSTemplate object.
            </value>               
        </member>
        <member name="T:Neurotec.Biometrics.Tools.NtfiAttributes">
            <summary>
            Provides properties for retrieving Ntfi attributes. 
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.Tools.NtfiAttributes.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.Tools.NtfiAttributes.Sharpness">
            <summary>Gets sharpness score (a double value from range [0, 1]) of the tested token image.</summary>
            <value>Sharpness score.</value>
        </member>
        <member name="P:Neurotec.Biometrics.Tools.NtfiAttributes.BackgroundUniformity">
            <summary>
            Gets background uniformity score (a double value from range
            [0, 1]) of the tested token image.
            </summary>
            <value>
            A double value (in a range [0, 1]) of a background uniformity
            score of a token image.
            </value>
            <remarks>
            <paraattr align="justify">
            <b>Background uniformity</b> defines uniformity of a
            background. Agreeably to ISO/IEC 19794-5 standard the
            background of a picture should be monochromatic (unicolor)
            and uniform. Background uniformity score depends on these
            \parameters.
            
            You should note that background is important for computer
            based face recognition because the first step in the computer
            face recognition process is the segmentation of the face from
            background. The best practise for background and common
            problems that should be avoided is defined as the following:
            </paraattr>
              * <b>Background segmentation</b>. The boundary between the
                head and the background should be clearly identifiable about
                the entire subject.
              * <b>Background shadows</b>. There should be no shadows
                visible on the background behind the face image.
              * <b>Background uniformity</b>. The background should be
                plain, and shall contain no texture containing lines or
                curves. Therefore the background should be a uniform colour
                or a single colour pattern with gradual changes from light to
                dark luminosity in a single direction.
            The better background parameters are the better background
            uniformity score is.
            </remarks>                                                       
        </member>
        <member name="P:Neurotec.Biometrics.Tools.NtfiAttributes.GrayscaleDensity">
            <remarks>
            <b>Grayscale density</b> value is used for checking
            brightness in the facial region of an image.
            </remarks>
            <summary>
            Gets grayscale density value.
            </summary>
            <value>
            Grayscale density value.
            </value>                                           
        </member>
        <member name="T:Neurotec.Biometrics.Tools.Ntfi">
            <summary>
            Neurotechnology token face images library. Provides
            functionality to create token face images (images that store
            extracted face information from any other image source)
            described in ISO/IEC 19794-5 and to test the attributes of
            previously created token face images.
            </summary>
            <remarks>
            NTFI library is intended to provide token face images
            compatible with the Face Image Format as in ISO/IEC 19794
            standard. This face image format enables range of
            applications on variety of devices, including devices that
            have limited resources required for data storage, and
            improves recognition accuracy by specifying data format,
            scene constraints (lighting, pose), photographic properties
            (positioning, camera focus) and digital image attributes
            (image resolution, image size).
            
            The NTFI library has the following features:
              * Token face image creation from an image containing human
                face using eye coordinates which may be either hand marked or
                detected automatically using Neurotechnology VeriLook face
                detection algorithm.
              * Face is detected and eye coordinates are acquired using
                state&#45;of&#45;the&#45;art Neurotechnology VeriLook face
                detection and recognition algorithm.
              * Geometrical normalization of face image according to
                proportions and photographic properties in ISO/IEC 19794
                standard.
              * Intelligent image padding algorithm for cut of parts of
                token face image as in ISO/IEC 19794 standard.
              * Test the created token face image for following quality
                criteria suggested in ISO/IEC 19794 standard:
                * Background uniformity (The background in the token face
                  image should be uniform, not cluttered).
                * Sharpness (the token face image should not be blurred).
                * Too light or too dark images (the token face image
                  should not be too dark or too light).
                * Exposure range of an image (the token face image should
                  have a reasonable exposure range to represent as much details
                  of the subject in the image as possible).
              * Evaluate token face image quality based on suggestions of
                ISO/IEC 19794 standard (Using the quality criteria above).
            </remarks>
            Note
            Functionality of the token face image library can be accessed
            from the Neurotec.Biometrics.Ntfi.dll which is a wrapper of
            Ntfi.dll.                                                          
        </member>
        <member name="F:Neurotec.Biometrics.Tools.Ntfi.ParameterTokenFaceImageWidth">
            <summary>
            The parameter that identifies token face image width. Should
            be an integer value, recommended a multiple of 240 pixels
            (240, 480, 720 etc.)
            </summary>                                                  
        </member>
        <member name="F:Neurotec.Biometrics.Tools.Ntfi.ParameterUseLightnessNormalization">
            <summary>
            <paraattr align="justify">
            The parameter that indicates whether to use a lightness
            normalization. If set to true, a lightness normalization will
            be used.
            </paraattr>
            </summary>                                                   
        </member>
        <member name="F:Neurotec.Biometrics.Tools.Ntfi.ParameterQualityThreshold">
            <summary>
            The parameter used for setting a quality threshold. The
            double value is in range [0, 1].
            </summary>                                             
        </member>
        <member name="F:Neurotec.Biometrics.Tools.Ntfi.ParameterSharpnessThreshold">
            <summary>
            The parameter used for setting a sharpness threshold. The
            double value is in range [0, 1].
            </summary>                                               
        </member>
        <member name="F:Neurotec.Biometrics.Tools.Ntfi.ParameterBackgroundUniformityThreshold">
            <summary>
            Parameter used for setting background uniformity score (a
            double value from range [0, 1]) of the tested token image.
            </summary>                                                
        </member>
        <member name="F:Neurotec.Biometrics.Tools.Ntfi.ParameterGrayscaleDensityThreshold">
            <summary>
            The parameter that identifies number of grayscale shades in
            the image.
            </summary>                                                 
        </member>
        <member name="M:Neurotec.Biometrics.Tools.Ntfi.#ctor">
            <summary>
            Creates a new instance of the Ntfi.
            </summary>                         
        </member>
        <member name="M:Neurotec.Biometrics.Tools.Ntfi.CreateTokenFaceImage(Neurotec.Images.NImage,System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Creates token face image.
            </summary>
            <param name="image">NImage object which will be used to
                                create token face image.</param>
            <param name="firstEye">First eye position (center of person's right eye).</param>
            <param name="secondEye">Second eye position (center of person's left eye).</param>
            <returns>
            Created token face image object.
            </returns>
            <exception cref="T:System.ArgumentNullException">image has Null value.</exception>
        </member>
        <member name="M:Neurotec.Biometrics.Tools.Ntfi.TestTokenFaceImage(Neurotec.Images.NImage,Neurotec.Biometrics.Tools.NtfiAttributes@)">
            <summary>
            Tests NImage object: evaluates facial attributes (sharpness,
            background uniformity), counts grayscale levels and
            calculates the score.
            </summary>
            <param name="tokenFaceImage">NImage object which contains
                                         token face image.</param>
            <param name="ntfiAttributes">[out] NtfiAttributes object
                                         that contains facial features.</param>
            <returns>
            The score of token face image.
            </returns>                                                         
        </member>
        <member name="P:Neurotec.Biometrics.Tools.Ntfi.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Biometrics.Tools.Ntfi.TokenFaceImageWidth">
            <summary>Gets or sets token face image width.</summary>
            <value>Width of token face image.</value>
        </member>
        <member name="P:Neurotec.Biometrics.Tools.Ntfi.UseLightnessNormalization">
            <summary>Gets or sets a boolean value that indicates whether to use lightness normalization.</summary>
            <value>A boolean value that indicated whether to use lightness normalization.</value>
        </member>
        <member name="P:Neurotec.Biometrics.Tools.Ntfi.QualityThreshold">
            <summary>Gets sharpness threshold of the tested token image.</summary>
            <value>Quality threshold value.</value>
        </member>
        <member name="P:Neurotec.Biometrics.Tools.Ntfi.SharpnessThreshold">
            <summary>Gets sharpness threshold of the tested token image.</summary>
            <value>Sharpness threshold score.</value>
        </member>
        <member name="P:Neurotec.Biometrics.Tools.Ntfi.BackgroundUniformityThreshold">
            <summary>Gets background uniformity threshold of the tested token image.</summary>
            <value>A double value of a background uniformity threshold of a token image.</value>
        </member>
        <member name="P:Neurotec.Biometrics.Tools.Ntfi.GrayscaleDensityThreshold">
            <summary>Gets grayscale density threshold of the tested token image.</summary>
            <value>A double value of a grayscale density threshold of a token image.</value>
        </member>
    </members>
</doc>
