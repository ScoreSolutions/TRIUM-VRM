<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Neurotec.Media</name>
    </assembly>
    <members>
        <member name="T:Neurotec.Drawing.PointD">
            <summary>
            Represents point.
            </summary>       
        </member>
        <member name="F:Neurotec.Drawing.PointD.Empty">
            <summary>
            Represents a PointD that is a null reference.
            </summary>                                   
        </member>
        <member name="M:Neurotec.Drawing.PointD.Add(Neurotec.Drawing.PointD,System.Drawing.Size)">
            <summary>
            Increases point's coordinate values by indicated size.
            </summary>
            <param name="pt">Original point.</param>
            <param name="sz">Size to be increased by.</param>
            <returns>
            New PointD object with increased coordinates.
            </returns>                                            
        </member>
        <member name="M:Neurotec.Drawing.PointD.Subtract(Neurotec.Drawing.PointD,System.Drawing.Size)">
            <summary>
            Decreases point's coordinate values by indicated size.
            </summary>
            <param name="pt">Original point.</param>
            <param name="sz">Size to be decreased by.</param>
            <returns>
            New PointD object with decreased coordinates. 
            </returns>                                            
        </member>
        <member name="M:Neurotec.Drawing.PointD.Add(Neurotec.Drawing.PointD,System.Drawing.SizeF)">
            <summary>
            Increases point's coordinate values by indicated size.
            </summary>
            <param name="pt">Original point.</param>
            <param name="sz">SizeF to be increased by.</param>
            <returns>
            New PointD object with increased coordinates. 
            </returns>                                            
        </member>
        <member name="M:Neurotec.Drawing.PointD.Subtract(Neurotec.Drawing.PointD,System.Drawing.SizeF)">
            <summary>
            Decreases point's coordinate values by indicated size.
            </summary>
            <param name="pt">Original point.</param>
            <param name="sz">SizeF to be decreased by.</param>
            <returns>
            New PointD object with decreased coordinates. 
            </returns>                                            
        </member>
        <member name="M:Neurotec.Drawing.PointD.Add(Neurotec.Drawing.PointD,Neurotec.Drawing.SizeD)">
            <summary>
            Increases point's coordinate values by indicated size.
            </summary>
            <param name="pt">Original point.</param>
            <param name="sz">SizeD to be increased by.</param>
            <returns>
            New PointD object with increased coordinates. 
            </returns>                                            
        </member>
        <member name="M:Neurotec.Drawing.PointD.Subtract(Neurotec.Drawing.PointD,Neurotec.Drawing.SizeD)">
            <summary>
            Decreases point's coordinate values by indicated size.
            </summary>
            <param name="pt">Original point.</param>
            <param name="sz">SizeD to be decreased by.</param>
            <returns>
            New PointD object with decreased coordinates. 
            </returns>                                            
        </member>
        <member name="M:Neurotec.Drawing.PointD.op_Addition(Neurotec.Drawing.PointD,System.Drawing.Size)">
            <summary>
            Increases point's coordinate values by indicated size.
            </summary>
            <param name="pt">Original point.</param>
            <param name="sz">Size to be increased by.</param>
            <returns>
            New PointD object with increased coordinates. 
            </returns>                                            
        </member>
        <member name="M:Neurotec.Drawing.PointD.op_Subtraction(Neurotec.Drawing.PointD,System.Drawing.Size)">
            <summary>
            Decreases point's coordinate values by indicated size.
            </summary>
            <param name="pt">Original point.</param>
            <param name="sz">Size to be decreased by.</param>
            <returns>
            New PointD object with decreased coordinates. 
            </returns>                                            
        </member>
        <member name="M:Neurotec.Drawing.PointD.op_Addition(Neurotec.Drawing.PointD,System.Drawing.SizeF)">
            <summary>
            Increases point's coordinate values by indicated size.
            </summary>
            <param name="pt">Original point.</param>
            <param name="sz">SizeF to be increased by.</param>
            <returns>
            New PointD object with increased coordinates. 
            </returns>                                            
        </member>
        <member name="M:Neurotec.Drawing.PointD.op_Subtraction(Neurotec.Drawing.PointD,System.Drawing.SizeF)">
            <summary>
            Decreases point's coordinate values by indicated size.
            </summary>
            <param name="pt">Original point.</param>
            <param name="sz">SizeF to be decreased by.</param>
            <returns>
            New PointD object with decreased coordinates. 
            </returns>                                            
        </member>
        <member name="M:Neurotec.Drawing.PointD.op_Addition(Neurotec.Drawing.PointD,Neurotec.Drawing.SizeD)">
            <summary>
            Increases point's coordinate values by indicated size.
            </summary>
            <param name="pt">Original point.</param>
            <param name="sz">SizeD to be increased by.</param>
            <returns>
            New PointD object with increased coordinates. 
            </returns>                                            
        </member>
        <member name="M:Neurotec.Drawing.PointD.op_Subtraction(Neurotec.Drawing.PointD,Neurotec.Drawing.SizeD)">
            <summary>
            Decreases point's coordinate values by indicated size.
            </summary>
            <param name="pt">Original point.</param>
            <param name="sz">SizeD to be decreased by.</param>
            <returns>
            New PointD object with decreased coordinates. 
            </returns>                                            
        </member>
        <member name="M:Neurotec.Drawing.PointD.op_Equality(Neurotec.Drawing.PointD,Neurotec.Drawing.PointD)">
            <summary>
            Checks if two points are equal.
            </summary>
            <param name="left">First PointD object to compare.</param>
            <param name="right">Second PointD object to compare.</param>
            <returns>
            True if point coordinates are equal, false otherwise.
            </returns>                                                  
        </member>
        <member name="M:Neurotec.Drawing.PointD.op_Inequality(Neurotec.Drawing.PointD,Neurotec.Drawing.PointD)">
            <summary>
            Checks if two points are not equal.
            </summary>
            <param name="left">First PointD to be compared.</param>
            <param name="right">Second PointD to be compared.</param>
            <returns>
            True if points are not equal, false otherwise.
            </returns>                                               
        </member>
        <member name="M:Neurotec.Drawing.PointD.op_Explicit(Neurotec.Drawing.PointD)~System.Drawing.PointF">
            <summary>
            This conversion operator converts from a PointD type to a
            PointF type.
            </summary>
            <param name="pt">PointD to be converted.</param>         
        </member>
        <member name="M:Neurotec.Drawing.PointD.op_Implicit(System.Drawing.Point)~Neurotec.Drawing.PointD">
            <summary>
            This conversion operator converts from a Point type to a
            PointD type.
            </summary>
            <param name="pt">Point to be converted.</param>         
        </member>
        <member name="M:Neurotec.Drawing.PointD.op_Implicit(System.Drawing.PointF)~Neurotec.Drawing.PointD">
            <summary>
            This conversion operator converts from a PointF type to a
            PointD type.
            </summary>
            <param name="pt">PointF to be converted.</param>         
        </member>
        <member name="M:Neurotec.Drawing.PointD.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the PointD class.
            </summary>
            <param name="x">X coordinate of a point.</param>
            <param name="y">Y coordinate of a point.</param>
        </member>
        <member name="M:Neurotec.Drawing.PointD.Equals(System.Object)">
            <summary>
            Determines whether the specified Object is equal to the
            current Object.
            </summary>
            <param name="obj">The Object to compare with the current
                              Object.</param>
            <returns>
            True if the specified Object is equal to the current Object;
            otherwise, false.
            </returns>                                                  
        </member>
        <member name="M:Neurotec.Drawing.PointD.GetHashCode">
            <summary>
            Gets the hash code. Is intended for a hash function for a
            particular type. GetHashCode is suitable for use in hashing
            
            algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current Object.
            </returns>                                                 
        </member>
        <member name="M:Neurotec.Drawing.PointD.ToString">
            <summary>
            Retrieves string representation of the specified object.
            </summary>
            <returns>
            String representation of an object.
            </returns>                                              
        </member>
        <member name="P:Neurotec.Drawing.PointD.IsEmpty">
            <summary>
            Gets boolean value indicating whether current Object is
            empty.
            </summary>                                             
        </member>
        <member name="P:Neurotec.Drawing.PointD.X">
            <summary>
            Gets or sets X coordinate of this PointD.
            </summary>                               
        </member>
        <member name="P:Neurotec.Drawing.PointD.Y">
            <summary>
            Gets or sets Y coordinate of this PointD.
            </summary>                               
        </member>
        <member name="T:Neurotec.Drawing.SizeD">
            <summary>
            Represents size.
            </summary>      
        </member>
        <member name="F:Neurotec.Drawing.SizeD.Empty">
            <summary>
            Represents a SizeD that is a null reference. 
            </summary>                                   
        </member>
        <member name="M:Neurotec.Drawing.SizeD.Add(Neurotec.Drawing.SizeD,Neurotec.Drawing.SizeD)">
            <summary>
            Adds width and height fields of two SizeD objects and creates
            new one with results.
            </summary>
            <param name="sz1">First SizeD object.</param>
            <param name="sz2">Second SizeD object.</param>
            <returns>
            SizeD object. 
            </returns>                                                   
        </member>
        <member name="M:Neurotec.Drawing.SizeD.Subtract(Neurotec.Drawing.SizeD,Neurotec.Drawing.SizeD)">
            <summary>
            Subtracts width and height fields of two SizeD objects and
            creates new one with results.
            </summary>
            <param name="sz1">First SizeD object.</param>
            <param name="sz2">Second SizeD object.</param>
            <returns>
            SizeD object. 
            </returns>                                                
        </member>
        <member name="M:Neurotec.Drawing.SizeD.op_Addition(Neurotec.Drawing.SizeD,Neurotec.Drawing.SizeD)">
            <summary>
            Adds width and height fields of two SizeD objects and creates
            new one with results.
            </summary>
            <param name="sz1">First SizeD object.</param>
            <param name="sz2">Second SizeD object.</param>
            <returns>
            SizeD object. 
            </returns>                                                   
        </member>
        <member name="M:Neurotec.Drawing.SizeD.op_Subtraction(Neurotec.Drawing.SizeD,Neurotec.Drawing.SizeD)">
            <summary>
            Subtracts width and height fields of two SizeD objects and
            creates new one with results.
            </summary>
            <param name="sz1">First SizeD object.</param>
            <param name="sz2">Second SizeD object.</param>
            <returns>
            SizeD object. 
            </returns>                                                
        </member>
        <member name="M:Neurotec.Drawing.SizeD.op_Equality(Neurotec.Drawing.SizeD,Neurotec.Drawing.SizeD)">
            <summary>
            Checks if two SizeD objects are equal.
            </summary>
            <param name="sz1">First SizeD object.</param>
            <param name="sz2">Second SizeD object.</param>
            <returns>
            True if objects are equal, false otherwise. 
            </returns>                                    
        </member>
        <member name="M:Neurotec.Drawing.SizeD.op_Inequality(Neurotec.Drawing.SizeD,Neurotec.Drawing.SizeD)">
            <summary>
            Checks if two SizeD objects are not equal.
            </summary>
            <param name="sz1">First SizeD object.</param>
            <param name="sz2">Second SizeD object.</param>
            <returns>
            True if objects are not equal, false otherwise. 
            </returns>                                      
        </member>
        <member name="M:Neurotec.Drawing.SizeD.op_Explicit(Neurotec.Drawing.SizeD)~Neurotec.Drawing.PointD">
            <unfinished />
            
            <summary>
            \ \ 
            </summary>
            <param name="size">_nt_</param>
        </member>
        <member name="M:Neurotec.Drawing.SizeD.op_Explicit(Neurotec.Drawing.SizeD)~System.Drawing.SizeF">
            <unfinished />
            
            <summary>
            \ \ 
            </summary>
            <param name="size">_nt_</param>
        </member>
        <member name="M:Neurotec.Drawing.SizeD.op_Implicit(System.Drawing.Size)~Neurotec.Drawing.SizeD">
            <summary>
            This conversion operator converts from a Size type to a SizeD
            type.
            </summary>
            <param name="size">Size to be converted.</param>             
        </member>
        <member name="M:Neurotec.Drawing.SizeD.op_Implicit(System.Drawing.SizeF)~Neurotec.Drawing.SizeD">
            <summary>
            This conversion operator converts from a SizeF type to a
            SizeD type.
            </summary>
            <param name="size">SizeF to be converted.</param>       
        </member>
        <member name="M:Neurotec.Drawing.SizeD.#ctor(Neurotec.Drawing.SizeD)">
            <summary>
            Initializes a new instance of the SizeD class.
            </summary>
            <param name="size">SizeD object.</param>      
        </member>
        <member name="M:Neurotec.Drawing.SizeD.#ctor(Neurotec.Drawing.PointD)">
            <summary>
            Initializes a new instance of the SizeD class.
            </summary>
            <param name="pt">PointD object. Width will be set to X value
                             of this object, height \- to y.</param>    
        </member>
        <member name="M:Neurotec.Drawing.SizeD.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the SizeD class.
            </summary>
            <param name="width">Value indicating width.</param>
            <param name="height">Value indicating height.</param>
        </member>
        <member name="M:Neurotec.Drawing.SizeD.Equals(System.Object)">
            <summary>
            Determines whether the specified Object is equal to the
            current Object.
            </summary>
            <param name="obj">The Object to compare with the current
                              Object.</param>
            <returns>
            True if the specified Object is equal to the current Object;
            otherwise, false. 
            </returns>                                                  
        </member>
        <member name="M:Neurotec.Drawing.SizeD.GetHashCode">
            <summary>
            Gets the hash code. Is intended for a hash function for a
            particular type. GetHashCode is suitable for use in hashing
            
            algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current Object. 
            </returns>                                                 
        </member>
        <member name="M:Neurotec.Drawing.SizeD.ToPointD">
            <summary>
            Retrieves PointD representation of the specified object.
            </summary>
            <returns>
            PointD representation of an object. 
            </returns>                                              
        </member>
        <member name="M:Neurotec.Drawing.SizeD.ToSize">
            <summary>
            Retrieves Size representation of the specified object.
            </summary>
            <returns>
            Size representation of an object. 
            </returns>                                            
        </member>
        <member name="M:Neurotec.Drawing.SizeD.ToSizeF">
            <summary>
            Retrieves SizeF representation of the specified object.
            </summary>
            <returns>
            SizeF representation of an object. 
            </returns>                                             
        </member>
        <member name="M:Neurotec.Drawing.SizeD.ToString">
            <summary>
            Retrieves string representation of the specified object.
            </summary>
            <returns>
            String representation of an object.
            </returns>                                              
        </member>
        <member name="P:Neurotec.Drawing.SizeD.IsEmpty">
            <summary>
            Gets boolean value indicating whether current Object is
            empty. 
            </summary>                                             
        </member>
        <member name="P:Neurotec.Drawing.SizeD.Width">
            <summary>
            Gets or sets width property.
            </summary>                  
        </member>
        <member name="P:Neurotec.Drawing.SizeD.Height">
            <summary>
            Gets or sets height property.
            </summary>                   
        </member>
        <member name="T:Neurotec.Drawing.RectangleD">
            <summary>
            Represents rectangle.
            </summary>           
        </member>
        <member name="F:Neurotec.Drawing.RectangleD.Empty">
            <summary>
            Represents a RectangleD that is a null reference. 
            </summary>                                        
        </member>
        <member name="M:Neurotec.Drawing.RectangleD.FromLTRB(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the RectangleD class.
            </summary>
            <param name="left">Coordinate of the left side of the
                               rectangle.</param>
            <param name="top">Coordinate of the upper side of the
                              rectangle.</param>
            <param name="right">Coordinate of the right side of the
                                rectangle.</param>
            <param name="bottom">Coordinate of the lower side of the
                                 rectangle.</param>
            <returns>
            RectangleD object. 
            </returns>                                              
        </member>
        <member name="M:Neurotec.Drawing.RectangleD.Inflate(Neurotec.Drawing.RectangleD,System.Double,System.Double)">
            <summary>
            Expands borders of given rectangle.
            </summary>
            <param name="rect">Rectangle to be inflated.</param>
            <param name="x">Size that left and right sides of
                            rectangle will be expanded by.</param>
            <param name="y">Size that upper and lower sides of
                            rectangle will be expanded by.</param>
            <returns>
            Expanded RectangleD object.
            </returns>                                            
        </member>
        <member name="M:Neurotec.Drawing.RectangleD.Intersect(Neurotec.Drawing.RectangleD,Neurotec.Drawing.RectangleD)">
            <summary>
            Gets rectangle representing a and b rectangles intersection.
            </summary>
            <param name="a">First rectangle.</param>
            <param name="b">Second rectangle.</param>
            <returns>
            Rectangle representing intersection.
            </returns>                                                  
        </member>
        <member name="M:Neurotec.Drawing.RectangleD.Union(Neurotec.Drawing.RectangleD,Neurotec.Drawing.RectangleD)">
            <summary>
            Gets rectangle representing area of intersection between two
            rectangles.
            </summary>
            <param name="a">First rectangle.</param>
            <param name="b">Second rectangle.</param>
            <returns>
            RectangleD object.
            </returns>                                                  
        </member>
        <member name="M:Neurotec.Drawing.RectangleD.op_Equality(Neurotec.Drawing.RectangleD,Neurotec.Drawing.RectangleD)">
            <summary>
            Checks if two rectangles are equal.
            </summary>
            <param name="left">First RectangleD to be compared.</param>
            <param name="right">Second RectangleD to be compared.</param>
            <returns>
            True if rectangles are equal, false otherwise. 
            </returns>                                                   
        </member>
        <member name="M:Neurotec.Drawing.RectangleD.op_Inequality(Neurotec.Drawing.RectangleD,Neurotec.Drawing.RectangleD)">
            <summary>
            Checks if two rectangles are not equal.
            </summary>
            <param name="left">First RectangleD to be compared.</param>
            <param name="right">Second RectangleD to be compared.</param>
            <returns>
            True if rectangles are not equal, false otherwise.
            </returns>                                                   
        </member>
        <member name="M:Neurotec.Drawing.RectangleD.op_Explicit(Neurotec.Drawing.RectangleD)~System.Drawing.RectangleF">
            <summary>
            This conversion operator converts from a RectangleD type to a
            RectangleF type.
            </summary>
            <param name="r">RectangleD to be converted.</param>          
        </member>
        <member name="M:Neurotec.Drawing.RectangleD.op_Implicit(System.Drawing.Rectangle)~Neurotec.Drawing.RectangleD">
            <summary>
            This conversion operator converts from a Rectangle type to a
            RectangleD type.
            </summary>
            <param name="r">Rectangle to be converted.</param>          
        </member>
        <member name="M:Neurotec.Drawing.RectangleD.op_Implicit(System.Drawing.RectangleF)~Neurotec.Drawing.RectangleD">
            <summary>
            This conversion operator converts from a RectangleF type to a
            RectangleD type.
            </summary>
            <param name="r">RectangleF to be converted.</param>          
        </member>
        <member name="M:Neurotec.Drawing.RectangleD.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the RectangleD class.
            </summary>
            <param name="x">Specifies X corrdinate of the upper left
                            corner of the rectangle.</param>
            <param name="y">Specifies Y corrdinate of the upper left
                            corner of the rectangle.</param>
            <param name="width">Specifies rectangle's width.</param>
            <param name="height">Specifies rectangle's height.</param>
        </member>
        <member name="M:Neurotec.Drawing.RectangleD.#ctor(Neurotec.Drawing.PointD,Neurotec.Drawing.SizeD)">
            <summary>
            Initializes a new instance of the RectangleD class.
            </summary>
            <param name="location">PointD specifying upper left corner
                                   of the rectangle.</param>
            <param name="size">SizeD specifying width and height of
                               the rectangle.</param>                 
        </member>
        <member name="M:Neurotec.Drawing.RectangleD.Equals(System.Object)">
            <summary>
            Determines whether the specified Object is equal to the
            current Object.
            </summary>
            <param name="obj">The Object to compare with the current
                              Object.</param>
            <returns>
            True if the specified Object is equal to the current Object;
            otherwise, false. 
            </returns>                                                  
        </member>
        <member name="M:Neurotec.Drawing.RectangleD.Contains(System.Double,System.Double)">
            <summary>
            Checks if given coordinates are within the borders of a
            rectangle.
            </summary>
            <param name="x">X coordinate.</param>
            <param name="y">Y coordinate.</param>
            <returns>
            True if given coordinates are within the borders of a
            rectangle; false otherwise.
            </returns>                                             
        </member>
        <member name="M:Neurotec.Drawing.RectangleD.Contains(Neurotec.Drawing.PointD)">
            <summary>
            Checks if a point is within the borders of rectangle.
            </summary>
            <param name="pt">PointD object.</param>
            <returns>
            True if point is within the borders of a rectangle, false
            otherwise.
            </returns>                                               
        </member>
        <member name="M:Neurotec.Drawing.RectangleD.Contains(Neurotec.Drawing.RectangleD)">
            <summary>
            Checks if a given rectangle is within the borders of current
            rectangle.
            </summary>
            <param name="rect">RectangleD object.</param>
            <returns>
            True if rectangle is within borders, false otherwise.
            </returns>                                                  
        </member>
        <member name="M:Neurotec.Drawing.RectangleD.GetHashCode">
            <summary>
            Gets the hash code. Is intended for a hash function for a
            particular type. GetHashCode is suitable for use in hashing
            
            algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current Object. 
            </returns>                                                 
        </member>
        <member name="M:Neurotec.Drawing.RectangleD.Inflate(System.Double,System.Double)">
            <summary>
            Expands borders of rectangle - left and right sides by x,
            upper and lower sides - by y.
            </summary>
            <param name="x">Size that left and right sides will be
                            expanded by.</param>
            <param name="y">Size that upper and lower sides will be
                            expanded by.</param>                     
        </member>
        <member name="M:Neurotec.Drawing.RectangleD.Inflate(Neurotec.Drawing.SizeD)">
            <summary>
            Expands borders of rectangle.
            </summary>
            <param name="size">SizeD object representing how much the
                               rectangle should be inflated.</param> 
        </member>
        <member name="M:Neurotec.Drawing.RectangleD.Intersect(Neurotec.Drawing.RectangleD)">
            <summary>
            Sets current rectangle's properties equal to the result of
            intersection between current and given rectangles.
            </summary>
            <param name="rect">Rectangle to find intersection with.</param>
        </member>
        <member name="M:Neurotec.Drawing.RectangleD.IntersectsWith(Neurotec.Drawing.RectangleD)">
            <summary>
            Checks if current and given rectangles intersect.
            </summary>
            <param name="rect">Rectangle to check for intersection.</param>
            <returns>
            True if rectangles intersect, false otherwise. 
            </returns>                                                     
        </member>
        <member name="M:Neurotec.Drawing.RectangleD.Offset(Neurotec.Drawing.PointD)">
            <summary>
            Changes position of upper left corner of a rectangle.
            </summary>
            <param name="pos">PointD with values to change position in x
                              and y axis directions.</param>            
        </member>
        <member name="M:Neurotec.Drawing.RectangleD.Offset(System.Double,System.Double)">
            <summary>
            Changes position of upper left corner of a rectangle.
            </summary>
            <param name="x">Value to change position in x axis
                            direction.</param>
            <param name="y">Value to change position in y axis
                            direction.</param>                   
        </member>
        <member name="M:Neurotec.Drawing.RectangleD.ToString">
            <summary>
            Retrieves string representation of the specified object.
            </summary>
            <returns>
            String representation of an object. 
            </returns>                                              
        </member>
        <member name="P:Neurotec.Drawing.RectangleD.Location">
            <summary>
            Gets or sets rectangle's location (coordinates of the left
            upper corner).
            </summary>                                                
        </member>
        <member name="P:Neurotec.Drawing.RectangleD.Size">
            <summary>
            Gets or sets rectangle's size (width and height properties).
            </summary>                                                  
        </member>
        <member name="P:Neurotec.Drawing.RectangleD.X">
            <summary>
            Gets or sets X coordinate of the rectangle's upper left
            corner.
            </summary>                                             
        </member>
        <member name="P:Neurotec.Drawing.RectangleD.Y">
            <summary>
            Gets or sets Y coordinate of the rectangle's upper left
            corner.
            </summary>                                             
        </member>
        <member name="P:Neurotec.Drawing.RectangleD.Width">
            <summary>
            Gets or sets rectangle's width. 
            </summary>                      
        </member>
        <member name="P:Neurotec.Drawing.RectangleD.Height">
            <summary>
            Gets or sets rectangle's height. 
            </summary>                       
        </member>
        <member name="P:Neurotec.Drawing.RectangleD.Left">
            <summary>
            Gets rectangle's left side's coordinate.
            </summary>                              
        </member>
        <member name="P:Neurotec.Drawing.RectangleD.Top">
            <summary>
            Gets rectangle's upper side's coordinate. 
            </summary>                                
        </member>
        <member name="P:Neurotec.Drawing.RectangleD.Right">
            <summary>
            Gets rectangle's right side's coordinate.  
            </summary>                                 
        </member>
        <member name="P:Neurotec.Drawing.RectangleD.Bottom">
            <summary>
            Gets rectangle's lower side's coordinate.
            </summary>                               
        </member>
        <member name="P:Neurotec.Drawing.RectangleD.IsEmpty">
            <summary>
            Gets boolean value indicating whether rectangle is an empty
            Object. 
            </summary>                                                 
        </member>
        <member name="T:Neurotec.Geometry.NGeometry">
            <summary>
            Provides definitions of geometrical structures types.
            </summary>
        </member>
        <member name="P:Neurotec.Geometry.NGeometry.InterpolationModeNativeType">
            <summary>
            Defines the native type of the interpolation mode.
            </summary>
        </member>
        <member name="P:Neurotec.Geometry.NGeometry.PointNativeType">
            <summary>
            Defines the native type of the point.
            </summary>
        </member>
        <member name="P:Neurotec.Geometry.NGeometry.PointFNativeType">
            <summary>
            Defines the native type of the point F.
            </summary>
        </member>
        <member name="P:Neurotec.Geometry.NGeometry.PointDNativeType">
            <summary>
            Defines the native type of the point D.
            </summary>
        </member>
        <member name="P:Neurotec.Geometry.NGeometry.SizeNativeType">
            <summary>
            Defines the native type of the size.
            </summary>
        </member>
        <member name="P:Neurotec.Geometry.NGeometry.SizeFNativeType">
            <summary>
            Defines the native type of the size F.
            </summary>
        </member>
        <member name="P:Neurotec.Geometry.NGeometry.SizeDNativeType">
            <summary>
            Defines the native type of the size D.
            </summary>
        </member>
        <member name="P:Neurotec.Geometry.NGeometry.RectangleNativeType">
            <summary>
            Defines the native type of the rectanlge.
            </summary>
        </member>
        <member name="P:Neurotec.Geometry.NGeometry.RectangleFNativeType">
            <summary>
            Defines the native type of the rectangle F.
            </summary>
        </member>
        <member name="P:Neurotec.Geometry.NGeometry.RectangleDNativeType">
            <summary>
            Defines the native type of the rectangle D.
            </summary>
        </member>
        <member name="P:Neurotec.Geometry.NGeometry.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="T:Neurotec.Images.BmpInfo">
            <summary>
            Provides information about BMP format images.
            </summary>                                   
        </member>
        <member name="T:Neurotec.Images.NImageInfo">
            <summary>
            Retrieves the object information.
            </summary>                       
        </member>
        <member name="M:Neurotec.Images.NImageInfo.#ctor">
            <summary>
            Creates a new instance of NImageInfo class.
            </summary>
        </member>
        <member name="P:Neurotec.Images.NImageInfo.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Images.NImageInfo.Format">
            <summary>
            Gets or sets the image format.
            </summary>
            <value>
            The image format. 
            </value>                      
        </member>
        <member name="P:Neurotec.Images.BmpInfo.NativeType">
            <summary>
            Gets or sets a function that retrieves NType object for the enclosing type.
            </summary>
            <value>
            The function that retrieves NType object for the enclosing type.
            </value>                                                                   
        </member>
        <member name="T:Neurotec.Images.Bmp">
            <summary>
            Provides functionality for loading and saving images in BMP
            format.
            </summary>                                                 
        </member>
        <member name="M:Neurotec.Images.Bmp.LoadImage(System.String)">
            <summary>
            Creates a new instance of the NImage class from file.
            </summary>
            <param name="fileName">A string that contains the name of
                                   the file.</param>
            <returns>
            A NImage object. 
            </returns>                                               
        </member>
        <member name="M:Neurotec.Images.Bmp.LoadImage(System.IntPtr,System.Int32)">
            <summary>
            Creates NImage object from memory buffer.
            </summary>
            <param name="pBuffer">Pointer to memory buffer.</param>
            <param name="bufferSize">Size of memory buffer.</param>
            <returns>
            NImage object. 
            </returns>                                               
        </member>
        <member name="M:Neurotec.Images.Bmp.LoadImage(System.Byte[])">
            <summary>
            Creates NImage object from byte array.
            </summary>
            <param name="buffer">Byte array</param>
            <returns>
            NImage object. 
            </returns>                             
        </member>
        <member name="M:Neurotec.Images.Bmp.LoadImage(Neurotec.IO.NBuffer)">
            <summary>
            Creates NImage object from memory buffer.
            </summary>
            <param name="buffer">Memory buffer.</param>
            <returns>NImage object.</returns>
        </member>
        <member name="M:Neurotec.Images.Bmp.LoadImage(System.IO.Stream)">
            <summary>
            Creates a new instance of the NImage class from stream.
            </summary>
            <param name="stream">Memory stream.</param>
            <returns>
            A NImage object.
            </returns>                                             
        </member>
        <member name="M:Neurotec.Images.Bmp.LoadImageFromHBitmap(System.IntPtr)">
            <summary>
            Creates a new instance of the NImage class from Windows
            HBITMAP.
            </summary>
            <param name="hBitmap">Pointer to handle that specifies
                                  Windows HBITMAP.</param>
            <returns>
            A NImage object. 
            </returns>                                             
        </member>
        <member name="M:Neurotec.Images.Bmp.LoadImageFromBitmap(System.Drawing.Bitmap)">
            <summary>
            Creates a new instance of the NImage class from Bitmap.
            </summary>
            <param name="bitmap">A Bitmap class object.</param>
            <returns>
            A NImage object. 
            </returns>                                             
        </member>
        <member name="M:Neurotec.Images.Bmp.LoadImageFromBitmap(System.Drawing.Bitmap,System.Single,System.Single)">
            <summary>
            Creates a new instance of the NImage class from Bitmap with
            specified resolution.
            </summary>
            <param name="bitmap">A Bitmap class object.</param>
            <param name="horzResolution">A horizontal resolution in
                                         pixels per inch of image.</param>
            <param name="vertResolution">A vertical resolution in pixels
                                         per inch of image.</param>
            <returns>
            A NImage object. 
            </returns>                                                    
        </member>
        <member name="M:Neurotec.Images.Bmp.SaveImage(Neurotec.Images.NImage,System.String)">
            <summary>
            Saves NImage to file.
            </summary>
            <param name="image">A NImage object.</param>
            <param name="fileName">A string that contains the name of the
                                   \file.</param>                        
        </member>
        <member name="M:Neurotec.Images.Bmp.SaveImage(Neurotec.Images.NImage)">
            <summary>
            Saves NImage to NBuffer.
            </summary>
            <param name="image">A NImage object.</param>
            <returns>
            NBuffer object. 
            </returns>                                  
        </member>
        <member name="M:Neurotec.Images.Bmp.SaveImage(Neurotec.Images.NImage,System.IO.Stream)">
            <summary>
            Saves NImage to stream.
            </summary>
            <param name="image">A NImage object.</param>
            <param name="stream">The data stream used to save the image.</param>
        </member>
        <member name="M:Neurotec.Images.Bmp.SaveImageToHBitmap(Neurotec.Images.NImage)">
            <summary>
            Saves NImage to Windows HBITMAP.
            </summary>
            <param name="image">A NImage object.</param>
            <returns>
            A pointer to handle of Windows HBITMAP. 
            </returns>                                  
        </member>
        <member name="M:Neurotec.Images.Bmp.SaveImageToBitmap(Neurotec.Images.NImage)">
            <summary>
            Saves NImage to Bitmap.
            </summary>
            <param name="image">A NImage object.</param>
            <returns>
            A Bitmap object. 
            </returns>                                  
        </member>
        <member name="T:Neurotec.Images.NImageFile">
            <summary>
            Provides functionality for working with image files.
            </summary>                                          
        </member>
        <member name="M:Neurotec.Images.NImageFile.FromFile(System.String)">
            <summary>
            Creates (loads) an image from specified file.
            </summary>
            <param name="fileName">String which specified file name.</param>
            <returns>
            NImageFile object which contains loaded image.
            </returns>                                                      
        </member>
        <member name="M:Neurotec.Images.NImageFile.FromFile(System.String,Neurotec.Images.NImageFormat)">
            <summary>
            Creates (loads) an image from file with specified format.
            </summary>
            <param name="fileName">String which specified file name.</param>
            <param name="imageFormat">\File image format.</param>
            <returns>
            NImageFile object which contains loaded image. 
            </returns>                                                      
        </member>
        <member name="M:Neurotec.Images.NImageFile.Close">
            <summary>
            Closes opened image file.
            </summary>               
        </member>
        <member name="M:Neurotec.Images.NImageFile.ReadImage">
            <summary>
            Reads image file.
            </summary>
            <returns>
            A NImage object. 
            </returns>       
        </member>
        <member name="P:Neurotec.Images.NImageFile.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Images.NImageFile.Format">
            <summary>
            Gets format of image within NImage object.
            </summary>
            <value>
            Format of an image within NImage.
            </value>                                  
        </member>
        <member name="T:Neurotec.Video.NVideo">
            <summary>
            Provides video management functionality.
            </summary>
        </member>
        <member name="M:Neurotec.Video.NVideo.GetInfo">
            <summary>
            Retrieves NMedia library information.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Neurotec.Video.NVideoReader">
            <summary>
            Provides funcionality for reading video file.
            </summary>                                   
        </member>
        <member name="M:Neurotec.Video.NVideoReader.#ctor(System.String)">
            <summary>
            Initializes a new instance of NVideoReader. Sets video file
            and opens it.
            </summary>
            <param name="fileName">Path of the video file to be opened.</param>
            <exception cref="T:System.ArgumentNullException">Provided p fileName
                                                    is NULL.</exception>
            <exception cref="T:Neurotec.ParameterException">Failed to open the
                                                 \file or set it to
                                                 the NVideoReader
                                                 object.</exception>           
        </member>
        <member name="M:Neurotec.Video.NVideoReader.GetFrame(System.Int32)">
            <summary>
            Reads one frame from video file.
            </summary>
            <param name="frameIndex">Index of the frame to be read from
                                     the video file.</param>
            <returns>
            Image containing the video frame of specified index. When it
            is not needed anymore, the image must be freed using
            Dispose().
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Frame index is
                                                          larget than
                                                          the number of
                                                          frames in the
                                                          video file.</exception>
        </member>
        <member name="P:Neurotec.Video.NVideoReader.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Video.NVideoReader.FrameCount">
            <summary>
            Gets a number of frames in the video file.
            </summary>
            <value>
            The number of frames in the video file which was assigned to
            the NVideoReader object in constructor. 
            </value>                                                    
        </member>
        <member name="P:Neurotec.Video.NVideoReader.FrameWidth">
            <summary>
            Gets a width of frames in the video file.
            </summary>
            <seealso cref="P:Neurotec.Video.NVideoReader.FrameHeight"/>
            <value>
            Width of frames in the video file which was assigned to the
            NVideoReader object in constructor. 
            </value>                                                   
        </member>
        <member name="P:Neurotec.Video.NVideoReader.FrameHeight">
            <summary>
            Gets a height of frames in the video file.
            </summary>
            <seealso cref="P:Neurotec.Video.NVideoReader.FrameWidth"/>
            <value>
            The height of frames in the video file which was assigned to
            the NVideoReader object in constructor. 
            </value>                                                    
        </member>
        <member name="P:Neurotec.Video.NVideoReader.FrameRate">
            <summary>
            Gets a frame rate of the video file.
            </summary>
            <exception cref="T:System.Exception">Video file is not set.</exception>
            <value>
            A frame rate (number of frames presented in one second) of
            the video file. The video file was assigned to the
            NVideoReader object in constructor. 
            </value>                                                      
        </member>
        <member name="T:Neurotec.Video.NVideoWriter">
            <summary>
            Provides functionality for writing to a video file.
            </summary>
            <remarks>
            <paraatr align="justify">
            When using XVID encoder make sure that automatic
            optimisations are turned off. Otherwise NVideoWriter may
            crash due to a bug in XVID code.
            
            If writing video files with XVID still crashes, then turn off
            all optimisations. Optimisation settings can be located in
            Options-\>Other Options...-\>Common starting in a popup
            dialog box where you choose XVID codec.
            </paraatr>
            </remarks>                                                   
        </member>
        <member name="M:Neurotec.Video.NVideoWriter.#ctor(System.String,System.Int32,System.Int32,System.Double,Neurotec.Video.NVideoWriterOptions)">
            <summary>
            Initializes a new instance of NVideoWriter. Creates a video file.
            </summary>
            <param name="fileName">Path of the video file to be created.</param>
            <param name="width">Width of the video file frames in pixels.</param>
            <param name="height">Height of the video file frames in pixels.</param>
            <param name="frameRate">Frames per second of the resulting video.</param>
            <param name="options">Video writer options.</param>                      
        </member>
        <member name="M:Neurotec.Video.NVideoWriter.WriteFrame(Neurotec.Images.NImage)">
            <summary>
            Appends one frame to the video file.
            </summary>
            <param name="frame">frame to add to the video file.</param>
        </member>
        <member name="P:Neurotec.Video.NVideoWriter.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="T:Neurotec.Video.NVideoWriterOptions">
            <summary>
            Manages video writer options.
            </summary>
        </member>
        <member name="M:Neurotec.Video.NVideoWriterOptions.#ctor(System.Windows.Forms.IWin32Window)">
            <summary>
            Initializes a new instance of CompressionOptions. 
            Opens a dialog box with a list of available codecs.
            </summary>
        </member>
        <member name="P:Neurotec.Video.NVideoWriterOptions.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="T:Neurotec.Images.IHeadInfo">
            <summary>
            Provides infromation about NIST IHead format images.
            </summary>                                          
        </member>
        <member name="P:Neurotec.Images.IHeadInfo.NativeType">
            <summary>
            Gets or sets
            </summary>
            <value>
            The function that retrieves NType object for the enclosing type.
            </value>                                                        
        </member>
        <member name="T:Neurotec.Images.IHead">
            <summary>
            Provides functionality for loading and saving images in NIST
            IHead format.
            </summary>                                                  
        </member>
        <member name="M:Neurotec.Images.IHead.LoadImage(System.String)">
            <summary>
            Creates NImage object from NIST IHead file.
            </summary>
            <param name="fileName">A string that contains the name of
                                   the file.</param>
            <returns>
            A NImage object.
            </returns>                                               
        </member>
        <member name="M:Neurotec.Images.IHead.LoadImage(System.IntPtr,System.Int32)">
            <summary>
            Creates NImage object from memory buffer.
            </summary>
            <param name="pBuffer">Pointer to memory buffer.</param>
            <param name="bufferSize">Size of memory buffer.</param>
            <returns>
            NImage object. 
            </returns>                                               
        </member>
        <member name="M:Neurotec.Images.IHead.LoadImage(System.Byte[])">
            <summary>
            Creates NImage object from byte array.
            </summary>
            <param name="buffer">Byte array</param>
            <returns>
            NImage object. 
            </returns>                             
        </member>
        <member name="M:Neurotec.Images.IHead.LoadImage(Neurotec.IO.NBuffer)">
            <summary>
            Creates NImage object from memory buffer.
            </summary>
            <param name="buffer">Memory buffer.</param>
            <returns>NImage object.</returns>
        </member>
        <member name="M:Neurotec.Images.IHead.LoadImage(System.IO.Stream)">
            <summary>
            Creates NImage object from stream.
            </summary>
            <param name="stream">Memory stream.</param>
            <returns>
            A NImage object.
            </returns>                                 
        </member>
        <member name="M:Neurotec.Images.IHead.SaveImage(Neurotec.Images.NImage,System.String)">
            <summary>
            Saves NImage object to file in NIST IHead format.
            </summary>
            <param name="image">A NImage object.</param>
            <param name="fileName">A string that contains the name of the
                                   \file.</param>                        
        </member>
        <member name="M:Neurotec.Images.IHead.SaveImage(Neurotec.Images.NImage)">
            <summary>
            Saves NImage object to byte array in NIST IHead format.
            </summary>
            <param name="image">A NImage object.</param>
            <returns>
            A array with saved image.
            </returns>                                             
        </member>
        <member name="M:Neurotec.Images.IHead.SaveImage(Neurotec.Images.NImage,System.IO.Stream)">
            <summary>
            Saves NImage object to memory stream in NIST IHead format.
            </summary>
            <param name="image">A NImage object.</param>
            <param name="stream">The data stream used to save the image.</param>
        </member>
        <member name="T:Neurotec.Images.JpegInfo">
            <summary>
            Provides information about JPEG images.
            </summary>                             
        </member>
        <member name="F:Neurotec.Images.JpegInfo.DefaultQuality">
            <summary>
            Specifies default JPEG quality.
            </summary>                     
        </member>
        <member name="P:Neurotec.Images.JpegInfo.NativeType">
            <summary>
            Gets or sets
            </summary>
            <value>
            The function that retrieves NType object for the enclosing type.
            </value>                                                        
        </member>
        <member name="P:Neurotec.Images.JpegInfo.Quality">
            <summary>
            Gets or sets JPEG image quality
            </summary>
            <value>
            JPEG image quality
            </value>                       
        </member>
        <member name="P:Neurotec.Images.JpegInfo.IsLossless">
            <summary>
            Check or sets whether a JPEG image is lossless.
            </summary>
            <value>
            <b>true</b> if the image is lossless; else<b> false</b>
            </value>                                               
        </member>
        <member name="T:Neurotec.Images.Jpeg">
            <summary>
            Provides functionality for loading and saving images in JPEG
            format.
            </summary>                                                  
        </member>
        <member name="F:Neurotec.Images.Jpeg.DefaultQuality">
            <summary>
            Specifies default JPEG quality.
            </summary>                     
        </member>
        <member name="M:Neurotec.Images.Jpeg.LoadImage(System.String)">
            <summary>
            Creates NImage object from JPEG file.
            </summary>
            <param name="fileName">A string that contains the name of
                                   the file.</param>
            <returns>
            A NImage object. 
            </returns>                                               
        </member>
        <member name="M:Neurotec.Images.Jpeg.LoadImage(System.IntPtr,System.Int32)">
            <summary>
            Creates NImage object from memory buffer.
            </summary>
            <param name="pBuffer">Pointer to memory buffer.</param>
            <param name="bufferSize">Size of memory buffer.</param>
            <returns>
            NImage object. 
            </returns>                                               
        </member>
        <member name="M:Neurotec.Images.Jpeg.LoadImage(System.Byte[])">
            <summary>
            Creates NImage object from byte array.
            </summary>
            <param name="buffer">Byte array</param>
            <returns>
            NImage object. 
            </returns>                             
        </member>
        <member name="M:Neurotec.Images.Jpeg.LoadImage(Neurotec.IO.NBuffer)">
            <summary>
            Creates NImage object from memory buffer.
            </summary>
            <param name="buffer">Memory buffer.</param>
            <returns>NImage object.</returns>
        </member>
        <member name="M:Neurotec.Images.Jpeg.LoadImage(System.IO.Stream)">
            <summary>
            Creates a new instance of the NImage class from stream.
            </summary>
            <param name="stream">Memory stream.</param>
            <returns>
            A NImage object. 
            </returns>                                             
        </member>
        <member name="M:Neurotec.Images.Jpeg.SaveImage(Neurotec.Images.NImage,System.String)">
            <summary>
            Saves NImage object to file in JPEG format.
            </summary>
            <param name="image">A NImage object.</param>
            <param name="fileName">A string that contains the name of the
                                   \file.</param>                        
        </member>
        <member name="M:Neurotec.Images.Jpeg.SaveImage(Neurotec.Images.NImage,System.Int32,System.String)">
            <summary>
            Saves NImage object to file in JPEG format with specified quality.
            </summary>
            <param name="image">A NImage object.</param>
            <param name="quality">Specifies quality of JPEG image.</param>
            <param name="fileName">A string that contains the name of the
                                   \file.</param>                             
        </member>
        <member name="M:Neurotec.Images.Jpeg.SaveImage(Neurotec.Images.NImage)">
            <summary>
            Saves NImage to NBuffer.
            </summary>
            <param name="image">A NImage object.</param>
            <returns>
            NBuffer object. 
            </returns>                                  
        </member>
        <member name="M:Neurotec.Images.Jpeg.SaveImage(Neurotec.Images.NImage,System.Int32)">
            <summary>
            Saves NImage object to byte array in JPEG format with
            specified quality.
            </summary>
            <param name="image">A NImage object.</param>
            <param name="quality">Specifies quality of JPEG image.</param>
            <returns>
            NBuffer object. 
            </returns>                                                    
        </member>
        <member name="M:Neurotec.Images.Jpeg.SaveImage(Neurotec.Images.NImage,System.IO.Stream)">
            <summary>
            Saves NImage object to stream in JPEG format.
            </summary>
            <param name="image">A NImage object.</param>
            <param name="stream">The data stream used to save the image.</param>
        </member>
        <member name="M:Neurotec.Images.Jpeg.SaveImage(Neurotec.Images.NImage,System.Int32,System.IO.Stream)">
            <summary>
            Saves NImage object to stream in JPEG format with specified
            image quality.
            </summary>
            <param name="image">A NImage object.</param>
            <param name="quality">Specifies quality of JPEG image.</param>
            <param name="stream">The data stream used to save the image.</param>
        </member>
        <member name="T:Neurotec.Images.LosslessJpeg">
            <summary>
            Provides functionality for saving images in Lossless JPEG
            format.
            </summary>                                                  
        </member>
        <member name="M:Neurotec.Images.LosslessJpeg.SaveImage(Neurotec.Images.NImage,System.String)">
            <summary>
            Saves NImage object to file in Lossless JPEG format.
            </summary>
            <param name="image">A NImage object.</param>
            <param name="fileName">A string that contains the name of the
                                   \file.</param>                             
        </member>
        <member name="M:Neurotec.Images.LosslessJpeg.SaveImage(Neurotec.Images.NImage)">
            <summary>
            Saves NImage to NBuffer in Lossless JPEG format.
            </summary>
            <param name="image">A NImage object.</param>
            <returns>
            NBuffer object. 
            </returns>                                      
        </member>
        <member name="M:Neurotec.Images.LosslessJpeg.SaveImage(Neurotec.Images.NImage,System.IO.Stream)">
            <summary>
            Saves NImage object to stream in Lossless JPEG format.
            </summary>
            <param name="image">A NImage object.</param>
            <param name="stream">The data stream used to save the image.</param>
        </member>
        <member name="T:Neurotec.Images.Jpeg2KProfile">
            <summary>
            Enumerates JPEG2000 image types.
            </summary>
        </member>
        <member name="F:Neurotec.Images.Jpeg2KProfile.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:Neurotec.Images.Jpeg2KProfile.Fingerprint1000Ppi">
            <summary>
            Fingerprint scan at 1000ppi.
            </summary>
        </member>
        <member name="F:Neurotec.Images.Jpeg2KProfile.FaceLossy">
            <summary>
            Face image, with loss.
            </summary>
        </member>
        <member name="F:Neurotec.Images.Jpeg2KProfile.FaceLossless">
            <summary>
            Face image, lossless.
            </summary>
        </member>
        <member name="T:Neurotec.Images.Jpeg2KInfo">
            <summary>
            Provides information about Jpeg 2000 images. 
            </summary>                                   
        </member>
        <member name="F:Neurotec.Images.Jpeg2KInfo.DefaultRatio">
            <summary>
            Specifies default JPEG 2000 quality.
            </summary>
            <remarks>
            <paraattr align="justify">
            This parameter controls compression ratio when saving images
            to a file. E.g., when 10 is specified compressed image will
            have 10:1 size ratio compared to that of the uncompressed
            \file. If lossless image is required, then 0 for <c>DefaultRatio</c>
            parameter should be specified.
            </paraattr>
            Compression ratio can be set using <c>Ratio</c> property.
            <paraattr align="justify">
            When one of Jpeg2KProfile values are used (except jNone),
            then <c>DefaultRatio</c> parameter value is ignored.
            </paraattr>
            
            </remarks>                                                          
        </member>
        <member name="P:Neurotec.Images.Jpeg2KInfo.NativeType">
            <summary>
            Gets or sets
            </summary>
            <value>
            The function that retrieves NType object for the enclosing type.
            </value>                                                        
            <summary>
            Gets or sets
            </summary>
            <value>
            The function that retrieves NType object for the enclosing type.
            </value>                                                        
        </member>
        <member name="P:Neurotec.Images.Jpeg2KInfo.Jpeg2KProfileNativeType">
            <summary>
            Defines the native type of the JPEG2000 profile.
            </summary>
        </member>
        <member name="P:Neurotec.Images.Jpeg2KInfo.Profile">
            <summary>
            Gets or sets Jpeg 2000 profile value.
            </summary>
            <value>
            Jpeg2KProfile enumeration.
            </value>                             
        </member>
        <member name="P:Neurotec.Images.Jpeg2KInfo.Ratio">
            <summary>
            Gets or sets Jpeg 2000 compression ration.
            </summary>
            <value>
            Jpeg 2000 image compression ratio.
            </value>
            <seealso cref="F:Neurotec.Images.Jpeg2KInfo.DefaultRatio"/>
        </member>
        <member name="T:Neurotec.Images.Jpeg2K">
            <summary>
            Provides functionality for loading and saving images in JPEG
            2000 format.
            </summary>                                                  
        </member>
        <member name="F:Neurotec.Images.Jpeg2K.DefaultRatio">
            <summary>
            Specifies default JPEG 2000 quality.
            </summary>
            <remarks>
            <paraattr align="justify">
            This parameter controls compression ratio when saving images
            to a file. E.g., when 10 is specified compressed image will
            have 10:1 size ratio compared to that of the uncompressed
            \file. If lossless image is required, then 0 for <c>DefaultRatio</c>
            parameter should be specified.
            </paraattr>
            Compression ratio can be set using <c>Ratio</c> property.
            <paraattr align="justify">
            When one of Jpeg2KProfile values are used (except jNone),
            then <c>DefaultRatio</c> parameter value is ignored.
            </paraattr>
            
            </remarks>                                                          
        </member>
        <member name="M:Neurotec.Images.Jpeg2K.LoadImage(System.String)">
            <summary>
            Creates a new instance of the NImage class.
            </summary>
            <param name="fileName">A string that contains the name of
                                   the file.</param>
            <returns>
            A NImage object. 
            </returns>                                               
        </member>
        <member name="M:Neurotec.Images.Jpeg2K.LoadImage(System.IntPtr,System.Int32)">
            <summary>
            Creates NImage object from memory buffer.
            </summary>
            <param name="pBuffer">Pointer to memory buffer.</param>
            <param name="bufferSize">Size of memory buffer.</param>
            <returns>
            NImage object. 
            </returns>                                               
        </member>
        <member name="M:Neurotec.Images.Jpeg2K.LoadImage(System.Byte[])">
            <summary>
            Creates NImage object from byte array.
            </summary>
            <param name="buffer">Byte array</param>
            <returns>
            NImage object. 
            </returns>                             
        </member>
        <member name="M:Neurotec.Images.Jpeg2K.LoadImage(Neurotec.IO.NBuffer)">
            <summary>
            Loads an image from the specified buffer.
            </summary>
            <param name="buffer">The buffer containing the image.</param>
            <returns>The loaded NImage.</returns>
        </member>
        <member name="M:Neurotec.Images.Jpeg2K.LoadImage(System.IO.Stream)">
            <summary>
            Creates a new instance of the NImage class.
            </summary>
            <param name="stream">The data stream used to load the image.</param>
            <returns>
            A NImage object.
            </returns>                                                          
        </member>
        <member name="M:Neurotec.Images.Jpeg2K.SaveImage(Neurotec.Images.NImage,System.String)">
            <summary>
            Saves NImage.
            </summary>
            <param name="image">A NImage object.</param>
            <param name="fileName">A string that contains the name of the
                                   \file.</param>                        
        </member>
        <member name="M:Neurotec.Images.Jpeg2K.SaveImage(Neurotec.Images.NImage,System.Single,System.String)">
            <summary>
            Saves NImage in Jpeg2K format.
            </summary>
            <param name="image">A NImage object.</param>
            <param name="ratio">Specifies ratio of JPEG 2000
                                compression (value 0.0f means
                                lossless compression).</param>
            <param name="fileName">A string that contains the name of
                                   the file.</param>                 
        </member>
        <member name="M:Neurotec.Images.Jpeg2K.SaveImage(Neurotec.Images.NImage,Neurotec.Images.Jpeg2KProfile,System.String)">
            <summary>
            Saves NImage in Jpeg 2000 format with specified profile.
            </summary>
            <param name="image">A NImage object.</param>
            <param name="profile">Specifies the JPEG 2000 profile.</param>
            <param name="fileName">A string that contains the name of
                                   the file.</param>                      
        </member>
        <member name="M:Neurotec.Images.Jpeg2K.SaveImage(Neurotec.Images.NImage)">
            <summary>
            Saves NImage.
            </summary>
            <param name="image">A NImage object.</param>
            <returns>
            NBuffer object.
            </returns>                                  
        </member>
        <member name="M:Neurotec.Images.Jpeg2K.SaveImage(Neurotec.Images.NImage,System.Single)">
            <summary>
            Saves NImage.
            </summary>
            <param name="image">A NImage object.</param>
            <param name="ratio">Specifies ratio of JPEG 2000 compression
                                (value 0.0f means lossless compression).</param>
            <returns>
            NBuffer object.
            </returns>                                                          
        </member>
        <member name="M:Neurotec.Images.Jpeg2K.SaveImage(Neurotec.Images.NImage,Neurotec.Images.Jpeg2KProfile)">
            <summary>
            Saves the image.
            </summary>
            <param name="image">NImage to be saved.</param>
            <param name="profile">Jpeg 2000 profile.</param>
            <returns>Nbuffer to which the image was saved.</returns>
        </member>
        <member name="M:Neurotec.Images.Jpeg2K.SaveImage(Neurotec.Images.NImage,System.IO.Stream)">
            <summary>
            Saves NImage.
            </summary>
            <param name="image">A NImage object.</param>
            <param name="stream">The data stream used to save the image.</param>
        </member>
        <member name="M:Neurotec.Images.Jpeg2K.SaveImage(Neurotec.Images.NImage,System.Single,System.IO.Stream)">
            <summary>
            Saves NImage.
            </summary>
            <param name="image">A NImage object.</param>
            <param name="ratio">Specifies ratio of JPEG 2000
                                compression (value 0.0f means lossless
                                compression).</param>
            <param name="stream">The data stream used to save the image.</param>
        </member>
        <member name="M:Neurotec.Images.Jpeg2K.SaveImage(Neurotec.Images.NImage,Neurotec.Images.Jpeg2KProfile,System.IO.Stream)">
            <summary>
            Saves the image into specified stream.
            </summary>
            <param name="image">NImage to be saved.</param>
            <param name="profile">Jpeg 2000 profile.</param>
            <param name="stream">Stream used to save the image.</param>
        </member>
        <member name="T:Neurotec.Images.NGrayscaleImage">
            <summary>
            Provides functionality for managing 8-bit grayscale images.
            </summary>                                                 
        </member>
        <member name="T:Neurotec.Images.NImage">
            <summary>
            Provides functionality for managing images.
            </summary>
        </member>
        <member name="F:Neurotec.Images.NImage.FlagReadUnknownImage">
            <summary>
            Flag specifying whether unknown images should be read.
            </summary>                                            
        </member>
        <member name="F:Neurotec.Images.NImage.FlagWriteUnknownImage">
            <summary>
            Flag specifying whether unknown images should be written.
            </summary>                                               
        </member>
        <member name="F:Neurotec.Images.NImage.FlagDstSwapChannels">
            <summary>
            This flag is used when NImage should be copied swapping RGB
            channels (e.g. RGB to BRG).
            </summary>                                                 
        </member>
        <member name="F:Neurotec.Images.NImage.FlagDstAlphaChannelFirst">
            <summary>
            This flag is used when Nimage should be copied using Rgb
            Alpha channel first method (ARGB color space). 
            </summary>                                              
        </member>
        <member name="F:Neurotec.Images.NImage.FlagDstBottomToTop">
            <summary>
            This flag is used when NImage should be copied changing
            pixels order bottom to top (bottom lines become top and vice
            versa). 
            </summary>                                                  
        </member>
        <member name="F:Neurotec.Images.NImage.FlagSrcSwapChannels">
            <summary>
            This flag is used when NImage should be copied swapping RGB
            channels (e.g. RGB to BRG).
            </summary>                                                 
        </member>
        <member name="F:Neurotec.Images.NImage.FlagSrcAlphaChannelFirst">
            This flag is used when Nimage should be copied using Rgb
            Alpha channel first method (ARGB color space).          
        </member>
        <member name="F:Neurotec.Images.NImage.FlagSrcBottomToTop">
            This flag is used when NImage should be copied changing
            pixels order bottom to top (bottom lines become top and vice
            versa).                                                     
        </member>
        <member name="F:Neurotec.Images.NImage.FlagAllSrc">
            For internal use.
        </member>
        <member name="F:Neurotec.Images.NImage.FlagAllDstAndSrc">
            For internal use.
        </member>
        <member name="M:Neurotec.Images.NImage.#cctor">
            For internal use.
        </member>
        <member name="M:Neurotec.Images.NImage.GetWrapper(Neurotec.Images.NPixelFormat,System.UInt32,System.UInt32,System.Int32,System.Single,System.Single,System.Byte[])">
            <summary>
            Creates NImage object wrapper.
            </summary>
            <param name="pixelFormat">A NPixelFormat of image.</param>
            <param name="width">A width of image.</param>
            <param name="height">A height of image.</param>
            <param name="stride">A stride of image.</param>
            <param name="horzResolution">A horizontal resolution in
                                         pixels per inch of image.</param>
            <param name="vertResolution">A vertical resolution in pixels
                                         per inch of image.</param>
            <param name="srcPixels">A source pixel array.</param>
            <returns>
            A NImage object.
            </returns>
            <remarks>
            For more information on image stride see Stride property.
            
            Format of memory block pixels points to must be the same as
            described in Pixels property.
            
            <i>horzResolution</i> and <i>vertResolution</i> can be zero
            if resolution is not applicable for the image.
            
            
            </remarks>                                                    
        </member>
        <member name="M:Neurotec.Images.NImage.GetWrapper(Neurotec.Images.NPixelFormat,System.UInt32,System.UInt32,System.Int32,System.Single,System.Single,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Creates NImage object wrapper.
            </summary>
            <param name="pixelFormat">A NPixelFormat of image.</param>
            <param name="width">A width of image.</param>
            <param name="height">A height of image.</param>
            <param name="stride">A stride of image.</param>
            <param name="horzResolution">A horizontal resolution in
                                         pixels per inch of image.</param>
            <param name="vertResolution">A vertical resolution in pixels
                                         per inch of image.</param>
            <param name="pixels">A source pixel array.</param>
            <param name="pixelsIndex">Index in srcPixels byte array
                                      where image pixels data starts.</param>
            <param name="pixelsCount">Number of pixels in byte array.</param>
            <returns>
            A NImage object.
            </returns>
            <remarks>
            For more information on image stride see Stride property.
            
            Format of memory block pixels points to must be the same as
            described in Pixels property.
            
            <i>horzResolution</i> and <i>vertResolution</i> can be zero
            if resolution is not applicable for the image.
            </remarks>                                                       
        </member>
        <member name="M:Neurotec.Images.NImage.GetWrapper(Neurotec.Images.NPixelFormat,System.UInt32,System.UInt32,System.UInt32,System.Single,System.Single,System.IntPtr,System.Boolean)">
            <summary>
            Creates NImage object wrapper.
            </summary>
            <param name="pixelFormat">A NPixelFormat of image.</param>
            <param name="width">A width of image.</param>
            <param name="height">A height of image.</param>
            <param name="stride">A stride of image.</param>
            <param name="horzResolution">A horizontal resolution in
                                         pixels per inch of image.</param>
            <param name="vertResolution">A vertical resolution in pixels
                                         per inch of image.</param>
            <param name="pPixels">Pointer to memory block
                                 containing pixels for the
                                 image.</param>
            <param name="ownsPixels">Specifies whether pixels will
                                     be automatically deleted with
                                     the image (if set to true).</param>
            <returns>
            A NImage object.
            </returns>
            <remarks>
            For more information on image stride see Stride property.
            
            Format of memory block pixels points to must be the same as
            described in Pixels property.
            
            pixels must not be deleted during lifetime of the image. If <i>ownsPixels</i>
            is true then pixels will be automatically deleted with the
            image.
            
            <i>horzResolution</i> and <i>vertResolution</i> can be zero
            if resolution is not applicable for the image.
            </remarks>                                                                   
        </member>
        <member name="M:Neurotec.Images.NImage.GetWrapper(Neurotec.Images.NPixelFormat,System.UInt32,System.UInt32,System.UInt64,System.Single,System.Single,System.IntPtr,System.Boolean)">
            <summary>
            Creates NImage object wrapper.
            </summary>
            <param name="pixelFormat">A NPixelFormat of image.</param>
            <param name="width">A width of image.</param>
            <param name="height">A height of image.</param>
            <param name="stride">A stride of image.</param>
            <param name="horzResolution">A horizontal resolution in
                                         pixels per inch of image.</param>
            <param name="vertResolution">A vertical resolution in pixels
                                         per inch of image.</param>
            <param name="pPixels">Pointer to memory block
                                 containing pixels for the
                                 image.</param>
            <param name="ownsPixels">Specifies whether pixels will
                                     be automatically deleted with
                                     the image (if set to true).</param>
            <returns>
            A NImage object.
            </returns>
            <remarks>
            For more information on image stride see Stride property.
            
            Format of memory block pixels points to must be the same as
            described in Pixels property.
            
            pixels must not be deleted during lifetime of the image. If <i>ownsPixels</i>
            is true then pixels will be automatically deleted with the
            image.
            
            <i>horzResolution</i> and <i>vertResolution</i> can be zero
            if resolution is not applicable for the image.
            </remarks>                                                                   
        </member>
        <member name="M:Neurotec.Images.NImage.GetWrapper(Neurotec.Images.NPixelFormat,System.UInt32,System.UInt32,System.UInt64,System.Single,System.Single,Neurotec.IO.NBuffer)">
            <summary>
            Creates NImage object wrapper.
            </summary>
            <param name="pixelFormat">Format of the pixels.</param>
            <param name="width">A width of image.</param>
            <param name="height">A height of image.</param>
            <param name="stride">The stride of the image.</param>
            <param name="horzResolution">A horizontal resolution in pixels per inch of image.</param>
            <param name="vertResolution">A vertical resolution in pixels per inch of image.</param>
            <param name="pixels">The source pixels.</param>
            <returns>A NImage object.</returns>
        </member>
        <member name="M:Neurotec.Images.NImage.GetWrapper(Neurotec.Images.NPixelFormat,System.UInt32,System.UInt32,System.Int32,Neurotec.IO.NBuffer)">
            <summary>
            Creates NImage object wrapper.
            </summary>
            <param name="pixelFormat">Format of the pixels.</param>
            <param name="width">A width of image.</param>
            <param name="height">A height of image.</param>
            <param name="stride">The stride of the image.</param>
            <param name="pixels">The source pixels.</param>
            <returns>
            A NImage object.
            </returns>
            <remarks>
            For more information on image stride see Stride property.
            
            Format of memory block pixels points to must be the same as described in Pixels property.
            
            <i>horzResolution</i> and <i>vertResolution</i> can be zero if resolution is not applicable for the
            image. 
            </remarks>                                                                                         
        </member>
        <member name="M:Neurotec.Images.NImage.GetWrapper(Neurotec.Images.NPixelFormat,System.UInt32,System.UInt32,System.Int64,Neurotec.IO.NBuffer,System.UInt32)">
            <summary>
            Creates NImage object wrapper.
            </summary>
            <param name="pixelFormat">Format of the pixels.</param>
            <param name="width">A width of image.</param>
            <param name="height">A height of image.</param>
            <param name="stride">The stride of the image.</param>
            <param name="pixels">The source pixels.</param>
            <param name="flags">Must be zero.</param>
            <returns>
            A NImage object.
            </returns>
            <remarks>
            For more information on image stride see Stride property.
            
            Format of memory block pixels points to must be the same as described in Pixels property.
            
            <i>horzResolution</i> and <i>vertResolution</i> can be zero if resolution is not applicable for the
            image 
            </remarks>                                                                                         
        </member>
        <member name="M:Neurotec.Images.NImage.GetWrapper(Neurotec.Images.NPixelFormat,System.UInt32,System.UInt32,System.Int32,System.Single,System.Single,System.Byte[],System.UInt32,System.UInt32)">
            <summary>
            Creates NImage object wrapper.
            </summary>
            <param name="pixelFormat">A NPixelFormat of image.</param>
            <param name="width">A width of image.</param>
            <param name="height">A height of image.</param>
            <param name="stride">A stride of image.</param>
            <param name="horzResolution">A horizontal resolution in
                                         pixels per inch of image.</param>
            <param name="vertResolution">A vertical resolution in pixels
                                         per inch of image.</param>
            <param name="srcPixels">A source pixel array.</param>
            <param name="left">X\-coordinate of the image
                               rectangle. </param>
            <param name="top">Y\-coordinate of the image
                              rectangle. </param>
            <returns>
            A NImage object.
            </returns>
            <remarks>
            For more information on image stride see Stride property.
            
            Format of memory block pixels points to must be the same as
            described in Pixels property.
            
            <i>horzResolution</i> and <i>vertResolution</i> can be zero
            if resolution is not applicable for the image. 
            </remarks>                                                    
        </member>
        <member name="M:Neurotec.Images.NImage.GetWrapper(Neurotec.Images.NPixelFormat,System.UInt32,System.UInt32,System.Int32,System.Single,System.Single,System.Byte[],System.Int32,System.Int32,System.UInt32,System.UInt32)">
            <summary>
            Creates NImage object wrapper.
            </summary>
            <param name="pixelFormat">A NPixelFormat of image.</param>
            <param name="width">A width of image.</param>
            <param name="height">A height of image.</param>
            <param name="stride">A stride of image.</param>
            <param name="horzResolution">A horizontal resolution in
                                         pixels per inch of image.</param>
            <param name="vertResolution">A vertical resolution in pixels
                                         per inch of image.</param>
            <param name="pixels">A source pixel array.</param>
            <param name="pixelsIndex">Index in srcPixels byte array
                                      where image pixels data starts.</param>
            <param name="pixelsCount">Number of pixels in byte array.</param>
            <param name="left">X\-coordinate of the image
                               rectangle. </param>
            <param name="top">Y\-coordinate of the image
                              rectangle. </param>
            <returns>
            A NImage object.
            </returns>
            <remarks>
            For more information on image stride see Stride property.
            
            Format of memory block pixels points to must be the same as
            described in Pixels property.
            
            <i>horzResolution</i> and <i>vertResolution</i> can be zero
            if resolution is not applicable for the image. 
            </remarks>                                                       
        </member>
        <member name="M:Neurotec.Images.NImage.GetWrapper(Neurotec.Images.NPixelFormat,System.UInt32,System.UInt32,System.UInt32,System.Single,System.Single,System.IntPtr,System.UInt32,System.UInt32)">
            <summary>
            Creates NImage object wrapper.
            </summary>
            <param name="pixelFormat">A NPixelFormat of image.</param>
            <param name="width">A width of image.</param>
            <param name="height">A height of image.</param>
            <param name="stride">A stride of image.</param>
            <param name="horzResolution">A horizontal resolution in
                                         pixels per inch of image.</param>
            <param name="vertResolution">A vertical resolution in pixels
                                         per inch of image.</param>
            <param name="pPixels">Pointer to memory block which
                                 contains image data.</param>
            <param name="left">X\-coordinate of the image
                               rectangle. </param>
            <param name="top">Y\-coordinate of the image
                              rectangle. </param>
            <returns>
            A NImage object.
            </returns>
            <remarks>
            For more information on image stride see Stride property.
            
            Format of memory block pixels points to must be the same as
            described in Pixels property.
            
            <i>horzResolution</i> and <i>vertResolution</i> can be zero
            if resolution is not applicable for the image. 
            </remarks>                                                    
        </member>
        <member name="M:Neurotec.Images.NImage.GetWrapper(Neurotec.Images.NPixelFormat,System.UInt32,System.UInt32,System.UInt64,System.Single,System.Single,System.IntPtr,System.UInt32,System.UInt32)">
            <summary>
            Creates NImage object wrapper.
            </summary>
            <param name="pixelFormat">A NPixelFormat of image.</param>
            <param name="width">A width of image.</param>
            <param name="height">A height of image.</param>
            <param name="stride">A stride of image.</param>
            <param name="horzResolution">A horizontal resolution in
                                         pixels per inch of image.</param>
            <param name="vertResolution">A vertical resolution in pixels
                                         per inch of image.</param>
            <param name="pPixels">Pointer to memory block
                                 containing pixels for the
                                 image.</param>
            <param name="left">X\-coordinate of the image
                               rectangle. </param>
            <param name="top">Y\-coordinate of the image
                              rectangle. </param>
            <returns>
            A NImage object.
            </returns>
            <remarks>
            For more information on image stride see Stride property.
            
            Format of memory block pixels points to must be the same as
            described in Pixels property.
            
            pixels must not be deleted during lifetime of the image. If <i>ownsPixels</i>
            is true then pixels will be automatically deleted with the
            image.
            
            <i>horzResolution</i> and <i>vertResolution</i> can be zero
            if resolution is not applicable for the image. 
            </remarks>                                                                   
        </member>
        <member name="M:Neurotec.Images.NImage.GetWrapper(Neurotec.Images.NPixelFormat,System.UInt32,System.UInt32,System.UInt64,System.Single,System.Single,Neurotec.IO.NBuffer,System.UInt32,System.UInt32)">
            <summary>
            Creates NImage object wrapper.
            </summary>
            <param name="pixelFormat">A NPixelFormat of image.</param>
            <param name="width">A width of image.</param>
            <param name="height">A height of image.</param>
            <param name="stride">A stride of image.</param>
            <param name="horzResolution">A horizontal resolution in pixels per inch of image.</param>
            <param name="vertResolution">A vertical resolution in pixels per inch of image.</param>
            <param name="pixels">The source pixels.</param>
            <param name="left">X-coordinates of the image rectangle.</param>
            <param name="top">Y-coordinates of the image rectangle.</param>
            <returns>A NImage object.</returns>
        </member>
        <member name="M:Neurotec.Images.NImage.GetWrapper(Neurotec.Images.NPixelFormat,System.UInt32,System.UInt32,System.Int32,Neurotec.IO.NBuffer,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Creates NImage object wrapper.
            </summary>
            <param name="pixelFormat">Format of the pixels.</param>
            <param name="srcWidth">Width of the source image.</param>
            <param name="srcHeight">Height of the source image.</param>
            <param name="stride">The stride of the image.</param>
            <param name="pixels">The source pixels.</param>
            <param name="left">X\-coordinate of the image rectangle. </param>
            <param name="top">Y\-coordinate of the image rectangle. </param>
            <param name="width">A width of image.</param>
            <param name="height">A height of image.</param>
            <returns>
            A NImage object.
            </returns>
            <remarks>
            For more information on image stride see Stride property.
            
            Format of memory block pixels points to must be the same as described in Pixels property.
            
            <i>horzResolution</i> and <i>vertResolution</i> can be zero if resolution is not applicable for the
            image 
            </remarks>                                                                                         
        </member>
        <member name="M:Neurotec.Images.NImage.GetWrapper(Neurotec.Images.NPixelFormat,System.UInt32,System.UInt32,System.Int64,Neurotec.IO.NBuffer,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Creates NImage object wrapper.
            </summary>
            <param name="pixelFormat">Format of the pixels.</param>
            <param name="srcWidth">Width of the source image.</param>
            <param name="srcHeight">Height of the source image.</param>
            <param name="stride">The stride of the image.</param>
            <param name="pixels">The source pixels.</param>
            <param name="left">X\-coordinate of the image rectangle. </param>
            <param name="top">Y\-coordinate of the image rectangle. </param>
            <param name="width">A width of image.</param>
            <param name="height">A height of image.</param>
            <param name="flags">Must be zero.</param>
            <returns>
            A NImage object.
            </returns>
            <remarks>
            For more information on image stride see Stride property.
            
            Format of memory block pixels points to must be the same as described in Pixels property.
            
            <i>horzResolution</i> and <i>vertResolution</i> can be zero if resolution is not applicable for the
            image 
            </remarks>                                                                                         
        </member>
        <member name="M:Neurotec.Images.NImage.GetWrapper(Neurotec.Images.NPixelFormat,System.UInt32,System.UInt32,System.Int64,Neurotec.IO.NBuffer[],System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Creates NImage object wrapper.
            </summary>
            <param name="pixelFormat">Format of the pixels.</param>
            <param name="srcWidth">Width of the source image.</param>
            <param name="srcHeight">Height of the source image.</param>
            <param name="stride">The stride of the image.</param>
            <param name="planes">The source planes.</param>
            <param name="left">X-coordinate of the image rectangle.</param>
            <param name="top">Y-coordinate of the image rectangle.</param>
            <param name="width">A width of image.</param>
            <param name="height">A height of image.</param>
            <param name="flags">Must be zero.</param>
            <returns>A NImage object.</returns>
        </member>
        <member name="M:Neurotec.Images.NImage.GetWrapper(Neurotec.Images.NImage,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Single,System.Single)">
            <summary>
            Creates NImage object wrapper.
            </summary>
            <param name="srcImage">A NImage source object.</param>
            <param name="left">X\-coordinate of the image
                               rectangle. </param>
            <param name="top">Y\-coordinate of the image
                              rectangle. </param>
            <param name="width">A width of image.</param>
            <param name="height">A height of image.</param>
            <param name="horzResolution">A horizontal resolution in
                                         pixels per inch of image.</param>
            <param name="vertResolution">A vertical resolution in pixels
                                         per inch of image.</param>
            <returns>
            A NImage object.
            </returns>
            <remarks>
            For more information on image stride see Stride property.
            
            Format of memory block pixels points to must be the same as
            described in Pixels property.
            
            <i>horzResolution</i> and <i>vertResolution</i> can be zero
            if resolution is not applicable for the image. 
            </remarks>                                                    
        </member>
        <member name="M:Neurotec.Images.NImage.GetWrapper(Neurotec.Images.NImage,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Creates NImage object wrapper.
            </summary>
            <param name="srcImage">A NImage source object.</param>
            <param name="left">X\-coordinate of the image rectangle. </param>
            <param name="top">Y\-coordinate of the image rectangle. </param>
            <param name="width">A width of image.</param>
            <param name="height">A height of image.</param>
            <returns>
            A NImage object.
            </returns>
            <remarks>
            For more information on image stride see Stride property.
            
            Format of memory block pixels points to must be the same as
            described in Pixels property.
            
            <i>horzResolution</i> and <i>vertResolution</i> can be zero
            if resolution is not applicable for the image.
            </remarks>
            <exception cref="T:System.ArgumentNullException">srcImage is null.</exception>
        </member>
        <member name="M:Neurotec.Images.NImage.GetWrapper(Neurotec.Images.NImage,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Creates NImage object wrapper.
            </summary>
            <param name="srcImage">A NImage source object.</param>
            <param name="left">X\-coordinate of the image rectangle. </param>
            <param name="top">Y\-coordinate of the image rectangle. </param>
            <param name="width">A width of image.</param>
            <param name="height">A height of image.</param>
            <param name="flags">Must be zero.</param>
            <returns>
            A NImage object.
            </returns>
            <remarks>
            For more information on image stride see Stride property.
            
            Format of memory block pixels points to must be the same as described in Pixels property.
            
            <i>horzResolution</i> and <i>vertResolution</i> can be zero if resolution is not applicable for the
            image. 
            </remarks>                                                                                         
        </member>
        <member name="M:Neurotec.Images.NImage.Create(Neurotec.Images.NPixelFormat,System.UInt32,System.UInt32,System.UInt32,System.Single,System.Single)">
            <summary>
            Creates an image with specified pixel format, size, stride
            and resolution.
            </summary>
            <param name="pixelFormat">Specifies pixel format of the
                                      image.</param>
            <param name="width">Specifies width of the image.</param>
            <param name="height">Specifies height of the image.</param>
            <param name="stride">Specifies stride of the image.</param>
            <param name="horzResolution">Specifies horizontal resolution
                                         in pixels per inch of the
                                         image.</param>
            <param name="vertResolution">Specifies vertical resolution
                                         in pixels per inch of the
                                         image.</param>
            <returns>
            Created NImage object.
            </returns>                                                  
        </member>
        <member name="M:Neurotec.Images.NImage.Create(Neurotec.Images.NPixelFormat,System.UInt32,System.UInt32,System.UInt64,System.Single,System.Single)">
            <summary>
            Creates an image with specified pixel format, size, stride
            and resolution.
            </summary>
            <param name="pixelFormat">Specifies pixel format of the
                                      image.</param>
            <param name="width">Specifies width of the image.</param>
            <param name="height">Specifies height of the image.</param>
            <param name="stride">Specifies stride of the image.</param>
            <param name="horzResolution">Specifies horizontal resolution
                                         in pixels per inch of the
                                         image.</param>
            <param name="vertResolution">Specifies vertical resolution
                                         in pixels per inch of the
                                         image.</param>
            <returns>
            Created NImage object. 
            </returns>                                                  
        </member>
        <member name="M:Neurotec.Images.NImage.Create(Neurotec.Images.NPixelFormat,System.UInt32,System.UInt32,System.Int32)">
            <summary>
            Creates NImage with specified pixel format, size and stride.
            </summary>
            <param name="pixelFormat">Image pixel format.</param>
            <param name="width">Image width.</param>
            <param name="height">Image height.</param>
            <param name="stride">Image stride.</param>
            <returns>
            NImage object.
            </returns>                                                  
        </member>
        <member name="M:Neurotec.Images.NImage.Create(Neurotec.Images.NPixelFormat,System.UInt32,System.UInt32,System.Int64,System.UInt32)">
            <summary>
            Creates NImage with specified pixel format, size, stride and
            flags.
            </summary>
            <param name="pixelFormat">Image pixel format.</param>
            <param name="width">Image width.</param>
            <param name="height">Image height.</param>
            <param name="stride">Image stride.</param>
            <param name="flags">Flags controlling object creation.
                                See section &quot;Fileds&quot; for
                                the list of available to use
                                flags.</param>
            <returns>
            NImage object. 
            </returns>                                                  
        </member>
        <member name="M:Neurotec.Images.NImage.FromData(Neurotec.Images.NPixelFormat,System.UInt32,System.UInt32,System.UInt32,System.Single,System.Single,System.Int32,System.Byte[])">
            <summary>
            Creates NImage object from data with specified resolution.
            </summary>
            <param name="pixelFormat">A NPixelFormat of image.</param>
            <param name="width">A width of image.</param>
            <param name="height">A height of image.</param>
            <param name="stride">A stride of image.</param>
            <param name="horzResolution">A horizontal resolution in
                                         pixels per inch of image.</param>
            <param name="vertResolution">A vertical resolution in pixels
                                         per inch of image.</param>
            <param name="srcStride">A stride of source image.</param>
            <param name="srcPixels">A pointer to source pixel
                                    array.</param>
            <returns>
            A NImage object.
            </returns>
            <remarks>
            If stride is zero then image stride is automatically
            calculated. For more information on image stride see Stride
            property.
            
            Format of memory block srcPixels points to must be the same
            as described in Pixels property, only stride is equal to
            srcStride.
            
            <i>horzResolution</i> and <i>vertResolution</i> can be zero
            if resolution is not applicable for the image.
            
            
            </remarks>                                                    
        </member>
        <member name="M:Neurotec.Images.NImage.FromData(Neurotec.Images.NPixelFormat,System.UInt32,System.UInt32,System.UInt32,System.Single,System.Single,System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Creates NImage object from data with specified resolution.
            </summary>
            <param name="pixelFormat">A NPixelFormat of image.</param>
            <param name="width">A width of image.</param>
            <param name="height">A height of image.</param>
            <param name="stride">A stride of image.</param>
            <param name="horzResolution">A horizontal resolution in
                                         pixels per inch of image.</param>
            <param name="vertResolution">A vertical resolution in pixels
                                         per inch of image.</param>
            <param name="srcStride">A stride of source image.</param>
            <param name="srcPixels">A pointer to source pixel
                                    array.</param>
            <param name="srcPixelsIndex">Index in srcPixels byte array
                                         where image pixels data starts.</param>
            <param name="srcPixelsCount">Number of pixels in byte array.</param>
            <returns>
            A NImage object.
            </returns>
            <remarks>
            If stride is zero then image stride is automatically
            calculated. For more information on image stride see Stride
            property.
            
            Format of memory block srcPixels points to must be the same
            as described in Pixels property, only stride is equal to
            srcStride.
            
            <i>horzResolution</i> and <i>vertResolution</i> can be zero
            if resolution is not applicable for the image.
            </remarks>                                                          
        </member>
        <member name="M:Neurotec.Images.NImage.FromData(Neurotec.Images.NPixelFormat,System.UInt32,System.UInt32,System.UInt32,System.Single,System.Single,System.UInt32,System.IntPtr)">
            <summary>
            Creates NImage object from data with specified resolution.
            </summary>
            <param name="pixelFormat">A NPixelFormat of image.</param>
            <param name="width">A width of image.</param>
            <param name="height">A height of image.</param>
            <param name="stride">A stride of image.</param>
            <param name="horzResolution">A horizontal resolution in
                                         pixels per inch of image.</param>
            <param name="vertResolution">A vertical resolution in pixels
                                         per inch of image.</param>
            <param name="srcStride">A stride of source image.</param>
            <param name="pSrcPixels">A pointer to source pixel
                                    array.</param>
            <returns>
            A NImage object.
            </returns>
            <remarks>
            If stride is zero then image stride is automatically
            calculated. For more information on image stride see Stride
            property.
            
            Format of memory block srcPixels points to must be the same
            as described in Pixels property, only stride is equal to
            srcStride.
            
            <i>horzResolution</i> and <i>vertResolution</i> can be zero
            if resolution is not applicable for the image. 
            </remarks>                                                    
        </member>
        <member name="M:Neurotec.Images.NImage.FromData(Neurotec.Images.NPixelFormat,System.UInt32,System.UInt32,System.UInt64,System.Single,System.Single,System.UInt64,System.IntPtr)">
            <summary>
            Creates NImage object from data with specified resolution.
            </summary>
            <param name="pixelFormat">A NPixelFormat of image.</param>
            <param name="width">A width of image.</param>
            <param name="height">A height of image.</param>
            <param name="stride">A stride of image.</param>
            <param name="horzResolution">A horizontal resolution in
                                         pixels per inch of image.</param>
            <param name="vertResolution">A vertical resolution in pixels
                                         per inch of image.</param>
            <param name="srcStride">A stride of source image.</param>
            <param name="pSrcPixels">A pointer to source pixel
                                    array.</param>
            <returns>
            A NImage object. 
            </returns>                                                    
        </member>
        <member name="M:Neurotec.Images.NImage.FromData(Neurotec.Images.NPixelFormat,System.UInt32,System.UInt32,System.UInt64,System.Single,System.Single,System.UInt64,Neurotec.IO.NBuffer)">
            <summary>
            Creates NImage object from data with specified resolution.
            </summary>
            <param name="pixelFormat">A NPixelFormat of image.</param>
            <param name="width">A width of image.</param>
            <param name="height">A height of image</param>
            <param name="stride">A stride of image.</param>
            <param name="horzResolution">A horizontal resolution in pixels per inch of image.</param>
            <param name="vertResolution">A vertical resolution in pixels per inch of image.</param>
            <param name="srcStride">A stride of source image.</param>
            <param name="srcPixels">NBuffer containing source pixels.</param>
            <returns>A NImage object.</returns>
        </member>
        <member name="M:Neurotec.Images.NImage.FromData(Neurotec.Images.NPixelFormat,System.UInt32,System.UInt32,System.Int32,System.UInt32,Neurotec.IO.NBuffer)">
            <summary>
            Creates NImage object from data with specified parameters.
            </summary>
            <param name="pixelFormat">A NPixelFormat of image.</param>
            <param name="width">Specifies width of the image. </param>
            <param name="height">Specifies height of the image.</param>
            <param name="stride">A stride of image.</param>
            <param name="srcStride">A stride of source image.</param>
            <param name="srcPixels">Source image pixel array.</param>
            <returns>
            A NImage object.
            </returns>
            <remarks>
            If stride is zero then image stride is automatically
            calculated. For more information on image stride see Stride
            property.
            
            Format of memory block srcPixels points to must be the same
            as described in Pixels property, only stride is equal to
            srcStride. 
            </remarks>
        </member>
        <member name="M:Neurotec.Images.NImage.FromData(Neurotec.Images.NPixelFormat,System.UInt32,System.UInt32,System.Int64,System.Int64,Neurotec.IO.NBuffer,System.UInt32)">
            <summary>
            Creates NImage object from data with specified parameters.
            </summary>
            <param name="pixelFormat">A NPixelFormat of image.</param>
            <param name="width">Specifies width of the image. </param>
            <param name="height">Specifies height of the image.</param>
            <param name="stride">A stride of image.</param>
            <param name="srcStride">A stride of source image.</param>
            <param name="srcPixels">Source image pixel array.</param>
            <param name="flags">Flags controlling NImage creation.
                                These flags can be used\:
                                FlagSrcAlphaChannelFirst,
                                FlagSrcBottomToTop,
                                FlagSrcSwapChannels.</param>
            <returns>
            A NImage object.
            </returns>
            <remarks>
            If stride is zero then image stride is automatically
            calculated. For more information on image stride see Stride
            property.
            
            Format of memory block srcPixels points to must be the same
            as described in Pixels property, only stride is equal to
            srcStride. 
            </remarks>
        </member>
        <member name="M:Neurotec.Images.NImage.FromData(Neurotec.Images.NPixelFormat,System.UInt32,System.UInt32,System.UInt32,System.Single,System.Single,System.Int32,System.Byte[],System.UInt32,System.UInt32)">
            <summary>
            Creates NImage object from data with specified resolution.
            </summary>
            <param name="pixelFormat">A NPixelFormat of image.</param>
            <param name="width">A width of image.</param>
            <param name="height">A height of image.</param>
            <param name="stride">A stride of image.</param>
            <param name="horzResolution">A horizontal resolution in
                                         pixels per inch of image.</param>
            <param name="vertResolution">A vertical resolution in pixels
                                         per inch of image.</param>
            <param name="srcStride">A stride of source image.</param>
            <param name="srcPixels">A pointer to source pixel
                                    array.</param>
            <param name="left">X\-coordinate of the image
                               rectangle. </param>
            <param name="top">Y\-coordinate of the image
                              rectangle. </param>
            <returns>
            A NImage object.
            </returns>
            <remarks>
            If stride is zero then image stride is automatically
            calculated. For more information on image stride see Stride
            property.
            
            Format of memory block srcPixels points to must be the same
            as described in Pixels property, only stride is equal to
            srcStride.
            
            <i>horzResolution</i> and <i>vertResolution</i> can be zero
            if resolution is not applicable for the image. 
            </remarks>
        </member>
        <member name="M:Neurotec.Images.NImage.FromData(Neurotec.Images.NPixelFormat,System.UInt32,System.UInt32,System.UInt32,System.Single,System.Single,System.Int32,System.Byte[],System.Int32,System.Int32,System.UInt32,System.UInt32)">
            <summary>
            Creates NImage object from data with specified resolution.
            </summary>
            <param name="pixelFormat">A NPixelFormat of image.</param>
            <param name="width">A width of image.</param>
            <param name="height">A height of image.</param>
            <param name="stride">A stride of image.</param>
            <param name="horzResolution">A horizontal resolution in
                                         pixels per inch of image.</param>
            <param name="vertResolution">A vertical resolution in pixels
                                         per inch of image.</param>
            <param name="srcStride">A stride of source image.</param>
            <param name="srcPixels">A pointer to source pixel
                                    array.</param>
            <param name="srcPixelsIndex">Index in srcPixels byte array
                                         where image pixels data starts.</param>
            <param name="srcPixelsCount">Number of pixels in byte array.</param>
            <param name="left">X\-coordinate of the image
                               rectangle. </param>
            <param name="top">Y\-coordinate of the image
                              rectangle. </param>
            <returns>
            A NImage object.
            </returns>
            <remarks>
            If stride is zero then image stride is automatically
            calculated. For more information on image stride see Stride
            property.
            
            Format of memory block srcPixels points to must be the same
            as described in Pixels property, only stride is equal to
            srcStride.
            
            <i>horzResolution</i> and <i>vertResolution</i> can be zero
            if resolution is not applicable for the image. 
            </remarks>
        </member>
        <member name="M:Neurotec.Images.NImage.FromData(Neurotec.Images.NPixelFormat,System.UInt32,System.UInt32,System.UInt32,System.Single,System.Single,System.UInt32,System.IntPtr,System.UInt32,System.UInt32)">
            <summary>
            Creates NImage object from data with specified resolution.
            </summary>
            <param name="pixelFormat">A NPixelFormat of image.</param>
            <param name="width">A width of image.</param>
            <param name="height">A height of image.</param>
            <param name="stride">A stride of image.</param>
            <param name="horzResolution">A horizontal resolution in
                                         pixels per inch of image.</param>
            <param name="vertResolution">A vertical resolution in pixels
                                         per inch of image.</param>
            <param name="srcStride">A stride of source image.</param>
            <param name="srcPixels">A pointer to source pixel
                                    array.</param>
            <param name="left">X\-coordinate of the image
                               rectangle. </param>
            <param name="top">Y\-coordinate of the image
                              rectangle. </param>
            <returns>
            A NImage object.
            </returns>
            <remarks>
            If stride is zero then image stride is automatically
            calculated. For more information on image stride see Stride
            property.
            
            Format of memory block srcPixels points to must be the same
            as described in Pixels property, only stride is equal to
            srcStride.
            
            <i>horzResolution</i> and <i>vertResolution</i> can be zero
            if resolution is not applicable for the image. 
            </remarks>
        </member>
        <member name="M:Neurotec.Images.NImage.FromData(Neurotec.Images.NPixelFormat,System.UInt32,System.UInt32,System.UInt64,System.Single,System.Single,System.UInt64,System.IntPtr,System.UInt32,System.UInt32)">
            <summary>
            Creates NImage object from data with specified resolution.
            </summary>
            <param name="pixelFormat">A NPixelFormat of image.</param>
            <param name="width">A width of image.</param>
            <param name="height">A height of image.</param>
            <param name="stride">A stride of image.</param>
            <param name="horzResolution">A horizontal resolution in
                                         pixels per inch of image.</param>
            <param name="vertResolution">A vertical resolution in pixels
                                         per inch of image.</param>
            <param name="srcStride">A stride of source image.</param>
            <param name="pSrcPixels">A pointer to source pixel
                                    array.</param>
            <param name="left">X\-coordinate of the image
                               rectangle. </param>
            <param name="top">Y\-coordinate of the image
                              rectangle. </param>
            <returns>
            A NImage object.
            </returns>
            <remarks>
            If stride is zero then image stride is automatically
            calculated. For more information on image stride see Stride
            property.
            
            Format of memory block srcPixels points to must be the same
            as described in Pixels property, only stride is equal to
            srcStride.
            
            <i>horzResolution</i> and <i>vertResolution</i> can be zero
            if resolution is not applicable for the image. 
            </remarks>
        </member>
        <member name="M:Neurotec.Images.NImage.FromData(Neurotec.Images.NPixelFormat,System.UInt32,System.UInt32,System.UInt64,System.Single,System.Single,System.UInt64,Neurotec.IO.NBuffer,System.UInt32,System.UInt32)">
            <summary>
            Creates NImage object from data with specified resolution.
            </summary>
            <param name="pixelFormat">A NPixelFormat of image.</param>
            <param name="width">A width of image.</param>
            <param name="height">A height of image.</param>
            <param name="stride">A stride of image.</param>
            <param name="horzResolution">A horizontal resolution in pixels per inch of image.</param>
            <param name="vertResolution">A vertical resolution in pixels per inch of image.</param>
            <param name="srcStride">A stride of source image.</param>
            <param name="srcPixels">NBuffer containing source pixels.</param>
            <param name="left">X-coordinate of the image rectangle.</param>
            <param name="top">Y-coordinate of the image rectangle.</param>
            <returns></returns>
        </member>
        <member name="M:Neurotec.Images.NImage.FromData(Neurotec.Images.NPixelFormat,System.Int32,System.UInt32,System.UInt32,System.Int32,Neurotec.IO.NBuffer,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Creates NImage object from data with specified parameters.
            </summary>
            <param name="pixelFormat">A NPixelFormat of image.</param>
            <param name="stride">A stride of image.</param>
            <param name="srcWidth">A width of source image.</param>
            <param name="srcHeight">A height o sourcef image.</param>
            <param name="srcStride">A stride of source image.</param>
            <param name="srcPixels">Source image pixel array.</param>
            <param name="left">X coordinate of the image.</param>
            <param name="top">Y coordinate of the image.</param>
            <param name="width">Specifies width of the image. </param>
            <param name="height">Specifies height of the image.</param>
            <returns>
            A NImage object.
            </returns>
            <remarks>
            If stride is zero then image stride is automatically
            calculated. For more information on image stride see Stride
            property.
            
            Format of memory block srcPixels points to must be the same
            as described in Pixels property, only stride is equal to
            srcStride. 
            </remarks>
        </member>
        <member name="M:Neurotec.Images.NImage.FromData(Neurotec.Images.NPixelFormat,System.Int64,System.UInt32,System.UInt32,System.Int64,Neurotec.IO.NBuffer,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Creates NImage object from data with specified parameters.
            </summary>
            <param name="pixelFormat">A NPixelFormat of image.</param>
            <param name="stride">A stride of image.</param>
            <param name="srcWidth">A width of source image.</param>
            <param name="srcHeight">A height of source image.</param>
            <param name="srcStride">A stride of source image.</param>
            <param name="srcPixels">Source image pixel array.</param>
            <param name="left">X coordinate of the image.</param>
            <param name="top">Y coordinate of the image.</param>
            <param name="width">Specifies width of the image. </param>
            <param name="height">Specifies height of the image.</param>
            <param name="flags">Flags controlling NImage creation.
                                These flags can be used\:
                                FlagSrcAlphaChannelFirst,
                                FlagSrcBottomToTop,
                                FlagSrcSwapChannels.</param>
            <returns>
            A NImage object.
            </returns>
            <remarks>
            If stride is zero then image stride is automatically
            calculated. For more information on image stride see Stride
            property.
            
            Format of memory block srcPixels points to must be the same
            as described in Pixels property, only stride is equal to
            srcStride. 
            </remarks>
        </member>
        <member name="M:Neurotec.Images.NImage.FromData(Neurotec.Images.NPixelFormat,System.Int64,System.UInt32,System.UInt32,System.Int64,Neurotec.IO.NBuffer[],System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Creates NImage object from data with specified parameters.
            </summary>
            <param name="pixelFormat">A NPixelFormat of image.</param>
            <param name="stride">A stride of image.</param>
            <param name="srcWidth">A width of source image.</param>
            <param name="srcHeight">A height of source image.</param>
            <param name="srcStride">A stride of source image.</param>
            <param name="srcPlanes">NBuffer containing source planes.</param>
            <param name="srcLeft">X coordinate of the image.</param>
            <param name="srcTop">Y coordinate of the image.</param>
            <param name="width">Specifies width of the image.</param>
            <param name="height">Specifies height of the image.</param>
            <param name="flags">Flags controlling NImage creation.
                                These flags can be used\:
                                FlagSrcAlphaChannelFirst,
                                FlagSrcBottomToTop,
                                FlagSrcSwapChannels.</param>
            <returns></returns>
        </member>
        <member name="M:Neurotec.Images.NImage.FromImage(Neurotec.Images.NPixelFormat,System.UInt32,System.Single,System.Single,Neurotec.Images.NImage)">
            <summary>
            Creates NImage object from another NImage object.
            </summary>
            <param name="pixelFormat">A NPixelFormat of image.</param>
            <param name="stride">A stride of image.</param>
            <param name="horzResolution">A horizontal resolution in
                                         pixels per inch of image.</param>
            <param name="vertResolution">A vertical resolution in pixels
                                         per inch of image.</param>
            <param name="srcImage">A NImage source object.</param>
            <returns>
            A NImage object.
            </returns>
            <remarks>
            If stride is zero then image stride is automatically
            calculated. For more information on image stride see Stride
            property.
            
            horzResolution and vertResolution can be zero if resolution
            is not applicable for the image.
            
            
            </remarks>
        </member>
        <member name="M:Neurotec.Images.NImage.FromImage(Neurotec.Images.NPixelFormat,System.UInt64,System.Single,System.Single,Neurotec.Images.NImage)">
            <summary>
            Creates NImage object from another NImage object.
            </summary>
            <param name="pixelFormat">A NPixelFormat of image.</param>
            <param name="stride">A stride of image.</param>
            <param name="horzResolution">A horizontal resolution in
                                         pixels per inch of image.</param>
            <param name="vertResolution">A vertical resolution in pixels
                                         per inch of image.</param>
            <param name="srcImage">A NImage source object.</param>
            <returns>
            A NImage object.
            </returns>
            <remarks>
            If stride is zero then image stride is automatically
            calculated. For more information on image stride see Stride
            property.
            
            horzResolution and vertResolution can be zero if resolution
            is not applicable for the image.
            
            
            </remarks>
        </member>
        <member name="M:Neurotec.Images.NImage.FromImage(Neurotec.Images.NPixelFormat,System.Int32,Neurotec.Images.NImage)">
            <summary>
            Creates NImage object from another NImage object.
            </summary>
            <param name="pixelFormat">A NPixelFormat of image.</param>
            <param name="stride">A stride of image.</param>
            <param name="srcImage">A NImage source object.</param>
            <returns>
            A NImage object.
            </returns>
            <remarks>
            If stride is zero then image stride is automatically
            calculated. For more information on image stride see Stride
            property. 
            </remarks>
        </member>
        <member name="M:Neurotec.Images.NImage.FromImage(Neurotec.Images.NPixelFormat,System.Int64,Neurotec.Images.NImage,System.UInt32)">
            <summary>
            Creates NImage object from another NImage object.
            </summary>
            <param name="pixelFormat">A NPixelFormat of image.</param>
            <param name="stride">A stride of image.</param>
            <param name="srcImage">A NImage source object.</param>
            <param name="flags">Flags controlling method. Reserved
                                for future use. Must be 0.</param>
            <returns>
            A NImage object.
            </returns>
            <remarks>
            If stride is zero then image stride is automatically
            calculated. For more information on image stride see Stride
            property. 
            </remarks>
        </member>
        <member name="M:Neurotec.Images.NImage.FromImage(Neurotec.Images.NPixelFormat,System.UInt32,System.Single,System.Single,Neurotec.Images.NImage,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Creates NImage object from another NImage object.
            </summary>
            <param name="pixelFormat">A NPixelFormat of image.</param>
            <param name="stride">A stride of image.</param>
            <param name="horzResolution">A horizontal resolution in
                                         pixels per inch of image.</param>
            <param name="vertResolution">A vertical resolution in pixels
                                         per inch of image.</param>
            <param name="srcImage">A NImage source object.</param>
            <param name="left">X\-coordinate of the image
                               rectangle. </param>
            <param name="top">Y\-coordinate of the image
                              rectangle. </param>
            <param name="width">A width of image.</param>
            <param name="height">A height of image.</param>
            <returns>
            A NImage object.
            </returns>
            <remarks>
            If stride is zero then image stride is automatically
            calculated. For more information on image stride see Stride
            property. 
            </remarks>                                                    
        </member>
        <member name="M:Neurotec.Images.NImage.FromImage(Neurotec.Images.NPixelFormat,System.UInt64,System.Single,System.Single,Neurotec.Images.NImage,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Creates NImage object from another NImage object.
            </summary>
            <param name="pixelFormat">A NPixelFormat of image.</param>
            <param name="stride">A stride of image.</param>
            <param name="horzResolution">A horizontal resolution in
                                         pixels per inch of image.</param>
            <param name="vertResolution">A vertical resolution in pixels
                                         per inch of image.</param>
            <param name="srcImage">A NImage source object.</param>
            <param name="left">X\-coordinate of the image
                               rectangle. </param>
            <param name="top">Y\-coordinate of the image
                              rectangle. </param>
            <param name="width">A width of image.</param>
            <param name="height">A height of image.</param>
            <returns>
            A NImage object.
            </returns>
            <remarks>
            If stride is zero then image stride is automatically
            calculated. For more information on image stride see Stride
            property. 
            </remarks>                                                    
        </member>
        <member name="M:Neurotec.Images.NImage.FromImage(Neurotec.Images.NPixelFormat,System.Int32,Neurotec.Images.NImage,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Creates NImage object from another NImage object.
            </summary>
            <param name="pixelFormat">A NPixelFormat of image.</param>
            <param name="stride">A stride of image.</param>
            <param name="srcImage">A NImage source object.</param>
            <param name="left">X\-coordinate of the image
                               rectangle. </param>
            <param name="top">Y\-coordinate of the image
                              rectangle. </param>
            <param name="width">A width of image.</param>
            <param name="height">A height of image.</param>
            <returns>
            A NImage object.
            </returns>
            <remarks>
            If stride is zero then image stride is automatically
            calculated. For more information on image stride see Stride
            property. 
            </remarks>
        </member>
        <member name="M:Neurotec.Images.NImage.FromImage(Neurotec.Images.NPixelFormat,System.Int64,Neurotec.Images.NImage,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Creates NImage object from another NImage object.
            </summary>
            <param name="pixelFormat">A NPixelFormat of image.</param>
            <param name="stride">A stride of image.</param>
            <param name="srcImage">A NImage source object.</param>
            <param name="left">X\-coordinate of the image
                               rectangle. </param>
            <param name="top">Y\-coordinate of the image
                              rectangle. </param>
            <param name="width">A width of image.</param>
            <param name="height">A height of image.</param>
            <param name="flags">Flags controlling method. Reserved
                                for future use. Must be 0.</param>
            <returns>
            A NImage object.
            </returns>
            <remarks>
            If stride is zero then image stride is automatically
            calculated. For more information on image stride see Stride
            property. 
            </remarks>
        </member>
        <member name="M:Neurotec.Images.NImage.FromFile(System.String)">
            <summary>
            Creates NImage object from file.
            </summary>
            <param name="fileName">A string that contains the name of
                                   the file.</param>
            <returns>
            A NImage object. 
            </returns>
        </member>
        <member name="M:Neurotec.Images.NImage.FromFile(System.String,Neurotec.Images.NImageFormat)">
            <summary>
            Creates NImage object from file with specified NImageFormat.
            </summary>
            <param name="fileName">A string that contains the name of
                                   the file.</param>
            <param name="imageFormat">An image NImageFormat object.</param>
            <returns>
            A NImage object. 
            </returns>                                                     
        </member>
        <member name="M:Neurotec.Images.NImage.FromFile(System.String,Neurotec.Images.NImageFormat,System.UInt32)">
            <summary>
            Creates NImage object from file with specified NImageFormat.
            </summary>
            <param name="fileName">A string that contains the name of
                                   the file.</param>
            <param name="imageFormat">An image NImageFormat object.</param>
            <param name="flags">Flags controlling method. Reserved
                                for future use. Must be 0. </param>
            <returns>
            A NImage object. 
            </returns>                                                     
        </member>
        <member name="M:Neurotec.Images.NImage.FromFile(System.String,Neurotec.Images.NImageInfo@)">
            <summary>
            Creates NImage object from file with specified NImageFormat.
            </summary>
            <param name="fileName">A string that contains the name of the
                                   \file.</param>
            <param name="info">[out] NImageInfo object.</param>
            <returns>
            A NImage object. 
            </returns>                                                   
        </member>
        <member name="M:Neurotec.Images.NImage.FromFile(System.String,Neurotec.Images.NImageFormat,Neurotec.Images.NImageInfo@)">
            <summary>
            Creates NImage object from file with specified NImageFormat.
            </summary>
            <param name="fileName">A string that contains the name of
                                   the file.</param>
            <param name="imageFormat">An image NImageFormat object.</param>
            <param name="info">[out] NImageInfo object.</param>
            <returns>
            A NImage object. 
            </returns>                                                     
        </member>
        <member name="M:Neurotec.Images.NImage.FromFile(System.String,Neurotec.Images.NImageFormat,System.UInt32,Neurotec.Images.NImageInfo@)">
            <summary>
            Creates NImage object from file with specified NImageFormat.
            </summary>
            <param name="fileName">A string that contains the name of
                                   the file.</param>
            <param name="imageFormat">An image NImageFormat object.</param>
            <param name="flags">Flags controlling method. Reserved
                                for future use. Must be 0. </param>
            <param name="info">[out] NImageInfo object.</param>
            <returns>
            A NImage object. 
            </returns>                                                     
        </member>
        <member name="M:Neurotec.Images.NImage.FromMemory(System.Byte[])">
            <summary>
            Creates NImage object from a byte array.
            </summary>
            <param name="buffer">The source byte array.</param>
            <returns>
            Created NImage object.
            </returns>                                         
        </member>
        <member name="M:Neurotec.Images.NImage.FromMemory(System.Byte[],Neurotec.Images.NImageFormat)">
            <summary>
            Creates NImage object from a byte array.
            </summary>
            <param name="buffer">The source byte array.</param>
            <param name="format">Image format.</param>
            <returns>
            Created NImage object. 
            </returns>                                         
        </member>
        <member name="M:Neurotec.Images.NImage.FromMemory(System.Byte[],Neurotec.Images.NImageInfo@)">
            <summary>
            Creates NImage object from a byte array.
            </summary>
            <param name="buffer">The source byte array.</param>
            <param name="info">[out] NImageInfo object.</param>
            <returns>
            Created NImage object. 
            </returns>                                         
        </member>
        <member name="M:Neurotec.Images.NImage.FromMemory(System.Byte[],Neurotec.Images.NImageFormat,Neurotec.Images.NImageInfo@)">
            <summary>
            Creates NImage object from a byte array.
            </summary>
            <param name="buffer">The source byte array.</param>
            <param name="format">Image format.</param>
            <param name="info">[out] NImageInfo object.</param>
            <returns>
            Created NImage object. 
            </returns>                                         
        </member>
        <member name="M:Neurotec.Images.NImage.FromMemory(Neurotec.IO.NBuffer)">
            <summary>
            Creates NImage object from another memory buffer.
            </summary>
            <param name="buffer">Memory buffer containing NImage data.</param>
            <returns>
            Created NImage object.
            </returns>                                                        
        </member>
        <member name="M:Neurotec.Images.NImage.FromMemory(Neurotec.IO.NBuffer,Neurotec.Images.NImageFormat)">
            <summary>
            Creates NImage object from another memory buffer.
            </summary>
            <param name="buffer">Memory buffer containing NImage
                                 data.</param>
            <param name="imageFormat">Image format.</param>
            <returns>
            Created NImage object.
            </returns>                                          
        </member>
        <member name="M:Neurotec.Images.NImage.FromMemory(Neurotec.IO.NBuffer,Neurotec.Images.NImageFormat,System.UInt32)">
            <summary>
            Creates NImage object from another memory buffer.
            </summary>
            <param name="buffer">Memory buffer containing NImage
                                 data.</param>
            <param name="imageFormat">Image format.</param>
            <param name="flags">Flags controlling method. Reserved
                                for future use. Must be 0. </param>
            <returns>
            Created NImage object. 
            </returns>                                             
        </member>
        <member name="M:Neurotec.Images.NImage.FromMemory(Neurotec.IO.NBuffer,Neurotec.Images.NImageInfo@)">
            <summary>
            Creates NImage object from another memory buffer.
            </summary>
            <param name="buffer">Memory buffer containing NImage data.</param>
            <param name="info">[out] NImageInfo object.</param>
            <returns>
            Created NImage object. 
            </returns>                                                        
        </member>
        <member name="M:Neurotec.Images.NImage.FromMemory(Neurotec.IO.NBuffer,Neurotec.Images.NImageFormat,Neurotec.Images.NImageInfo@)">
            <summary>
            Creates NImage object from another memory buffer.
            </summary>
            <param name="buffer">Memory buffer containing NImage
                                 data.</param>
            <param name="imageFormat">Image format.</param>
            <param name="info">[out] NImageInfo object.</param>
            <returns>
            Created NImage object. 
            </returns>                                          
        </member>
        <member name="M:Neurotec.Images.NImage.FromMemory(Neurotec.IO.NBuffer,Neurotec.Images.NImageFormat,System.UInt32,System.Int32@,Neurotec.Images.NImageInfo@)">
            <summary>
            Creates NImage object from another memory buffer.
            </summary>
            <param name="buffer">Memory buffer containing NImage
                                 data.</param>
            <param name="imageFormat">Image format.</param>
            <param name="flags">Flags controlling method. Reserved
                                for future use. Must be 0. </param>
            <param name="size">[out] The size of actually read
                               bytes from memory buffer (bytes).</param>
            <param name="info">[out] NImageInfo object.</param>
            <returns>
            Created NImage object. 
            </returns>                                                  
        </member>
        <member name="M:Neurotec.Images.NImage.FromMemory(Neurotec.IO.NBuffer,Neurotec.Images.NImageFormat,System.UInt32,Neurotec.Images.NImageInfo@)">
            <summary>
            Creates NImage object from another memory buffer.
            </summary>
            <param name="buffer">Memory buffer containing NImage
                                 data.</param>
            <param name="imageFormat">Image format.</param>
            <param name="flags">Flags controlling method. Reserved
                                for future use. Must be 0. </param>
            <param name="info">[out] NImageInfo object.</param>
            <returns>
            Created NImage object. 
            </returns>                                             
        </member>
        <member name="M:Neurotec.Images.NImage.FromStream(System.IO.Stream)">
            <summary>
            Reads NImage from the specified stream
            </summary>
            <param name="stream">Stream which contains NImage data.</param>
            <returns>
            NImage object. 
            </returns>                                                     
        </member>
        <member name="M:Neurotec.Images.NImage.FromStream(System.IO.Stream,Neurotec.Images.NImageFormat)">
            <summary>
            Reads NImage from the specified stream with specified image
            format.
            </summary>
            <param name="stream">Stream which contains NImage data.</param>
            <param name="imageFormat">Image format.</param>
            <returns>
            NImage object. 
            </returns>                                                     
        </member>
        <member name="M:Neurotec.Images.NImage.FromStream(System.IO.Stream,Neurotec.Images.NImageFormat,System.UInt32)">
            <summary>
            Reads NImage from the specified stream with specified image
            format.
            </summary>
            <param name="stream">Stream which contains NImage data.</param>
            <param name="imageFormat">Image format.</param>
            <param name="flags">Flags controlling method. Reserved
                                for future use. Must be 0. </param>
            <returns>
            NImage object. 
            </returns>                                                     
        </member>
        <member name="M:Neurotec.Images.NImage.FromStream(System.IO.Stream,Neurotec.Images.NImageInfo@)">
            <summary>
            Reads NImage from the specified stream with specified image
            format.
            </summary>
            <param name="stream">Stream which contains NImage data.</param>
            <param name="info">[out] NImageInfo object.</param>
            <returns>
            NImage object. 
            </returns>
        </member>
        <member name="M:Neurotec.Images.NImage.FromStream(System.IO.Stream,Neurotec.Images.NImageFormat,Neurotec.Images.NImageInfo@)">
            <summary>
            Reads NImage from the specified stream with specified image
            format.
            </summary>
            <param name="stream">Stream which contains NImage data.</param>
            <param name="imageFormat">Image format.</param>
            <param name="info">[out] NImageInfo object.</param>
            <returns>
            NImage object. 
            </returns>
        </member>
        <member name="M:Neurotec.Images.NImage.FromStream(System.IO.Stream,Neurotec.Images.NImageFormat,System.UInt32,Neurotec.Images.NImageInfo@)">
            <summary>
            Reads NImage from the specified stream with specified image
            format.
            </summary>
            <param name="stream">Stream which contains NImage data.</param>
            <param name="imageFormat">Image format.</param>
            <param name="flags">Flags controlling method. Reserved
                                for future use. Must be 0. </param>
            <param name="info">[out] NImageInfo object.</param>
            <returns>
            NImage object. 
            </returns>
        </member>
        <member name="M:Neurotec.Images.NImage.FromHBitmap(System.IntPtr)">
            <summary>
            Creates NImage object from handle.
            </summary>
            <param name="hBitmap">A pointer to handle.</param>
            <returns>
            A NImage object. 
            </returns>
        </member>
        <member name="M:Neurotec.Images.NImage.FromHBitmap(System.IntPtr,System.UInt32)">
            <summary>
            Creates NImage object from handle.
            </summary>
            <param name="hBitmap">A pointer to handle.</param>
            <param name="flags">Flags controlling method. Reserved for
                                future use. Must be 0. </param>
            <returns>
            A NImage object. 
            </returns>
        </member>
        <member name="M:Neurotec.Images.NImage.FromBitmap(System.Drawing.Bitmap)">
            <summary>
            Creates NImage from Bitmap.
            </summary>
            <param name="bitmap">An object used to work with images
                                 defined by pixel data.</param>
            <returns>
            A NImage object. 
            </returns>                                             
        </member>
        <member name="M:Neurotec.Images.NImage.FromBitmap(System.Drawing.Bitmap,System.UInt32)">
            <summary>
            Creates NImage from Bitmap.
            </summary>
            <param name="bitmap">An object used to work with images defined by pixel data.</param>
            <param name="flags">Flags controlling object creation. See section &quot;Fileds&quot; for the list
                                of available to use flags.</param>
            <returns>
            A NImage object. 
            </returns>                                                                                        
        </member>
        <member name="M:Neurotec.Images.NImage.Copy(Neurotec.Images.NPixelFormat,System.Array,System.Array,Neurotec.IO.NBuffer,System.Int32,System.UInt32,System.UInt32,System.Int64,Neurotec.IO.NBuffer[],System.UInt32,System.UInt32,Neurotec.Images.NPixelFormat,System.Array,System.Array,Neurotec.IO.NBuffer,System.Int32,System.UInt32,System.UInt32,System.Int64,Neurotec.IO.NBuffer[],System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Copies planes from one memory buffer to another.
            </summary>
            <param name="srcPixelFormat">The source pixel format.</param>
            <param name="srcMinValue">Minimum source pixel values.</param>
            <param name="srcMaxValue">Maximum source pixel values.</param>
            <param name="srcPalette">Source image palette.</param>
            <param name="srcPaletteLength">Source image palette length.</param>
            <param name="srcWidth">The width of the source image data.</param>
            <param name="srcHeight">The height of the source image data.</param>
            <param name="srcStride">The stride of the source image data.</param>
            <param name="srcPlanes">The source memory block.</param>
            <param name="srcLeft">The left coordinate of the source image data.</param>
            <param name="srcTop">The top coordinate of the source image data.</param>
            <param name="dstPixelFormat">The destination pixel format.</param>
            <param name="dstMinValue">Minimum destination pixel values.</param>
            <param name="dstMaxValue">Maximum destination pixel values.</param>
            <param name="dstPalette">Destination image palette.</param>
            <param name="dstPaletteLength">Destination image palette length.</param>
            <param name="dstWidth">The width of the destination image data.</param>
            <param name="dstHeight">The height of the destination image data.</param>
            <param name="dstStride">The stride of the destination image data.</param>
            <param name="dstPlanes">The destination memory block.</param>
            <param name="dstLeft">The left coordinate of the destination image data.</param>
            <param name="dstTop">The top coordinate of the destination image data.</param>
            <param name="width">Image width.</param>
            <param name="height">Image height.</param>
            <param name="flags">Flags controlling function. These flags can be used: NI_DST_ALPHA_CHANNEL_FIRST, NI_DST_BOTTOM_TO_TOP, NI_DST_SWAP_CHANNELS.</param>
        </member>
        <member name="M:Neurotec.Images.NImage.Copy(Neurotec.Images.NPixelFormat,System.UInt32,System.UInt32,System.Int64,Neurotec.IO.NBuffer[],System.UInt32,System.UInt32,Neurotec.Images.NPixelFormat,System.UInt32,System.UInt32,System.Int64,Neurotec.IO.NBuffer[],System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Copies planes from one memory buffer to another.
            </summary>
            <param name="srcPixelFormat">The source pixel format.</param>
            <param name="srcWidth">The width of the source image data.</param>
            <param name="srcHeight">The height of the source image data.</param>
            <param name="srcStride">The stride of the source image data.</param>
            <param name="srcPlanes">Source memory block.</param>
            <param name="srcLeft">The left coordinate of the source image data.</param>
            <param name="srcTop">The top coordinate of the source image data.</param>
            <param name="dstPixelFormat">The destination pixel format.</param>
            <param name="dstWidth">The width of the destination image data.</param>
            <param name="dstHeight">The height of the destination image data.</param>
            <param name="dstStride">The stride of the destination image data.</param>
            <param name="dstPlanes">Destination memory block.</param>
            <param name="dstLeft">The left coordinate of the destination image data.</param>
            <param name="dstTop">The top coordinate of the destination image data.</param>
            <param name="width">Image width.</param>
            <param name="height">Image height.</param>
            <param name="flags">Flags controlling function. These flags can be used: NI_DST_ALPHA_CHANNEL_FIRST, NI_DST_BOTTOM_TO_TOP, NI_DST_SWAP_CHANNELS.</param>
        </member>
        <member name="M:Neurotec.Images.NImage.Copy(Neurotec.Images.NPixelFormat,System.UInt32,System.UInt32,System.Int64,Neurotec.IO.NBuffer,System.UInt32,System.UInt32,Neurotec.Images.NPixelFormat,System.UInt32,System.UInt32,System.Int64,Neurotec.IO.NBuffer,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Copies pixels from one memory buffer to another.
            </summary>
            <param name="srcPixelFormat">The source pixel format.</param>
            <param name="srcWidth">The width of the source image data.</param>
            <param name="srcHeight">The height of the source image data.</param>
            <param name="srcStride">The stride of the source image data.</param>
            <param name="srcPixels">Source memory block.</param>
            <param name="srcLeft">The left coordinate of the source image data.</param>
            <param name="srcTop">The top coordinate of the source image data.</param>
            <param name="dstPixelFormat">The destination pixel format.</param>
            <param name="dstWidth">The width of the destination image data.</param>
            <param name="dstHeight">The height of the destination image data.</param>
            <param name="dstStride">The stride of the destination image data.</param>
            <param name="dstPixels">Destination memory block.</param>
            <param name="dstLeft">The left coordinate of the destination image data.</param>
            <param name="dstTop">The top coordinate of the destination image data.</param>
            <param name="width">Image width.</param>
            <param name="height">Image height.</param>
            <param name="flags">Flags controlling function. These flags can be used: NI_DST_ALPHA_CHANNEL_FIRST, NI_DST_BOTTOM_TO_TOP, NI_DST_SWAP_CHANNELS.</param>
        </member>
        <member name="M:Neurotec.Images.NImage.Copy(Neurotec.Images.NPixelFormat,System.UInt32,System.UInt32,System.Int32,Neurotec.IO.NBuffer,System.UInt32,System.UInt32,Neurotec.Images.NPixelFormat,System.UInt32,System.UInt32,System.Int32,Neurotec.IO.NBuffer,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Copies pixels from one memory buffer to another.
            </summary>
            <param name="srcPixelFormat">The source pixel format.</param>
            <param name="srcWidth">The width of the source image data.</param>
            <param name="srcHeight">The height of the source image data.</param>
            <param name="srcStride">The stride of the source image data.</param>
            <param name="srcPixels">Source memory block.</param>
            <param name="srcLeft">The left coordinate of the source image data.</param>
            <param name="srcTop">The top coordinate of the source image data.</param>
            <param name="dstPixelFormat">The destination pixel format.</param>
            <param name="dstWidth">The width of the destination image data.</param>
            <param name="dstHeight">The height of the destination image data.</param>
            <param name="dstStride">The stride of the destination image data.</param>
            <param name="dstPixels">Destination memory block.</param>
            <param name="dstLeft">The left coordinate of the destination image data.</param>
            <param name="dstTop">The top coordinate of the destination image data.</param>
            <param name="width">Image width.</param>
            <param name="height">Image height.</param>
        </member>
        <member name="M:Neurotec.Images.NImage.Copy(Neurotec.Images.NImage,System.UInt32,System.UInt32,System.UInt32,System.UInt32,Neurotec.Images.NImage,System.UInt32,System.UInt32)">
            <summary>
            Copies specified rectangular area of the NImage to other
            NImage object.
            </summary>
            <param name="srcImage">NImage object to copy.</param>
            <param name="left">The x coordinate of source rectangle.</param>
            <param name="top">The y coordinate of source rectangle.</param>
            <param name="width">The width of source rectangle.</param>
            <param name="height">The height of source rectangle.</param>
            <param name="dstImage">A destination NImage object.
                                   Specified rectangular area will be
                                   copied to this object. </param>
            <param name="dstLeft">The x coordinate in the destination
                                  NImage object. Copied NImage will be
                                  placed starting by this coordinate.</param>
            <param name="dstTop">The y coordinate in the destination
                                 NImage object. Copied NImage will be
                                 placed starting by this coordinate.</param>
            <exception cref="T:System.ArgumentNullException">srcImage or dstImage
                                                    has null value.</exception>
        </member>
        <member name="M:Neurotec.Images.NImage.CopyFrom(Neurotec.Images.NPixelFormat,System.UInt32,System.UInt32,System.Int32,Neurotec.IO.NBuffer,System.UInt32,System.UInt32)">
            <summary>
            Copies pixels to from memory buffer.
            </summary>
            <param name="srcPixelFormat">The source pixel format.</param>
            <param name="srcWidth">The width of the source image data.</param>
            <param name="srcHeight">The height of the source image data.</param>
            <param name="srcStride">The stride of the source image data.</param>
            <param name="srcPixels">The source memory block.</param>
            <param name="left">The left coordinate of the image data.</param>
            <param name="top">The top coordinate of the image data.</param>
        </member>
        <member name="M:Neurotec.Images.NImage.CopyFrom(Neurotec.Images.NPixelFormat,System.UInt32,System.UInt32,System.Int64,Neurotec.IO.NBuffer,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Copies pixels to from memory buffer.
            </summary>
            <param name="srcPixelFormat">The source pixel format.</param>
            <param name="srcWidth">The width of the source image data.</param>
            <param name="srcHeight">The height of the source image data.</param>
            <param name="srcStride">The stride of the source image data.</param>
            <param name="srcPixels">The source memory block.</param>
            <param name="left">The left coordinate of the image data.</param>
            <param name="top">The top coordinate of the image data.</param>
            <param name="flags">Flags controlling function. These flags can be used: NI_DST_ALPHA_CHANNEL_FIRST, NI_DST_BOTTOM_TO_TOP, NI_DST_SWAP_CHANNELS.</param>
        </member>
        <member name="M:Neurotec.Images.NImage.CopyFrom(Neurotec.Images.NPixelFormat,System.UInt32,System.UInt32,System.Int64,Neurotec.IO.NBuffer,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Copies pixels to from memory buffer.
            </summary>
            <param name="srcPixelFormat">The source pixel format.</param>
            <param name="srcWidth">The width of the source image data.</param>
            <param name="srcHeight">The height of the source image data.</param>
            <param name="srcStride">The stride of the source image data.</param>
            <param name="srcPixels">The source memory block.</param>
            <param name="srcLeft">The left coordiante of the source image data.</param>
            <param name="srcTop">The top coordiante of the source image data.</param>
            <param name="left">The left coordinate of the image.</param>
            <param name="top">The top coordinate of the image.</param>
            <param name="width">The width of the image.</param>
            <param name="height">The height of the image.</param>
            <param name="flags">Flags controlling function. These flags can be used: NI_DST_ALPHA_CHANNEL_FIRST, NI_DST_BOTTOM_TO_TOP, NI_DST_SWAP_CHANNELS.</param>
        </member>
        <member name="M:Neurotec.Images.NImage.CopyFrom(Neurotec.Images.NPixelFormat,System.UInt32,System.UInt32,System.Int64,Neurotec.IO.NBuffer[],System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Copies planes to from memory buffer.
            </summary>
            <param name="srcPixelFormat">The source pixel format.</param>
            <param name="srcWidth">The width of the source image data.</param>
            <param name="srcHeight">The height of the source image data.</param>
            <param name="srcStride">The stride of the source image data.</param>
            <param name="srcPlanes">The source memory block.</param>
            <param name="srcLeft">The left coordiante of the source image data.</param>
            <param name="srcTop">The top coordiante of the source image data.</param>
            <param name="left">The left coordinate of the image.</param>
            <param name="top">The top coordinate of the image.</param>
            <param name="width">The width of the image.</param>
            <param name="height">The height of the image.</param>
            <param name="flags">Flags controlling function. These flags can be used: NI_DST_ALPHA_CHANNEL_FIRST, NI_DST_BOTTOM_TO_TOP, NI_DST_SWAP_CHANNELS.</param>
        </member>
        <member name="M:Neurotec.Images.NImage.CopyFrom(Neurotec.Images.NPixelFormat,System.Array,System.Array,Neurotec.IO.NBuffer,System.Int32,System.UInt32,System.UInt32,System.Int64,Neurotec.IO.NBuffer[],System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Copies planes from memory buffer.
            </summary>
            <param name="srcPixelFormat">The source pixel format.</param>
            <param name="srcMinValue">Minimum source pixel values.</param>
            <param name="srcMaxValue">Maximum source pixel values.</param>
            <param name="srcPalette">Source image palette.</param>
            <param name="srcPaletteLength">Source image palette length.</param>
            <param name="srcWidth">The width of the source image data.</param>
            <param name="srcHeight">The height of the source image data.</param>
            <param name="srcStride">The stride of the source image data.</param>
            <param name="srcPlanes">The source memory block.</param>
            <param name="srcLeft">The left coordiante of the source image data.</param>
            <param name="srcTop">The top coordiante of the source image data.</param>
            <param name="left">The left coordinate of the image.</param>
            <param name="top">The top coordinate of the image.</param>
            <param name="width">The width of the image.</param>
            <param name="height">The height of the image.</param>
            <param name="flags">Flags controlling function. These flags can be used: NI_DST_ALPHA_CHANNEL_FIRST, NI_DST_BOTTOM_TO_TOP, NI_DST_SWAP_CHANNELS.</param>
        </member>
        <member name="M:Neurotec.Images.NImage.CopyTo(Neurotec.Images.NPixelFormat,System.UInt32,System.UInt32,System.Int32,Neurotec.IO.NBuffer,System.UInt32,System.UInt32)">
            <summary>
            Copies specified rectangular area of the NImage to other
            NImage object.
            </summary>
            <param name="dstPixelFormat">Destination pixel format.</param>
            <param name="dstWidth">The width of source image data.</param>
            <param name="dstHeight">The height of source image
                                    data.</param>
            <param name="dstStride">The stride of source image
                                    data.</param>
            <param name="dstPixels">Memory buffer where Nimage data
                                    is saved. </param>
            <param name="dstLeft">The x coordinate in the
                                  destination NImage object.
                                  Copied NImage will be placed
                                  starting by this coordinate.</param>
            <param name="dstTop">The y coordinate in the
                                 destination NImage object.
                                 Copied NImage will be placed
                                 starting by this coordinate.</param>     
        </member>
        <member name="M:Neurotec.Images.NImage.CopyTo(Neurotec.Images.NPixelFormat,System.UInt32,System.UInt32,System.Int64,Neurotec.IO.NBuffer,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Copies specified rectangular area of the NImage to other
            NImage object.
            </summary>
            <param name="dstPixelFormat">Destination pixel format.</param>
            <param name="dstWidth">The width of source image data.</param>
            <param name="dstHeight">The height of source image
                                    data.</param>
            <param name="dstStride">The stride of source image
                                    data.</param>
            <param name="dstPixels">Memory buffer where Nimage data
                                    is saved. </param>
            <param name="dstLeft">The x coordinate in the
                                  destination NImage object.
                                  Copied NImage will be placed
                                  starting by this coordinate.</param>
            <param name="dstTop">The y coordinate in the
                                 destination NImage object.
                                 Copied NImage will be placed
                                 starting by this coordinate.</param>
            <param name="flags">Flags controlling this method.
                                These flags can be used\:
                                FlagDstAlphaChannelFirst,
                                FlagDstBottomToTop,
                                FlagDstSwapChannels.</param>
        </member>
        <member name="M:Neurotec.Images.NImage.CopyTo(System.UInt32,System.UInt32,Neurotec.Images.NPixelFormat,System.UInt32,System.UInt32,System.Int64,Neurotec.IO.NBuffer,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Copies part of pixels of specified NImage to memory buffer.
            </summary>
            <param name="left">Left coordinate of the image part.</param>
            <param name="top">Top coordinate of the image part.</param>
            <param name="dstPixelFormat">Destination pixel format.</param>
            <param name="dstWidth">The width of source image data.</param>
            <param name="dstHeight">The height of source image data.</param>
            <param name="dstStride">The stride of source image data.</param>
            <param name="dstPixels">The memory block where Nimage data is saved.</param>
            <param name="dstLeft">The x coordinate in the destination NImage object. Copied data will be placed starting by this coordinate.</param>
            <param name="dstTop">The y coordinate in the destination NImage object. Copied data will be placed starting by this coordinate.</param>
            <param name="width">Width of the image part.</param>
            <param name="height">Height of the image part.</param>
            <param name="flags">Flags controlling function. These flags can be used: NI_DST_ALPHA_CHANNEL_FIRST, NI_DST_BOTTOM_TO_TOP, NI_DST_SWAP_CHANNELS.</param>
        </member>
        <member name="M:Neurotec.Images.NImage.CopyTo(System.UInt32,System.UInt32,Neurotec.Images.NPixelFormat,System.UInt32,System.UInt32,System.Int64,Neurotec.IO.NBuffer[],System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Copies part of planes of specified NImage to memory buffer.
            </summary>
            <param name="left">Left coordinate of the image part.</param>
            <param name="top">Top coordinate of the image part.</param>
            <param name="dstPixelFormat">Destination pixel format.</param>
            <param name="dstWidth">The width of destination image data.</param>
            <param name="dstHeight">The height of destination image data.</param>
            <param name="dstStride">The stride of destination image data.</param>
            <param name="dstPlanes">The memory block where Nimage data is saved.</param>
            <param name="dstLeft">The x coordinate in the destination NImage object. Copied data will be placed starting by this coordinate.</param>
            <param name="dstTop">The y coordinate in the destination NImage object. Copied data will be placed starting by this coordinate.</param>
            <param name="width">Width of the image part.</param>
            <param name="height">Height of the image part.</param>
            <param name="flags">Flags controlling function. These flags can be used: NI_DST_ALPHA_CHANNEL_FIRST, NI_DST_BOTTOM_TO_TOP, NI_DST_SWAP_CHANNELS.</param>
        </member>
        <member name="M:Neurotec.Images.NImage.CopyTo(System.UInt32,System.UInt32,Neurotec.Images.NPixelFormat,System.Array,System.Array,Neurotec.IO.NBuffer,System.Int32,System.UInt32,System.UInt32,System.Int64,Neurotec.IO.NBuffer[],System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Copies part of planes of specified NImage to memory buffer.
            </summary>
            <param name="left">Left coordinate of the image part.</param>
            <param name="top">Top coordinate of the image part.</param>
            <param name="dstPixelFormat">Destination pixel format.</param>
            <param name="dstMinValue">Minimum destination pixel values.</param>
            <param name="dstMaxValue">Maximum destination pixel values.</param>
            <param name="dstPalette">Destination image palette.</param>
            <param name="dstPaletteLength">Destination image palette length.</param>
            <param name="dstWidth">The width of destination image data.</param>
            <param name="dstHeight">The height of destination image data.</param>
            <param name="dstStride">The stride of destination image data.</param>
            <param name="dstPlanes">The memory block where Nimage data is saved.</param>
            <param name="dstLeft">The x coordinate in the destination NImage object. Copied data will be placed starting by this coordinate.</param>
            <param name="dstTop">The y coordinate in the destination NImage object. Copied data will be placed starting by this coordinate.</param>
            <param name="width">Width of the image part.</param>
            <param name="height">Height of the image part.</param>
            <param name="flags">Flags controlling function. These flags can be used: NI_DST_ALPHA_CHANNEL_FIRST, NI_DST_BOTTOM_TO_TOP, NI_DST_SWAP_CHANNELS.</param>
        </member>
        <member name="M:Neurotec.Images.NImage.CopyTo(Neurotec.Images.NImage,System.UInt32,System.UInt32)">
            <summary>
            Copies specified rectangular area of the NImage to other
            NImage object.
            </summary>
            <param name="dstImage">Destination NImage object. Specified
                                   NImage will be copied to this object.</param>
            <param name="dstLeft">The x coordinate in the destination
                                  NImage object. Copied NImage will be
                                  placed starting by this coordinate.</param>
            <param name="dstTop">The y coordinate in the destination
                                 NImage object. Copied NImage will be
                                 placed starting by this coordinate.</param>    
        </member>
        <member name="M:Neurotec.Images.NImage.ExportPalette(Neurotec.Images.NPixelFormat,System.Array,System.Array,System.UInt32,System.Int32@)">
            <summary>
            Exports the palette from the current image.
            </summary>
            <param name="dstPixelFormat">The destination pixel format.</param>
            <param name="dstMinValue">Minimum destination pixel values.</param>
            <param name="dstMaxValue">Maximum destination pixel values.</param>
            <param name="flags">Flags controlling function. These flags can be used: NI_DST_ALPHA_CHANNEL_FIRST, NI_DST_BOTTOM_TO_TOP, NI_DST_SWAP_CHANNELS.</param>
            <param name="paletteLength">[out] Palette length.</param>
            <returns>NBuffer containing the palette.</returns>
        </member>
        <member name="M:Neurotec.Images.NImage.Save(System.String)">
            <summary>
            Saves NImage object to file.
            </summary>
            <param name="fileName">A string that contains the name of
                                   the file.</param>
        </member>
        <member name="M:Neurotec.Images.NImage.Save(System.String,Neurotec.Images.NImageFormat)">
            <summary>
            Saves NImage object to file with specified NImageFormat.
            </summary>
            <param name="fileName">A string that contains the name of
                                   the file.</param>
            <param name="imageFormat">An image NImageFormat object.</param>
        </member>
        <member name="M:Neurotec.Images.NImage.Save(System.String,Neurotec.Images.NImageInfo)">
            <summary>
            Saves image to file using specified image info.
            </summary>
            <param name="fileName">A string that contains the name of the file. </param>
            <param name="info">Image info.</param>
        </member>
        <member name="M:Neurotec.Images.NImage.Save(System.String,Neurotec.Images.NImageFormat,Neurotec.Images.NImageInfo,System.UInt32)">
            <summary>
            Saves image to file using specified format and image info.
            </summary>
            <param name="fileName">A string that contains the name of
                                   the file. </param>
            <param name="imageFormat">Image format.</param>
            <param name="info">Image info.</param>
            <param name="flags">Flags controlling method. Reserved
                                for future use. Must be 0.</param>
        </member>
        <member name="M:Neurotec.Images.NImage.Save(Neurotec.Images.NImageFormat)">
            <summary>
            Saves image to memory buffer using specified format.
            </summary>
            <param name="imageFormat">Image format.</param>
            <returns>
            NBuffer type memory buffer which contains saved image data.
            </returns>
        </member>
        <member name="M:Neurotec.Images.NImage.Save(Neurotec.Images.NImageInfo)">
            <summary>
            Saves image to memory buffer using specified image info.
            </summary>
            <param name="info">Image info.</param>
            <returns>
            NBuffer type memory buffer which contains saved image data. 
            </returns>
        </member>
        <member name="M:Neurotec.Images.NImage.Save(Neurotec.Images.NImageFormat,Neurotec.Images.NImageInfo,System.UInt32)">
            <summary>
            Saves image to memory buffer using specified format.
            </summary>
            <param name="imageFormat">Image format.</param>
            <param name="info">Image info.</param>
            <param name="flags">Flags controlling method. Reserved
                                for future use. Must be 0. </param>
            <returns>
            NBuffer type memory buffer which contains saved image data. 
            </returns>
        </member>
        <member name="M:Neurotec.Images.NImage.Save(System.IO.Stream,Neurotec.Images.NImageFormat)">
            <summary>
            Saves image to stream using specified format.
            </summary>
            <param name="stream">Data stream used to save the image.
                                 </param>
            <param name="imageFormat">Image format.</param>
        </member>
        <member name="M:Neurotec.Images.NImage.Save(System.IO.Stream,Neurotec.Images.NImageInfo)">
            <summary>
            Saves image to stream using specified image info.
            </summary>
            <param name="stream">Data stream used to save the image. </param>
            <param name="info">Image info.</param>
        </member>
        <member name="M:Neurotec.Images.NImage.Save(System.IO.Stream,Neurotec.Images.NImageFormat,Neurotec.Images.NImageInfo,System.UInt32)">
            <summary>
            Saves image to stream using specified format and image info.
            </summary>
            <param name="stream">Data stream used to save the
                                 image. </param>
            <param name="imageFormat">Image format.</param>
            <param name="info">Image info.</param>
            <param name="flags">Flags controlling method. Reserved
                                for future use. Must be 0.</param>      
        </member>
        <member name="M:Neurotec.Images.NImage.FlipHorizontally">
            <summary>
            Flips image horizontally.
            </summary>               
        </member>
        <member name="M:Neurotec.Images.NImage.FlipVertically">
            <summary>
            Flips image vertically.
            </summary>             
        </member>
        <member name="M:Neurotec.Images.NImage.FlipDiagonally">
            <summary>
            Flips image diagonally.
            </summary>             
        </member>
        <member name="M:Neurotec.Images.NImage.RotateFlip(Neurotec.Images.NImageRotateFlipType)">
            <summary>
            Rotates image using rotation type.
            </summary>
            <param name="rotateFlipType">One of the rotation type value.
                                         </param>
            <returns>
            Rotated NImage object.
            </returns>
        </member>
        <member name="M:Neurotec.Images.NImage.RotateFlip(System.Drawing.RotateFlipType)">
            <summary>
            Rotates image using rotation type.
            </summary>
            <param name="rotateFlipType">One of the rotation type value. </param>
            <returns>
            Rotated NImage object. 
            </returns>
        </member>
        <member name="M:Neurotec.Images.NImage.Crop(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Crops an image.
            </summary>
            <param name="left">X\-coordinate of the cropping
                               rectangle. </param>
            <param name="top">Y\-coordinate of the cropping
                              rectangle. </param>
            <param name="width">Width of the cropping rectangle.</param>
            <param name="height">Height of the cropping rectangle.</param>
            <returns>
            Cropped NImage object.
            </returns>
        </member>
        <member name="M:Neurotec.Images.NImage.ToMonochrome">
            <summary>
            Converts NImage to monochrome image.
            </summary>
            <returns>
            NMonochromeImage object.
            </returns>
        </member>
        <member name="M:Neurotec.Images.NImage.ToGrayscale">
            <summary>
            Converts NImage to NGrayscaleImage.
            </summary>
            <returns>
            NGrayscaleImage object.
            </returns>
        </member>
        <member name="M:Neurotec.Images.NImage.ToRgb">
            <summary>
            Converts NImage to Rgb image.
            </summary>
            <returns>
            NRgbImage object.
            </returns>
        </member>
        <member name="M:Neurotec.Images.NImage.ToBitmap">
            <summary>
            Creates a Bitmap.
            </summary>
            <returns>
            A Bitmap object. 
            </returns>       
        </member>
        <member name="M:Neurotec.Images.NImage.ToHBitmap">
            <summary>
            Creates Windows HBITMAP.
            </summary>
            <returns>
            A Windows HBITMAP. 
            </returns>              
        </member>
        <member name="M:Neurotec.Images.NImage.GetPixel(System.UInt32,System.UInt32)">
            <summary>
            Retrieves the specified pixel.
            </summary>
            <param name="x">X-coordinate of the pixel.</param>
            <param name="y">Y-coordinate of the pixel.</param>
            <returns>An array representing the pixel.</returns>
        </member>
        <member name="M:Neurotec.Images.NImage.SetPixel(System.UInt32,System.UInt32,System.Array)">
            <summary>
            Sets specified pixel's value to the specified value.
            </summary>
            <param name="x">X-coordinate of the pixel.</param>
            <param name="y">Y-coordinate of the pixel.</param>
            <param name="value">An array representing the new pixel value.</param>
        </member>
        <member name="M:Neurotec.Images.NImage.GetIndex(System.UInt32,System.UInt32)">
            <summary>
            Retrieves the palette entry index of the specified pixel.
            </summary>
            <param name="x">X-coordinate of the pixel.</param>
            <param name="y">Y-coordinate of the pixel.</param>
            <returns>Palette entry index.</returns>
        </member>
        <member name="M:Neurotec.Images.NImage.SetIndex(System.UInt32,System.UInt32,System.Int32)">
            <summary>
            Sets the palette entry index for the specified pixel.
            </summary>
            <param name="x">X-coordinate of the pixel.</param>
            <param name="y">Y-coordinate of the pixel.</param>
            <param name="value">Index of the palette entry.</param>
        </member>
        <member name="M:Neurotec.Images.NImage.GetPixels">
            <summary>
            Gets buffer which contains image pixels.
            </summary>
            <returns>
            Memory buffer containing image pixels.
            </returns>
        </member>
        <member name="P:Neurotec.Images.NImage.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Images.NImage.NImageRotateFlipTypeNativeType">
            <summary>
            Defines the native type of the image roration.
            </summary>
        </member>
        <member name="P:Neurotec.Images.NImage.PixelFormat">
            <summary>
            Gets NPixelFormat of NImage object.
            </summary>
            <value>
            A NPixelFormat structure. 
            </value>
        </member>
        <member name="P:Neurotec.Images.NImage.MinValue">
            <summary>
            Gets or sets the minimum value of a pixel.
            </summary>
        </member>
        <member name="P:Neurotec.Images.NImage.MaxValue">
            <summary>
            Gets or sets the maximum value of a pixel.
            </summary>
        </member>
        <member name="P:Neurotec.Images.NImage.Planes">
            <summary>
            Gets the collection of planes.
            </summary>
        </member>
        <member name="P:Neurotec.Images.NImage.Palette">
            <summary>
            Retrieves the palette of the current iamge.
            </summary>
        </member>
        <member name="P:Neurotec.Images.NImage.Width">
            <summary>
            Gets width of image from NImage object.
            </summary>
            <value>
            A width of image. 
            </value>
        </member>
        <member name="P:Neurotec.Images.NImage.Height">
            <summary>
            Gets height of image from NImage object.
            </summary>
            <value>
            A height of image. 
            </value>
        </member>
        <member name="P:Neurotec.Images.NImage.Stride">
            <summary>
            Gets stride of image from NImage object.
            </summary>
            <value>
            A stride of image.
            </value>
            <remarks>
            Stride (size of one row) of the image depends on image pixel
            format and width. It cannot be less than value obtained with
            GetRowLongSize or GetRowSize methods with arguments obtained
            with PixelFormat and Width properties. 
            </remarks>
        </member>
        <member name="P:Neurotec.Images.NImage.LongStride">
            <summary>
            Gets stride of image from NImage object.
            </summary>
            <value>
            A stride of image.
            </value>
            <remarks>
            Stride (size of one row) of the image depends on image pixel
            format and width. It cannot be less than value obtained with
            GetRowLongSize or GetRowSize methods with arguments obtained
            with PixelFormat and Width properties. 
            </remarks>
        </member>
        <member name="P:Neurotec.Images.NImage.NativeStride">
            <summary>
            Gets stride of image from NImage object.
            </summary>
            <value>
            A stride of image.
            </value>
            <remarks>
            Stride (size of one row) of the image depends on image pixel format and width. It cannot be less than
            value obtained with GetRowLongSize or GetRowSize methods with arguments obtained with PixelFormat and
            Width properties. 
            </remarks>
        </member>
        <member name="P:Neurotec.Images.NImage.PlaneSize">
            <summary>
            Gets the plane size.
            </summary>
            <value>
            Int number representing plane size.
            </value>
        </member>
        <member name="P:Neurotec.Images.NImage.LongPlaneSize">
            <summary>
            Gets the plane size.
            </summary>
            <value>
            Long number representing plane size.
            </value>
        </member>
        <member name="P:Neurotec.Images.NImage.NativePlaneSize">
            <summary>
            Gets the native plane size.
            </summary>
            <value>
            UIntPtr representing plane size.
            </value>
        </member>
        <member name="P:Neurotec.Images.NImage.ImageSize">
            <summary>
            Gets size of NImage object.
            </summary>
            <value>
            A size of NImage object.
            </value>
            <remarks>
            Size of memory block containing image pixels is equal to
            image height multiplied by image stride. For more information
            see Height and Stride properties. 
            </remarks>
        </member>
        <member name="P:Neurotec.Images.NImage.LongImageSize">
            <summary>
            Gets size of NImage object.
            </summary>
            <value>
            A size of NImage object.
            </value>
            <remarks>
            Size of memory block containing image pixels is equal to
            image height multiplied by image stride. For more information
            see Height and Stride properties. 
            </remarks>
        </member>
        <member name="P:Neurotec.Images.NImage.NativeImageSize">
            <summary>
            Gets size of NImage object.
            </summary>
            <value>
            A size of NImage object.
            </value>
            <remarks>
            Size of memory block containing image pixels is equal to image height multiplied by image stride. For
            more information see Height and Stride properties. 
            </remarks>
        </member>
        <member name="P:Neurotec.Images.NImage.HorzResolution">
            <summary>
            Gets horizontal resolution in pixels per inch of image.
            </summary>
            <value>
            A horizontal resolution in pixels per inch of image.
            </value>
            <remarks>
            Horizontal resolution equal to zero means that it is not
            applicable for the image. 
            </remarks>
        </member>
        <member name="P:Neurotec.Images.NImage.VertResolution">
            <summary>
            Gets vertical resolution in pixels per inch of image.
            </summary>
            <value>
            A vertical resolution in pixels per inch of image.
            </value>
            <remarks>
            Vertical resolution equal to zero means that it is not
            applicable for the image. 
            </remarks>
        </member>
        <member name="P:Neurotec.Images.NImage.ResolutionIsAspectRatio">
            <summary>
            Gets or sets NImage resolution aspect ratio.
            </summary>
            <value>
            True, if resolution aspect ratio is used. False, otherwise.
            </value>
            <remarks>
            NImage resolution can have 2 modes: physical height and width
            in pixels or aspect ratio. Picture aspect ratio defines the
            shape of displayed image. Picture aspect ratio is notated
            X:Y, where X:Y is the ration of picture width to height. If
            this property has True value it means that NImage shape is
            defined using width and height ratio (aspect ratio). 
            </remarks>
        </member>
        <member name="P:Neurotec.Images.NImage.Pixels">
            <summary>
            Gets pointer to array of pixels from NImage object.
            </summary>
            <value>
            A pointer to pixel array.
            </value>
            <remarks>
            Memory block containing image pixels is organized as image
            height rows following each other in top-to-bottom order. Each
            row occupies image stride bytes and is organized as image
            width pixels following each other in right-to-left order.
            Each pixel is described by image pixel format.
            
            For more information see PixelFormat, Width, Height, Stride,
            and Size properties.
            
            
            </remarks>
        </member>
        <member name="P:Neurotec.Images.NImage.Info">
            <summary>
            Retrieves a NImageInfo object for the current image.
            </summary>
        </member>
        <member name="T:Neurotec.Images.NImage.PlaneCollection">
            <summary>
            Represents a collection of image data planes.
            </summary>
        </member>
        <member name="T:Neurotec.Images.NImage.ImagePalette">
            <summary>
            Represents an image palette.
            </summary>
        </member>
        <member name="M:Neurotec.Images.NImage.ImagePalette.GetEntries">
            <summary>
            Gets the palette entries.
            </summary>
            <returns>NBuffer containing palette entries.</returns>
        </member>
        <member name="M:Neurotec.Images.NImage.ImagePalette.SetEntries(Neurotec.IO.NBuffer,System.Int32)">
            <summary>
            Sets palette entries.
            </summary>
            <param name="value">NBuffer containing palette entries.</param>
            <param name="length">Entries' length.</param>
        </member>
        <member name="P:Neurotec.Images.NImage.ImagePalette.EntriesSize">
            <summary>
            Gets the palette size.
            </summary>
        </member>
        <member name="P:Neurotec.Images.NImage.ImagePalette.NativeEntriesSize">
            <summary>
            Gets the native palette size.
            </summary>
        </member>
        <member name="P:Neurotec.Images.NGrayscaleImage.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Images.NGrayscaleImage.Item(System.UInt32,System.UInt32)">
            <summary>
            Gets or sets the color of the specified pixel in NImage
            object.
            </summary>
            <param name="x">The x coordinate of the pixel.</param>
            <param name="y">The y coordinate of the pixel.</param>
            
            <returns>
            A color of specified pixel. 
            </returns>                                             
        </member>
        <member name="P:Neurotec.Images.NGrayscaleImage.MinValue">
            <summary>
            Gets or sets the minumum value of a pixel.
            </summary>
        </member>
        <member name="P:Neurotec.Images.NGrayscaleImage.MaxValue">
            <summary>
            Gets or sets the maximum value of a pixel.
            </summary>
        </member>
        <member name="T:Neurotec.Images.NImageRotateFlipType">
            <summary>
            Enumerates NImage rotation and flip values.
            </summary>  
        </member>
        <member name="F:Neurotec.Images.NImageRotateFlipType.RotateNone">
            <summary>
            Indicates that image should not be rotated.
            </summary>
        </member>
        <member name="F:Neurotec.Images.NImageRotateFlipType.Rotate90">
            <summary>
            Rotates image by 90 degrees.
            </summary>
        </member>
        <member name="F:Neurotec.Images.NImageRotateFlipType.Rotate180">
            <summary>
            Rotates image by 180 degrees.
            </summary>
        </member>
        <member name="F:Neurotec.Images.NImageRotateFlipType.Rotate270">
            <summary>
            Rotates image by 270 degrees.
            </summary>
        </member>
        <member name="F:Neurotec.Images.NImageRotateFlipType.FlipNone">
            <summary>
            No flip.
            </summary>
        </member>
        <member name="F:Neurotec.Images.NImageRotateFlipType.FlipX">
            <summary>
            Flips the image's orientation of the X coordinates.
            </summary>
        </member>
        <member name="F:Neurotec.Images.NImageRotateFlipType.FlipY">
            <summary>
            Flips the image's orientation of the Y coordinates.
            </summary>
        </member>
        <member name="F:Neurotec.Images.NImageRotateFlipType.FlipXY">
            <summary>
            Flips the image's orientation of the X or Y coordinates.
            </summary>
        </member>
        <member name="F:Neurotec.Images.NImageRotateFlipType.None">
            <summary>
            No flip or rotation.
            </summary>
        </member>
        <member name="T:Neurotec.Images.NImageFormat">
            <summary>
            Provides functionality for loading and saving images in
            format-neutral style.
            </summary>                                             
        </member>
        <member name="M:Neurotec.Images.NImageFormat.Select(System.String,System.IO.FileAccess)">
            <summary>
            Retrieves supported image format registered with file
            extension of specified file name and supporting
            reading/writing as specified.
            </summary>
            <param name="fileName">A string that contains the name of
                                   the file.</param>
            <param name="fileAccess">A file access.</param>
            <returns>
            A NImageFormat object. 
            </returns>                                               
        </member>
        <member name="M:Neurotec.Images.NImageFormat.SelectByInternetMediaType(System.String,System.IO.FileAccess)">
            <summary>
            Retrieves supported image format by specified internet media type and supporting specified file access.
            </summary>
            <param name="internetMediaType">A string that contains the internet media type.</param>
            <param name="fileAccess">A file access.</param>
            <returns>A NImageFormat object.</returns>
        </member>
        <member name="M:Neurotec.Images.NImageFormat.SelectReader(System.String)">
            <summary>
            Retrieves an image reader from a specified file.
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns>NImageReader object.</returns>
        </member>
        <member name="M:Neurotec.Images.NImageFormat.SelectReader(System.String,System.UInt32)">
            <summary>
            Retrieves an image reader from a specified file.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="flags">Must be zero.</param>
            <returns>NImageReader object.</returns>
        </member>
        <member name="M:Neurotec.Images.NImageFormat.SelectReader(Neurotec.IO.NBuffer)">
            <summary>
            Retrieves an image reader from a specified buffer.
            </summary>
            <param name="buffer">The buffer containing the reader.</param>
            <returns>NImageReader object.</returns>
        </member>
        <member name="M:Neurotec.Images.NImageFormat.SelectReader(Neurotec.IO.NBuffer,System.UInt32)">
            <summary>
            Retrieves an image reader from a specified buffer.
            </summary>
            <param name="buffer">The buffer containing the reader.</param>
            <param name="flags">Must be zero.</param>
            <returns>NImageReader object.</returns>
        </member>
        <member name="M:Neurotec.Images.NImageFormat.SelectReader(System.IO.Stream)">
            <summary>
            Retrieves an image reader from a specified stream.
            </summary>
            <param name="stream">The stream containing the reader.</param>
            <returns>NImageReader object.</returns>
        </member>
        <member name="M:Neurotec.Images.NImageFormat.SelectReader(System.IO.Stream,System.UInt32)">
            <summary>
            Retrieves an image reader from a specified stream.
            </summary>
            <param name="stream">The stream containing the reader.</param>
            <param name="flags">Must be zero.</param>
            <returns>NImageReader object.</returns>
        </member>
        <member name="M:Neurotec.Images.NImageFormat.OpenReader(System.String)">
            <summary>
            Opens an image reader from a specified file.
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns>NImageReader object.</returns>
        </member>
        <member name="M:Neurotec.Images.NImageFormat.OpenReader(System.String,System.UInt32)">
            <summary>
            Opens an image reader from a specified file.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="flags">Must be zero.</param>
            <returns>NImageReader object.</returns>
        </member>
        <member name="M:Neurotec.Images.NImageFormat.OpenReader(Neurotec.IO.NBuffer)">
            <summary>
            Opens an image reader from a specified buffer.
            </summary>
            <param name="buffer">The buffer containing the reader.</param>
            <returns>NImageReader object.</returns>
        </member>
        <member name="M:Neurotec.Images.NImageFormat.OpenReader(Neurotec.IO.NBuffer,System.UInt32)">
            <summary>
            Opens an image reader from a specified buffer.
            </summary>
            <param name="buffer">The buffer containing the reader.</param>
            <param name="flags">Must be zero.</param>
            <returns>NImageReader object.</returns>
        </member>
        <member name="M:Neurotec.Images.NImageFormat.OpenReader(System.IO.Stream)">
            <summary>
            Opens an image reader from a specified stream.
            </summary>
            <param name="stream">The stream containing the reader.</param>
            <returns>NImageReader object.</returns>
        </member>
        <member name="M:Neurotec.Images.NImageFormat.OpenReader(System.IO.Stream,System.UInt32)">
            <summary>
            Opens an image reader from a specified stream.
            </summary>
            <param name="stream">The stream containing the reader.</param>
            <param name="flags">Must be zero.</param>
            <returns>NImageReader object.</returns>
        </member>
        <member name="M:Neurotec.Images.NImageFormat.CreateInfo(Neurotec.Images.NImage)">
            <summary>
            Creates image info object for the specified image.
            </summary>
            <param name="image">The specified image.</param>
            <returns>NImageInfo object.</returns>
        </member>
        <member name="M:Neurotec.Images.NImageFormat.CreateInfo(Neurotec.Images.NImage,System.UInt32)">
            <summary>
            Creates image info object for the specified image.
            </summary>
            <param name="image">The specified image.</param>
            <param name="flags">Must be zero.</param>
            <returns>NImageInfo object.</returns>
        </member>
        <member name="M:Neurotec.Images.NImageFormat.OpenWriter(System.String)">
            <summary>
            Opens an image writer to a specified file.
            </summary>
            <param name="fileName">The name of the file.</param>
            <returns>NImageWriter object.</returns>
        </member>
        <member name="M:Neurotec.Images.NImageFormat.OpenWriter(System.String,System.UInt32)">
            <summary>
            Opens an image writer to a specified file.
            </summary>
            <param name="fileName">The name of the file.</param>
            <param name="flags">Must be zero.</param>
            <returns>NImageWriter object.</returns>
        </member>
        <member name="M:Neurotec.Images.NImageFormat.OpenWriter">
            <summary>
            Opens an image writer.
            </summary>
            <returns>NImageWriter object.</returns>
        </member>
        <member name="M:Neurotec.Images.NImageFormat.OpenWriter(System.UInt32)">
            <summary>
            Opens an image writer.
            </summary>
            <param name="flags">Must be zero.</param>
            <returns>NImageWriter object.</returns>
        </member>
        <member name="M:Neurotec.Images.NImageFormat.OpenWriter(System.IO.Stream)">
            <summary>
            Opens an image writer to a specified stream.
            </summary>
            <param name="stream">The stream.</param>
            <returns>NImageWriter object.</returns>
        </member>
        <member name="M:Neurotec.Images.NImageFormat.OpenWriter(System.IO.Stream,System.UInt32)">
            <summary>
            Opens an image writer to a specified stream.
            </summary>
            <param name="stream">The stream.</param>
            <param name="flags">Must be zero.</param>
            <returns>NImageWriter object.</returns>
        </member>
        <member name="M:Neurotec.Images.NImageFormat.OpenFile(System.String)">
            <summary>
            Opens image file from a file.
            </summary>
            <param name="fileName">A string that contains the name of
                                   the file.</param>
            <returns>
            NImage object.
            </returns>                                               
        </member>
        <member name="M:Neurotec.Images.NImageFormat.OpenFile(System.IntPtr,System.Int32)">
            <summary>
            Opens image file from memory buffer.
            </summary>
            <param name="pBuffer">Pointer to memory buffer.</param>
            <param name="bufferSize">Size of memory buffer.</param>
            <returns>
            NImage object.
            </returns>                                               
        </member>
        <member name="M:Neurotec.Images.NImageFormat.OpenFile(System.Byte[])">
            <summary>
            Opens image file from memory buffer.
            </summary>
            <param name="buffer">Pointer to memory buffer.</param>
            <returns>
            NImage object.
            </returns>                                            
        </member>
        <member name="M:Neurotec.Images.NImageFormat.OpenFile(Neurotec.IO.NBuffer)">
            <summary>
            Opens image file from memory buffer.
            </summary>
            <param name="buffer">Memory buffer.</param>
            <returns>
            NImage object.
            </returns>   
        </member>
        <member name="M:Neurotec.Images.NImageFormat.OpenFile(System.IO.Stream,System.Boolean)">
            <summary>
            Opens image file from memory stream.
            </summary>
            <param name="stream">Memory stream.</param>
            <param name="ownsStream">If true, the stream is closed by
                                     the writer when done;<para></para>otherwise
                                     false.</param>
            <returns>
            NImage object.
            </returns>                                                          
        </member>
        <member name="M:Neurotec.Images.NImageFormat.LoadImage(System.String)">
            <summary>
            Loads NImage from file.
            </summary>
            <param name="fileName">A string that contains the name of
                                   the file. </param>
            <returns>
            A NImage object. 
            </returns>                                               
        </member>
        <member name="M:Neurotec.Images.NImageFormat.LoadImage(System.IntPtr,System.Int32)">
            <summary>
            Loads NImage from memory buffer.
            </summary>
            <param name="pBuffer">Pointer to memory buffer.</param>
            <param name="bufferSize">Size of memory buffer.</param>
            <returns>
            A NImage object. 
            </returns>                                               
        </member>
        <member name="M:Neurotec.Images.NImageFormat.LoadImage(System.Byte[])">
            <summary>
            Loads NImage from byte array.
            </summary>
            <param name="buffer">Pointer to memory buffer.</param>
            <returns>
            A NImage object. 
            </returns>                                            
        </member>
        <member name="M:Neurotec.Images.NImageFormat.LoadImage(Neurotec.IO.NBuffer)">
            <summary>
            Loads NImage from buffer.
            </summary>
            <param name="buffer">Memory buffer.</param>
            <returns>NImage object.</returns>
        </member>
        <member name="M:Neurotec.Images.NImageFormat.LoadImage(System.IO.Stream)">
            <summary>
            Loads NImage from stream.
            </summary>
            <param name="stream">A sequence of bytes (stream)</param>
            <returns>
            A NImage object. 
            </returns>                                               
        </member>
        <member name="M:Neurotec.Images.NImageFormat.SaveImage(Neurotec.Images.NImage,System.String)">
            Summary
            Saves NImage to file.
            Parameters
            image :     A NImage object.
            fileName :  A string that contains the name of the file.
        </member>
        <member name="M:Neurotec.Images.NImageFormat.SaveImage(Neurotec.Images.NImage)">
            <summary>
            Saves NImage to byte array.
            </summary>
            <param name="image">A NImage object.</param>
            <returns>
            A NBuffer object. 
            </returns>                                  
        </member>
        <member name="M:Neurotec.Images.NImageFormat.SaveImage(Neurotec.Images.NImage,System.IO.Stream)">
            <summary>
            Saves NImage to stream.
            </summary>
            <param name="image">A NImage object.</param>
            <param name="stream">The data stream used to save the image.</param>
        </member>
        <member name="M:Neurotec.Images.NImageFormat.SaveImages(Neurotec.Images.NImage[],System.String)">
            <summary>
            Saves specified number of images to the files.
            </summary>
            <param name="images">Array of NImage objects.</param>
            <param name="fileName">A string that contains the names of
                                   the files.</param>                 
        </member>
        <member name="M:Neurotec.Images.NImageFormat.SaveImages(Neurotec.Images.NImage[])">
            <summary>
            Saves specified number of images to the byte array.
            </summary>
            <param name="images">Array of NImage objects.</param>
            <returns>
            A NBuffer object.
            </returns>                                           
        </member>
        <member name="M:Neurotec.Images.NImageFormat.SaveImages(Neurotec.Images.NImage[],System.IO.Stream)">
            <summary>
            Saves specified number of images to the stream.
            </summary>
            <param name="images">Array of NImage objects.</param>
            <param name="stream">The data stream used to save the images.</param>
        </member>
        <member name="P:Neurotec.Images.NImageFormat.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Images.NImageFormat.Tiff">
            <summary>
            Specifies the TIFF image format.
            </summary>                      
        </member>
        <member name="P:Neurotec.Images.NImageFormat.Jpeg">
            <summary>
            Specifies the JPEG image format.
            </summary>                      
        </member>
        <member name="P:Neurotec.Images.NImageFormat.Gif">
            <summary>
            Specifies the GIF image format.
            </summary>                     
        </member>
        <member name="P:Neurotec.Images.NImageFormat.Png">
            <summary>
            Specifies the PNG image format.
            </summary>                     
        </member>
        <member name="P:Neurotec.Images.NImageFormat.Wsq">
            <summary>
            Specifies the WSQ image format.
            </summary>                     
        </member>
        <member name="P:Neurotec.Images.NImageFormat.Jpeg2K">
            <summary>
            Specifies the JPEG2000 image format.
            </summary>                          
        </member>
        <member name="P:Neurotec.Images.NImageFormat.Bmp">
            <summary>
            Specifies the BMP image format.
            </summary>                     
        </member>
        <member name="P:Neurotec.Images.NImageFormat.IHead">
            <summary>
            Specifies the NIST IHead image format.
            </summary>                            
        </member>
        <member name="P:Neurotec.Images.NImageFormat.Formats">
            <summary>
            Specifies collection of supported image formats.
            </summary>                                      
        </member>
        <member name="P:Neurotec.Images.NImageFormat.Name">
            <summary>
            Gets name of the current image format.
            </summary>
            <value>
            An image format name. 
            </value>                              
        </member>
        <member name="P:Neurotec.Images.NImageFormat.DefaultFileExtension">
            <summary>
            Gets default file extension of the current image format.
            </summary>
            <value>
            Default file extension. 
            </value>                                                
        </member>
        <member name="P:Neurotec.Images.NImageFormat.DefaultInternetMediaType">
            <summary>
            Gets Default Internet media type of the current image format.
            </summary>
            <value>
            An image format default Internet media type.
            </value>                                     
        </member>
        <member name="P:Neurotec.Images.NImageFormat.FileFilter">
            <summary>
            Gets file filter of the current image format.
            </summary>
            <value>
            An image format file filter.
            </value>                                     
        </member>
        <member name="P:Neurotec.Images.NImageFormat.InternetMediaType">
            <summary>
            Gets Internet media type of the current image format.
            </summary>
            <value>
            An image format Internet media type.
            </value>                                     
        </member>
        <member name="P:Neurotec.Images.NImageFormat.CanRead">
            <summary>
            Gets a value indicating whether the current image format
            supports reading.
            </summary>
            <value>
            <i>true</i> if image format can read, <i>false</i> if image
            format cannot read. 
            </value>                                                   
        </member>
        <member name="P:Neurotec.Images.NImageFormat.CanWrite">
            <summary>
            Gets a value indicating whether the current image format
            supports writing.
            </summary>
            <value>
            <i>true</i> if image format can write, <i>false</i> if image
            format cannot write. 
            </value>                                                    
        </member>
        <member name="P:Neurotec.Images.NImageFormat.CanWriteMultiple">
            <summary>
            Retrieves a value indicating whether the image format
            supports writing of multiple images.
            </summary>
            <value>
            <i>true</i> if image format can write, <i>false</i> if image
            format cannot write.
            </value>                                                    
        </member>
        <member name="T:Neurotec.Images.NImageFormat.ImageFormatCollection">
            <summary>
            Represents the collection of formats in a NImageFormat.
            </summary>
        </member>
        <member name="T:Neurotec.Images.NImageReader">
            <summary>
            Provides methods which can be used to read image data.
            </summary>                                            
        </member>
        <member name="M:Neurotec.Images.NImageReader.Read">
            <summary>
            Reads an image.
            </summary>
            <returns>
            NImage object.
            </returns>     
        </member>
        <member name="M:Neurotec.Images.NImageReader.Read(System.UInt32)">
            <summary>
            Reads an image.
            </summary>
            <param name="flags">[in] Must be zero.</param>
            <returns>
            NImage object. 
            </returns>                                    
        </member>
        <member name="M:Neurotec.Images.NImageReader.Read(Neurotec.Images.NImageInfo@)">
            <summary>
            Reads an image and retrieves its info.
            </summary>
            <param name="info">[out] NImageWithInfo object. </param>
            <returns>
            NImageWithInfo object. 
            </returns>                                              
        </member>
        <member name="M:Neurotec.Images.NImageReader.Read(System.UInt32,Neurotec.Images.NImageInfo@)">
            <summary>
            Reads an image and retrieves its info.
            </summary>
            <param name="flags">[in] Must be zero.</param>
            <param name="info">[out] NImageWithInfo object. </param>
            <returns>
            NImageWithInfo object. 
            </returns>                                              
        </member>
        <member name="M:Neurotec.Images.NImageReader.ReadInfo">
            <summary>
            Retrieves image info.
            </summary>
            <returns>
            NImageInfo object. 
            </returns>           
        </member>
        <member name="M:Neurotec.Images.NImageReader.ReadInfo(System.UInt32)">
            <summary>
            Retrieves image info.
            </summary>
            <param name="flags">[in] Must be zero.</param>
            <returns>
            NImageInfo object. 
            </returns>                                    
        </member>
        <member name="P:Neurotec.Images.NImageReader.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Images.NImageReader.Format">
            <summary>
            Gets or sets the image format.
            </summary>
            <value>
            The image format. 
            </value>                      
        </member>
        <member name="P:Neurotec.Images.NImageReader.ReadSize">
            <summary>
            Gets or sets the size of read image info.
            </summary>
            <value>
            The size of read image info. 
            </value>                                 
        </member>
        <member name="T:Neurotec.Images.NImages">
            <summary>
            Provides library registration and other additional
            functionality.
            </summary>                                        
        </member>
        <member name="M:Neurotec.Images.NImages.GetInfo">
            <summary>
            Retrieves information about NImages library.
            </summary>
            <returns>
            NLibraryInfo object which contains information about library
            such as product name, serial number, version.
            </returns>                                                  
        </member>
        <member name="M:Neurotec.Images.NImages.GetOpenFileFilter">
            <summary>
            Gets a list with names of all NImageFormats, which support
            reading. Names in the list are separated by semicolon.
            </summary>
            <returns>
            String with NImageFormat names separated by semicolon. 
            </returns>                                                
        </member>
        <member name="M:Neurotec.Images.NImages.GetSaveFileFilter">
            <summary>
            Gets a list with names of all NImageFormats, which support
            writing. Names in the list are separated by semicolon.
            </summary>
            <returns>
            String with NImageFormat names separated by semicolon. 
            </returns>                                                
        </member>
        <member name="M:Neurotec.Images.NImages.GetOpenFileFilterString(System.Boolean,System.Boolean)">
            <summary>
            Gets a list with names of all NImageFormats, which support
            reading. Names in the list are separated by semicolon.
            </summary>
            <param name="addAllImage">Boolean indicating whether to add
                                      &quot;All image files&quot; to the
                                      list.</param>
            <param name="addAllFiles">Boolean indicating whether to add
                                      &quot;All files&quot; to the list.</param>
            <returns>
            String with NImageFormat names separated by semicolon. 
            </returns>                                                          
        </member>
        <member name="M:Neurotec.Images.NImages.GetSaveFileFilterString">
            <summary>
            Gets a list with names of all NImageFormats, which support
            writing. Names in the list are separated by semicolon.
            </summary>
            <returns>
            String with NImageFormat names separated by semicolon. 
            </returns>                                                
        </member>
        <member name="M:Neurotec.Images.NImages.GetGrayscaleColorWrapper(Neurotec.Images.NImage,Neurotec.Images.NRgb,Neurotec.Images.NRgb)">
            <summary>
            Creates NImage object wrapper.
            </summary>
            <param name="image">A NImage object.</param>
            <param name="minColor">Specifies color to be used for black
                                   color.</param>
            <param name="maxColor">Specifies color to be used for white
                                   color.</param>
            <returns>
            An NImage object.
            </returns>
            <remarks>
            Gray values in source image are replaced with according RGB
            values from range [minColor, maxColor] in created image. 
            </remarks>                                                 
        </member>
        <member name="M:Neurotec.Images.NImages.RecolorImage(Neurotec.Images.NImage,Neurotec.Images.NPixelFormat,System.Array,System.Array)">
            <summary>
            Recolors the specified image.
            </summary>
            <param name="image">The image to be recolored.</param>
            <param name="pixelFormat">Image pixel format.</param>
            <param name="minValue">Minimum pixel value in the image.</param>
            <param name="maxValue">Maximum pixel value in the image.</param>
            <returns>The recolored image.</returns>
        </member>
        <member name="P:Neurotec.Images.NImages.NativeModule">
            <summary>
            Defines the native module of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Images.NImages.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="T:Neurotec.Images.NImageWriter">
            <summary>
            Provides methods which can be used to write image data.
            </summary>                                             
        </member>
        <member name="M:Neurotec.Images.NImageWriter.Write(Neurotec.Images.NImage,Neurotec.Images.NImageInfo,System.UInt32)">
            <summary>
            Writes data into a specified image.
            </summary>
            <param name="image">The specified image. </param>
            <param name="info">The image info.</param>
            <param name="flags">Must be zero.</param>        
        </member>
        <member name="M:Neurotec.Images.NImageWriter.GetBuffer">
            <summary>
            Gets a memory buffer to write data from.
            </summary>
            <returns>
            ByteBuffer object.
            </returns>                              
        </member>
        <member name="M:Neurotec.Images.NImageWriter.DetachBuffer">
            <summary>
            Detaches an attached buffer.
            </summary>
            <returns>
            The detached ByteBuffer object.
            </returns>                     
        </member>
        <member name="P:Neurotec.Images.NImageWriter.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Images.NImageWriter.Format">
            <summary>
            Gets or sets the image format.
            </summary>
            <value>
            NImageFormat object.
            </value>                      
        </member>
        <member name="P:Neurotec.Images.NistCom.NativeType">
            <summary>
            Gets or sets
            </summary>
            <value>
            The function that retrieves NType object for the enclosing type.
            </value>                                                        
        </member>
        <member name="T:Neurotec.Images.NMonochromeImage">
            <summary>
            Provides functionality for managing 1-bit monochrome images.
            </summary>
            <remarks>
            This class provides advanced functionality, such as
            individual pixel value retrieval for image with pixel format
            equal to Monochrome. 
            </remarks>                                                  
        </member>
        <member name="P:Neurotec.Images.NMonochromeImage.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Images.NMonochromeImage.Item(System.UInt32,System.UInt32)">
            <summary>
            Gets or sets value of NMonochromeImage image pixel with
            specified coordinates.
            </summary>
            <param name="x">X coordinate of the pixel.</param>
            <param name="y">Y coordinate of the pixel.</param>
            <returns>
            Value of pixel, either 0 or 1. 
            </returns>                                             
        </member>
        <member name="P:Neurotec.Images.NMonochromeImage.MinValue">
            <summary>
            Gets or sets the minumum value of a pixel.
            </summary>
        </member>
        <member name="P:Neurotec.Images.NMonochromeImage.MaxValue">
            <summary>
            Gets or sets the maximum value of a pixel.
            </summary>
        </member>
        <member name="T:Neurotec.Images.NPixelType">
            <summary>
            Enumerates the pixel types.
            </summary>
        </member>
        <member name="F:Neurotec.Images.NPixelType.Undefined">
            <summary>
            Undefined pixel type.
            </summary>
        </member>
        <member name="F:Neurotec.Images.NPixelType.Grayscale">
            <summary>
            Grayscale pixel type.
            </summary>
        </member>
        <member name="F:Neurotec.Images.NPixelType.Rgb">
            <summary>
            RGB pixel type.
            </summary>
        </member>
        <member name="T:Neurotec.Images.NPixelFormat">
            <summary>
            Provides functionality for working with pixel format.
            </summary>
            <remarks>
            Image pixel format is not limited to these fields. However
            only these fields are provided for usage with this SDK. 
            </remarks>
        </member>
        <member name="T:Neurotec.Media.INSampleFormat">
            <summary>
            Provides methods to retrieve information about sample formats.
            </summary>
        </member>
        <member name="M:Neurotec.Media.INSampleFormat.ToString(System.String)">
            <summary>
            Retrieves a string representation of the object.
            </summary>
            <param name="format">Reserved.</param>
            <returns>A string representation of the object.</returns>
        </member>
        <member name="M:Neurotec.Media.INSampleFormat.GetChannelType">
            <summary>
            Retrieves the type of the channel.
            </summary>
            <returns>The type of the channel.</returns>
        </member>
        <member name="P:Neurotec.Media.INSampleFormat.ExtraChannel">
            Gets the extra channel.
        </member>
        <member name="P:Neurotec.Media.INSampleFormat.ChannelCount">
            Gets the channel count.
        </member>
        <member name="P:Neurotec.Media.INSampleFormat.ChannelFormat">
            Gets the channel format.
        </member>
        <member name="P:Neurotec.Media.INSampleFormat.BitsPerChannel">
            Gets the number of bits per channel.
        </member>
        <member name="P:Neurotec.Media.INSampleFormat.IsIndexed">
            Checks whether the format is indexed.
        </member>
        <member name="P:Neurotec.Media.INSampleFormat.BitsPerIndex">
            Gets the number of bits per index.
        </member>
        <member name="P:Neurotec.Media.INSampleFormat.MaxPaletteLength">
            Gets the maximum palette length.
        </member>
        <member name="P:Neurotec.Media.INSampleFormat.IsSeparated">
            Gets whether the format is separated.
        </member>
        <member name="P:Neurotec.Media.INSampleFormat.PlaneCount">
            Gets the number of planes.
        </member>
        <member name="P:Neurotec.Media.INSampleFormat.BitsPerValue">
            Gets the number of bits per value.
        </member>
        <member name="P:Neurotec.Media.INSampleFormat.BitsPerSample">
            Gets the number of bits per sample.
        </member>
        <member name="P:Neurotec.Media.INSampleFormat.BitsPerPaletteEntry">
            Gets the number of bits per palette entry.
        </member>
        <member name="P:Neurotec.Media.INSampleFormat.BytesPerChannel">
            Gets the number of bytes per channel.
        </member>
        <member name="P:Neurotec.Media.INSampleFormat.BytesPerValue">
            Gets the number of bytes per value.
        </member>
        <member name="P:Neurotec.Media.INSampleFormat.BytesPerSample">
            Gets the number of bytes per sample.
        </member>
        <member name="P:Neurotec.Media.INSampleFormat.BytesPerPaletteEntry">
            Gets the number of bytes per palette entry.
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.Undefined">
            Indicates undefined pixel format.
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.Grayscale1U">
            <paraattr align="justify">
            Specifies grayscale image pixel format where each pixel is
            represented by 1 bit per channel (channel format - unsigned
            integer).
            </paraattr>                                                
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.Grayscale2U">
            <paraattr align="justify">
            Specifies grayscale image pixel format where each pixel is
            represented by 2 bits per channel (channel format - unsigned
            integer).
            </paraattr>                                                 
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.Grayscale4U">
            <paraattr align="justify">
            Specifies grayscale image pixel format where each pixel is
            represented by 4 bits per channel (channel format - unsigned
            integer).
            </paraattr>                                                 
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.Grayscale8U">
            <paraattr align="justify">
            Specifies grayscale image pixel format where each pixel is
            represented by 8 bits per channel (channel format - unsigned
            integer).
            </paraattr>                                                 
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.Grayscale8S">
            <paraattr align="justify">
            Specifies grayscale image pixel format where each pixel is
            represented by 8 bits per channel (channel format - signed
            integer).
            </paraattr>                                               
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.GrayscaleA8U">
            <paraattr align="justify">
            Specifies grayscale image pixel format where each pixel is
            represented by 8 bits per alpha channel (channel format -
            unsigned integer). Alpha channel specifies pixel
            transparency.
            </paraattr>                                               
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.GrayscaleA8S">
            <paraattr align="justify">
            Specifies grayscale image pixel format where each pixel is
            represented by 8 bits per alpha channel (channel format -
            signed integer). Alpha channel specifies pixel transparency.
            </paraattr>                                                 
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.GrayscalePA8U">
            <paraattr align="justify">
            Specifies grayscale image pixel format where each pixel is
            represented by 8 bits per pre-multiplied alpha channel
            (channel format - unsigned integer).
            </paraattr>                                               
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.GrayscalePA8S">
            <paraattr align="justify">
            Specifies grayscale image pixel format where each pixel is
            represented by 8 bits per pre-multiplied alpha channel
            (channel format - signed integer).
            </paraattr>                                               
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.Grayscale16U">
            <paraattr align="justify">
            Specifies grayscale image pixel format where each pixel is
            represented by 16 bits per channel (channel format - unsigned
            integer).
            </paraattr>                                                  
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.Grayscale16S">
            <paraattr align="justify">
            Specifies grayscale image pixel format where each pixel is
            represented by 16 bits per channel (channel format - signed
            integer).
            </paraattr>                                                
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.GrayscaleA16U">
            <paraattr align="justify">
            Specifies grayscale image pixel format where each pixel is
            represented by 16 bits per alpha channel (channel format -
            unsigned integer). Alpha channel specifies pixel
            transparency.
            </paraattr>                                               
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.GrayscaleA16S">
            <paraattr align="justify">
            Specifies grayscale image pixel format where each pixel is
            represented by 16 bits per alpha channel (channel format -
            signed integer). Alpha channel specifies pixel transparency.
            </paraattr>                                                 
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.GrayscalePA16U">
            <paraattr align="justify">
            Specifies grayscale image pixel format where each pixel is
            represented by 16 bits per pre-multiplied alpha channel
            (channel format - unsigned integer).
            </paraattr>                                               
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.GrayscalePA16S">
            <paraattr align="justify">
            Specifies grayscale image pixel format where each pixel is
            represented by 16 bits per pre-multiplied alpha channel
            (channel format - signed integer).
            </paraattr>                                               
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.Grayscale32U">
            <paraattr align="justify">
            Specifies grayscale image pixel format where each pixel is
            represented by 32 bits per channel (channel format - unsigned
            integer).
            </paraattr>                                                  
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.Grayscale32S">
            <paraattr align="justify">
            Specifies grayscale image pixel format where each pixel is
            represented by 32 bits per channel (channel format - signed
            integer).
            </paraattr>                                                
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.GrayscaleA32U">
            <paraattr align="justify">
            Specifies grayscale image pixel format where each pixel is
            represented by 32 bits per alpha channel (channel format -
            unsigned integer). Alpha channel specifies pixel
            transparency.
            </paraattr>                                               
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.GrayscaleA32S">
            <paraattr align="justify">
            Specifies grayscale image pixel format where each pixel is
            represented by 32 bits per alpha channel (channel format -
            signed integer). Alpha channel specifies pixel transparency.
            </paraattr>                                                 
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.GrayscalePA32U">
            <paraattr align="justify">
            Specifies grayscale image pixel format where each pixel is
            represented by 32 bits per pre-multiplied alpha channel
            (channel format - unsigned integer).
            </paraattr>                                               
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.GrayscalePA32S">
            <paraattr align="justify">
            Specifies grayscale image pixel format where each pixel is
            represented by 32 bits per pre-multiplied alpha channel
            (channel format - signed integer).
            </paraattr>                                               
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.Grayscale64U">
            <paraattr align="justify">
            Specifies grayscale image pixel format where each pixel is
            represented by 64 bits per channel (channel format - unsigned
            integer).
            </paraattr>                                                  
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.Grayscale64S">
            <paraattr align="justify">
            Specifies grayscale image pixel format where each pixel is
            represented by 64 bits per channel (channel format - signed
            integer).
            </paraattr>                                                
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.GrayscaleA64U">
            <paraattr align="justify">
            Specifies grayscale image pixel format where each pixel is
            represented by 64 bits per alpha channel (channel format -
            unsigned integer). Alpha channel specifies pixel
            transparency.
            </paraattr>                                               
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.GrayscaleA64S">
            <paraattr align="justify">
            Specifies grayscale image pixel format where each pixel is
            represented by 64 bits per alpha channel (channel format -
            signed integer). Alpha channel specifies pixel transparency.
            </paraattr>                                                 
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.GrayscalePA64U">
            <paraattr align="justify">
            Specifies grayscale image pixel format where each pixel is
            represented by 64 bits per pre-multiplied alpha channel
            (channel format - unsigned integer).
            </paraattr>                                               
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.GrayscalePA64S">
            <paraattr align="justify">
            Specifies grayscale image pixel format where each pixel is
            represented by 64 bits per pre-multiplied alpha channel
            (channel format - signed integer).
            </paraattr>                                               
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.Grayscale32F">
            <paraattr align="justify">
            Specifies grayscale image pixel format where each pixel is
            represented by 16 bits per channel (channel format - floating
            point).
            </paraattr>                                                  
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.GrayscaleA32F">
            <paraattr align="justify">
            Specifies grayscale image pixel format where each pixel is
            represented by 32 bits per alpha channel (channel format -
            floating point). Alpha channel specifies pixel transparency.
            </paraattr>                                                 
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.GrayscalePA32F">
            <paraattr align="justify">
            Specifies grayscale image pixel format where each pixel is
            represented by 32 bits per pre-multiplied alpha channel
            (channel format - floating point).
            </paraattr>                                               
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.Grayscale64F">
            <paraattr align="justify">
            Specifies grayscale image pixel format where each pixel is
            represented by 64 bits per channel (channel format - floating
            point).
            </paraattr>                                                  
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.GrayscaleA64F">
            <paraattr align="justify">
            Specifies grayscale image pixel format where each pixel is
            represented by 64 bits per alpha channel (channel format -
            floating point). Alpha channel specifies pixel transparency.
            </paraattr>                                                 
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.GrayscalePA64F">
            <paraattr align="justify">
            Specifies grayscale image pixel format where each pixel is
            represented by 64 bits per pre-multiplied alpha channel
            (channel format - floating point).
            </paraattr>                                               
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.Rgb8U">
            <paraattr align="justify">
            Specifies Rgb image pixel format where each pixel (Red,
            Green, Blue) is represented by 8 bits per channel (channel
            format - unsigned integer).
            </paraattr>                                               
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.Rgb8S">
            <paraattr align="justify">
            Specifies Rgb image pixel format where each pixel (Red,
            Green, Blue) is represented by 8 bits per channel (channel
            format - signed integer).
            </paraattr>                                               
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.RgbA8U">
            <paraattr align="justify">
            Specifies Rgb image pixel format where each pixel (Red,
            Green, Blue) is represented by 8 bits per alpha channel
            (channel format - unsigned integer). Alpha channel specifies
            pixel transparency.
            </paraattr>                                                 
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.RgbA8S">
            <paraattr align="justify">
            Specifies Rgb image pixel format where each pixel (Red,
            Green, Blue) is represented by 8 bits per alpha channel
            (channel format - signed integer). Alpha channel specifies
            pixel transparency.
            </paraattr>                                               
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.RgbPA8U">
            <paraattr align="justify">
            Specifies Rgb image pixel format where each pixel (Red,
            Green, Blue) is represented by 8 bits per pre-multiplied
            alpha channel (channel format - unsigned integer).
            </paraattr>                                             
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.RgbPA8S">
            <paraattr align="justify">
            Specifies Rgb image pixel format where each pixel (Red,
            Green, Blue) is represented by 8 bits per pre-multiplied
            alpha channel (channel format - signed integer).
            </paraattr>                                             
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.Rgb16U">
            <paraattr align="justify">
            Specifies Rgb image pixel format where each pixel (Red,
            Green, Blue) is represented by 16 bits per channel (channel
            format - unsigned integer).
            </paraattr>                                                
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.Rgb16S">
            <paraattr align="justify">
            Specifies Rgb image pixel format where each pixel (Red,
            Green, Blue) is represented by 16 bits per channel (channel
            format - signed integer).
            </paraattr>                                                
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.RgbA16U">
            <paraattr align="justify">
            Specifies Rgb image pixel format where each pixel (Red,
            Green, Blue) is represented by 16 bits per alpha channel
            (channel format - unsigned integer). Alpha channel specifies
            pixel transparency.
            </paraattr>                                                 
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.RgbA16S">
            <paraattr align="justify">
            Specifies Rgb image pixel format where each pixel (Red,
            Green, Blue) is represented by 16 bits per alpha channel
            (channel format - signed integer). Alpha channel specifies
            pixel transparency.
            </paraattr>                                               
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.RgbPA16U">
            <paraattr align="justify">
            Specifies Rgb image pixel format where each pixel (Red,
            Green, Blue) is represented by 16 bits per pre-multiplied
            alpha channel (channel format - unsigned integer).
            </paraattr>                                              
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.RgbPA16S">
            <paraattr align="justify">
            Specifies Rgb image pixel format where each pixel (Red,
            Green, Blue) is represented by 16 bits per pre-multiplied
            alpha channel (channel format - signed integer).
            </paraattr>                                              
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.Rgb32U">
            <paraattr align="justify">
            Specifies Rgb image pixel format where each pixel (Red,
            Green, Blue) is represented by 32 bits per channel (channel
            format - unsigned integer).
            </paraattr>                                                
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.Rgb32S">
            <paraattr align="justify">
            Specifies Rgb image pixel format where each pixel (Red,
            Green, Blue) is represented by 32 bits per channel (channel
            format - signed integer).
            </paraattr>                                                
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.RgbA32U">
            <paraattr align="justify">
            Specifies Rgb image pixel format where each pixel (Red,
            Green, Blue) is represented by 32 bits per alpha channel
            (channel format - unsigned integer). Alpha channel specifies
            pixel transparency.
            </paraattr>                                                 
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.RgbA32S">
            <paraattr align="justify">
            Specifies Rgb image pixel format where each pixel (Red,
            Green, Blue) is represented by 32 bits per alpha channel
            (channel format - signed integer). Alpha channel specifies
            pixel transparency.
            </paraattr>                                               
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.RgbPA32U">
            <paraattr align="justify">
            Specifies Rgb image pixel format where each pixel (Red,
            Green, Blue) is represented by 32 bits per pre-multiplied
            alpha channel (channel format - unsigned integer).
            </paraattr>                                              
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.RgbPA32S">
            <paraattr align="justify">
            Specifies Rgb image pixel format where each pixel (Red,
            Green, Blue) is represented by 32 bits per pre-multiplied
            alpha channel (channel format - signed integer).
            </paraattr>                                              
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.Rgb64U">
            <paraattr align="justify">
            Specifies Rgb image pixel format where each pixel (Red,
            Green, Blue) is represented by 64 bits per channel (channel
            format - unsigned integer).
            </paraattr>                                                
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.Rgb64S">
            <paraattr align="justify">
            Specifies Rgb image pixel format where each pixel (Red,
            Green, Blue) is represented by 64 bits per channel (channel
            format - signed integer).
            </paraattr>                                                
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.RgbA64U">
            <paraattr align="justify">
            Specifies Rgb image pixel format where each pixel (Red,
            Green, Blue) is represented by 64 bits per alpha channel
            (channel format - unsigned integer). Alpha channel specifies
            pixel transparency.
            </paraattr>                                                 
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.RgbA64S">
            <paraattr align="justify">
            Specifies Rgb image pixel format where each pixel (Red,
            Green, Blue) is represented by 64 bits per alpha channel
            (channel format - signed integer). Alpha channel specifies
            pixel transparency.
            </paraattr>                                               
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.RgbPA64U">
            <paraattr align="justify">
            Specifies Rgb image pixel format where each pixel (Red,
            Green, Blue) is represented by 64 bits per pre-multiplied
            alpha channel (channel format - unsigned integer).
            </paraattr>                                              
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.RgbPA64S">
            <paraattr align="justify">
            Specifies Rgb image pixel format where each pixel (Red,
            Green, Blue) is represented by 64 bits per pre-multiplied
            alpha channel (channel format - signed integer).
            </paraattr>                                              
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.Rgb32F">
            <paraattr align="justify">
            Specifies Rgb image pixel format where each pixel (Red,
            Green, Blue) is represented by 32 bits per channel (channel
            format - floating point).
            </paraattr>                                                
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.RgbA32F">
            <paraattr align="justify">
            Specifies Rgb image pixel format where each pixel (Red,
            Green, Blue) is represented by 32 bits per alpha channel
            (channel format - floating point). Alpha channel specifies
            pixel transparency.
            </paraattr>                                               
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.RgbPA32F">
            <paraattr align="justify">
            Specifies Rgb image pixel format where each pixel (Red,
            Green, Blue) is represented by 32 bits per pre-multiplied
            alpha channel (channel format - floating point).
            </paraattr>                                              
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.Rgb64F">
            <paraattr align="justify">
            Specifies Rgb image pixel format where each pixel (Red,
            Green, Blue) is represented by 64 bits per channel (channel
            format - floating point).
            </paraattr>                                                
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.RgbA64F">
            <paraattr align="justify">
            Specifies Rgb image pixel format where each pixel (Red,
            Green, Blue) is represented by 64 bits per alpha channel
            (channel format - floating point). Alpha channel specifies
            pixel transparency.
            </paraattr>                                               
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.RgbPA64F">
            <paraattr align="justify">
            Specifies Rgb image pixel format where each pixel (Red,
            Green, Blue) is represented by 64 bits per pre-multiplied
            alpha channel (channel format - floating point).
            </paraattr>                                              
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.Rgb8UIndexed1">
            <paraattr align="justify">
            Specifies indexed Rgb image pixel format where each pixel
            (Red, Green, Blue) is represented by 8 bits per channel
            (channel format - unsigned integer). Also 1 bit is for saving
            index to image palette.
            </paraattr>                                                  
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.Rgb8UIndexed2">
            <paraattr align="justify">
            Specifies indexed Rgb image pixel format where each pixel
            (Red, Green, Blue) is represented by 8 bits per channel
            (channel format - unsigned integer). Also 2 bits is for
            saving index to image palette.
            </paraattr>                                              
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.Rgb8UIndexed4">
            <paraattr align="justify">
            Specifies indexed Rgb image pixel format where each pixel
            (Red, Green, Blue) is represented by 8 bits per channel
            (channel format - unsigned integer). Also 4 bits is for
            saving index to image palette.
            </paraattr>                                              
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.Rgb8UIndexed8">
            <paraattr align="justify">
            Specifies indexed Rgb image pixel format where each pixel
            (Red, Green, Blue) is represented by 8 bits per channel
            (channel format - unsigned integer). Also 8 bits is for
            saving index to image palette.
            </paraattr>                                              
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.RgbA8UIndexed1">
            <paraattr align="justify">
            Specifies indexed Rgb image pixel format where each pixel
            (Red, Green, Blue) is represented by 8 bits per alpha channel
            (channel format - unsigned integer). Also 1 bit is for saving
            index to image palette.
            </paraattr>                                                  
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.RgbA8UIndexed2">
            <paraattr align="justify">
            Specifies indexed Rgb image pixel format where each pixel
            (Red, Green, Blue) is represented by 8 bits per alpha channel
            (channel format - unsigned integer). Also 2 bits is for
            saving index to image palette.
            </paraattr>                                                  
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.RgbA8UIndexed4">
            <paraattr align="justify">
            Specifies indexed Rgb image pixel format where each pixel
            (Red, Green, Blue) is represented by 8 bits per alpha channel
            (channel format - unsigned integer). Also 4 bits is for
            saving index to image palette.
            </paraattr>                                                  
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.RgbA8UIndexed8">
            <paraattr align="justify">
            Specifies indexed Rgb image pixel format where each pixel
            (Red, Green, Blue) is represented by 8 bits per alpha channel
            (channel format - unsigned integer). Also 8 bits is for
            saving index to image palette.
            </paraattr>                                                  
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.Monochrome">
            <summary>
            Each pixel value is stored in 1 bit representing either black
            or white color.
            </summary>                                                   
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.Grayscale">
            <summary>
            Each pixel value is stored in 8 bits representing 256 shades
            of gray.
            </summary>                                                  
        </member>
        <member name="F:Neurotec.Images.NPixelFormat.Rgb">
            <summary>
            Each pixel value is stored in 24 bits consisting of three
            8-bit values representing red, green and blue color
            components.
            </summary>                                               
        </member>
        <member name="M:Neurotec.Images.NPixelFormat.IsPixelTypeValid(Neurotec.Images.NPixelType)">
            <summary>
            Checks whether current NPixelType value is valid.
            </summary>
            <param name="value">The pixel type to be checked.</param>
            <returns>
            true if valid; else false.
            </returns>                                               
        </member>
        <member name="M:Neurotec.Images.NPixelFormat.CanPixelTypeBeIndexed(Neurotec.Images.NPixelType)">
            <summary>
            Checks whether the specified pixel type can be indexed.
            </summary>
            <param name="pixelType">The specified pixel type.</param>
            <returns>
            true, if the pixel type can be indexed; else false.
            </returns>                                               
        </member>
        <member name="M:Neurotec.Images.NPixelFormat.CalcRowNativeSize(System.Int32,System.UInt32,System.Int32)">
            <summary>
            Calculates number of bytes needed to store line of specified length of pixels with specified bits per
            pixel and alignment.
            </summary>
            <param name="bitsPerPixel">A number of bytes needed to store line of pixels.</param>
            <param name="length">A length of pixels.</param>
            <param name="alignment">Alignment.</param>
            <returns>
            The number of bytes needed to store line of specified length of pixels with specified bits per pixel.
            
            </returns>                                                                                           
        </member>
        <member name="M:Neurotec.Images.NPixelFormat.CalcRowSize(System.Int32,System.UInt32,System.Int32)">
            <summary>
            Calculates number of bytes needed to store line of specified
            length of pixels with specified bits per pixel and alignment.
            
            
            </summary>
            <param name="bitsPerPixel">A number of bytes needed to store
                                   line of pixels.</param>
            <param name="length">A length of pixels.</param>
            <param name="alignment">Alignment.</param>
            
            <returns>
            The number of bytes needed to store line of specified length
            of pixels with specified bits per pixel. 
            </returns>                                                   
        </member>
        <member name="M:Neurotec.Images.NPixelFormat.CalcRowLongSize(System.Int32,System.UInt32,System.Int32)">
            <summary>
            Calculates number of bytes needed to store line of specified
            length of pixels with specified bits per pixel and alignment.
            </summary>
            <param name="bitsPerPixel">A number of bytes needed to store
                                   line of pixels.</param>
            <param name="length">A length of lpixels.</param>
            <param name="alignment">Alignment.</param>
            <returns>
            The number of bytes needed to store line of specified length
            of pixels with specified bits per pixel. 
            </returns>                                                   
        </member>
        <member name="M:Neurotec.Images.NPixelFormat.CalcRowNativeSize(System.Int32,System.UInt32)">
            <summary>
            Calculates number of bytes needed to store line of specified length of pixels with specified bits per
            pixel.
            </summary>
            <param name="bitsPerPixel">A number of bytes needed to store line of pixels.</param>
            <param name="length">A length of pixels.</param>
            <returns>
            The number of bytes needed to store line of specified length of pixels with specified bits per pixel.
            
            </returns>                                                                                           
        </member>
        <member name="M:Neurotec.Images.NPixelFormat.CalcRowSize(System.Int32,System.UInt32)">
            <summary>
            Calculates number of bytes needed to store line of specified
            length of pixels with specified bits per pixel.
            </summary>
            <param name="bitsPerPixel">A number of bytes needed to store
                                   line of pixels.</param>
            <param name="length">A length of pixels.</param>
            <returns>
            The number of bytes needed to store line of specified length
            of pixels with specified bits per pixel. 
            </returns>                                                  
        </member>
        <member name="M:Neurotec.Images.NPixelFormat.CalcRowLongSize(System.Int32,System.UInt32)">
            <summary>
            Calculates number of bytes needed to store line of specified
            length of pixels with specified bits per pixel.
            </summary>
            <param name="bitsPerPixel">A number of bytes needed to store
                                   line of pixels.</param>
            <param name="length">A length of pixels.</param>
            <returns>
            The number of bytes needed to store line of specified length
            of pixels with specified bits per pixel. 
            </returns>                                                  
        </member>
        <member name="M:Neurotec.Images.NPixelFormat.#ctor(System.UInt32)">
            <summary>
            Initiazlizes a new instance of NPixelFormat class.
            </summary>
            <param name="value">The pixel format.</param>     
        </member>
        <member name="M:Neurotec.Images.NPixelFormat.#ctor(Neurotec.Images.NPixelType,Neurotec.Media.NExtraChannel,System.Int32,Neurotec.Media.NChannelFormat,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Initiazlizes a new instance of NPixelFormat class.
            </summary>
            <param name="pixelType">Type of pixels. </param>
            <param name="extraChannel">The extra channel. </param>
            <param name="channelCount">The number of channels. </param>
            <param name="channelFormat">Format of the channel. </param>
            <param name="bitsPerChannel">Number of bits per channel. </param>
            <param name="bitsPerIndex">Number of bits per index. </param>
            <param name="isSeparated"><b>true</b> if separated; else <b>false</b>.</param>
        </member>
        <member name="M:Neurotec.Images.NPixelFormat.Equals(System.Object)">
            <summary>
            Determines whether the specified Object is equal to the
            current Object.
            </summary>
            <param name="obj">The Object to compare with the current
                              Object.</param>
            <returns>
            <i>true</i> if the specified Object is equal to the current
            Object; otherwise, <i>false</i>. 
            </returns>                                                 
        </member>
        <member name="M:Neurotec.Images.NPixelFormat.GetHashCode">
            <summary>
            Gets the hash code. Is intended for a hash function for a
            particular type. GetHashCode is suitable for use in hashing
            algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current Object. 
            </returns>                                                 
        </member>
        <member name="M:Neurotec.Images.NPixelFormat.ToString">
            <summary>
            Retrieves string representation of NPixelFormat object.
            </summary>
            <returns>
            String representation of NPixelFormat object.
            </returns>                                             
        </member>
        <member name="M:Neurotec.Images.NPixelFormat.ToString(System.String)">
            <summary>
            Retrieves string representation of NPixelFormat object.
            </summary>
            <param name="format">Reserved.</param>
            <returns>String representation of NPixelFormat object.</returns>
        </member>
        <member name="M:Neurotec.Images.NPixelFormat.GetIndexed(System.Int32)">
            <summary>
            Retrieves an indexed version of the NPixelFormat.
            </summary>
            <param name="bitsPerIndex">Number of bits per index. </param>
            <returns>
            Indexed NPixelFormat.
            </returns>                                                   
        </member>
        <member name="M:Neurotec.Images.NPixelFormat.GetNonIndexed">
            <summary>
            Retrieves a non-indexed version of the NPixelFormat.
            </summary>
            <returns>
            Non-indexed NPixelFormat.
            </returns>                                          
        </member>
        <member name="M:Neurotec.Images.NPixelFormat.GetSeparated">
            <summary>
            Retrieves a separated version of the NPixelFormat.
            </summary>
            <returns>
            Separated NPixelFormat.
            </returns>                                        
        </member>
        <member name="M:Neurotec.Images.NPixelFormat.GetNonSeparated">
            <summary>
            Retrieves a non-separated version of the NPixelFormat.
            </summary>
            <returns>
            Non-separated NPixelFormat.
            </returns>                                            
        </member>
        <member name="M:Neurotec.Images.NPixelFormat.GetWithExtraChannel(Neurotec.Media.NExtraChannel)">
            <summary>
            Retrieves a version of the NPixelFormat with an extra channel.
            </summary>
            <param name="extraChannel">The extra channel.</param>
            <returns>
            NPixelFormat with an extra channel.
            </returns>                                                    
        </member>
        <member name="M:Neurotec.Images.NPixelFormat.GetRowNativeSize(System.UInt32,System.Int32)">
            <summary>
            Calculates number of bytes needed to store line of specified length of pixels with specified
            NPixelFormat and alignment.
            </summary>
            <param name="length">A length of pixels.</param>
            <param name="alignment">Alignment.</param>
            <returns>
            No tables or formatting elements here!!! 
            </returns>                                                                                  
        </member>
        <member name="M:Neurotec.Images.NPixelFormat.GetRowSize(System.UInt32,System.Int32)">
            <summary>
            Calculates number of bytes needed to store line of specified
            length of pixels with specified NPixelFormat and alignment.
            
            
            </summary>
            <param name="length">A length of pixels.</param>
            <param name="alignment">Alignment.</param>
            
            <returns>
            The number of bytes needed to store line of specified length
            of pixels with specified NPixel Format. 
            </returns>                                                  
        </member>
        <member name="M:Neurotec.Images.NPixelFormat.GetRowLongSize(System.UInt32,System.Int32)">
            <summary>
            Calculates number of bytes needed to store line of specified
            length of pixels with specified NPixelFormat and alignment.
            </summary>
            <param name="length">A length of pixels.</param>
            <param name="alignment">Alignment.</param>
            <returns>
            The number of bytes needed to store line of specified length
            of pixels with specified NPixel Format. 
            </returns>                                                  
        </member>
        <member name="M:Neurotec.Images.NPixelFormat.GetRowNativeSize(System.UInt32)">
            <summary>
            Calculates number of bytes needed to store line of specified length of pixels with specified
            NPixelFormat and alignment.
            </summary>
            <param name="length">A length of pixels.</param>
            <returns>
            The number of bytes needed to store line of specified length of pixels with specified NPixel Format. 
            </returns>                                                                                           
        </member>
        <member name="M:Neurotec.Images.NPixelFormat.GetRowSize(System.UInt32)">
            <summary>
            Calculates number of bytes needed to store line of specified
            length of pixels with specified NPixelFormat.
            
            
            </summary>
            <param name="length">A length of pixels.</param>
            
            <returns>
            The number of bytes needed to store line of specified length
            of pixels with specified NPixel Format. 
            </returns>                                                  
        </member>
        <member name="M:Neurotec.Images.NPixelFormat.GetRowLongSize(System.UInt32)">
            <summary>
            Calculates number of bytes needed to store line of specified
            length of pixels with specified NPixelFormat.
            
            
            </summary>
            <param name="length">A length of pixels.</param>
            
            <returns>
            The number of bytes needed to store line of specified length
            of pixels with specified NPixel Format. 
            </returns>                                                  
        </member>
        <member name="M:Neurotec.Images.NPixelFormat.GetPaletteSize(System.Int32)">
            <summary>
            Retrieves the palette size.
            </summary>
            <param name="length">The length of pixels. </param>
            <returns>
            Palette size.
            </returns>                                         
        </member>
        <member name="M:Neurotec.Images.NPixelFormat.op_Explicit(Neurotec.Images.NPixelFormat)~System.UInt32">
            <summary>
            Gets value field of NPixelFormat object.
            </summary>
            <param name="pixelFormat">NPixelFormat object.</param>
        </member>
        <member name="M:Neurotec.Images.NPixelFormat.op_Explicit(System.UInt32)~Neurotec.Images.NPixelFormat">
            <summary>
            This conversion operator converts from a uint type to a
            NPixelFormat type
            </summary>
            <param name="value">value to be converted</param>      
        </member>
        <member name="M:Neurotec.Images.NPixelFormat.op_Equality(Neurotec.Images.NPixelFormat,Neurotec.Images.NPixelFormat)">
            <summary>
            Checks if two pixelFormats are equal.
            </summary>
            <param name="pixelFormat1">first pixelFormat to be compared.</param>
            <param name="pixelFormat2">second pixelFormat to be
                                       compared.</param>
            <returns>
            True if pixelFormats are equal, false otherwise. 
            </returns>                                                          
        </member>
        <member name="M:Neurotec.Images.NPixelFormat.op_Inequality(Neurotec.Images.NPixelFormat,Neurotec.Images.NPixelFormat)">
            <summary>
            Checks if two pixelFormats are not equal.
            </summary>
            <param name="pixelFormat1">first pixelFormat to be compared.</param>
            <param name="pixelFormat2">second pixelFormat to be
                                       compared.</param>
            <returns>
            True if pixelFormats are not equal, false if equal. 
            </returns>                                                          
        </member>
        <member name="M:Neurotec.Images.NPixelFormat.GetChannelType">
            <summary>
            Retrieves the current channel type.
            </summary>
            <returns>The current channel type.</returns>
        </member>
        <member name="M:Neurotec.Images.NPixelFormat.Equals(Neurotec.Images.NPixelFormat)">
            <summary>
            Checks whether the current pixel format equals the other pixel format.
            </summary>
            <param name="other">The other pixel format.</param>
            <returns><i>true</i> if the specified Object is equal to the current
            Object; otherwise, <i>false</i>.</returns>
        </member>
        <member name="P:Neurotec.Images.NPixelFormat.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Images.NPixelFormat.NPixelTypeNativeType">
            <summary>
            Defines the native type of the pixel type.
            </summary>
        </member>
        <member name="P:Neurotec.Images.NPixelFormat.IsValid">
            <summary>
            Checks whether current NPixelFormat value is valid.
            </summary>
            <returns>
            <i>true</i> if the object is valid NPixelFormat, <i>false</i>
            if not. 
            </returns>                                                   
        </member>
        <member name="P:Neurotec.Images.NPixelFormat.PixelType">
            <summary>
            Gets or sets the type of the pixel.
            </summary>
            <value>
            The type of the pixel.
            </value>                           
        </member>
        <member name="P:Neurotec.Images.NPixelFormat.BitsPerPixel">
            <summary>
            Each pixel value is stored in 24 bits consisting of three 8-bit values representing red, green and
            blue color components.
            </summary>
            <value>
            A number of bits per NPixelFormat. 
            </value>                                                                                          
        </member>
        <member name="P:Neurotec.Images.NPixelFormat.BytesPerPixel">
            <summary>
            Gets or sets the number of bytes per pixel.
            </summary>
            <value>
            The number of bytes per pixel.
            </value>                                   
        </member>
        <member name="P:Neurotec.Images.NPixelFormat.ExtraChannel">
            <summary>
            Gets or sets the extra channel.
            </summary>
            <value>
            The extra channel.
            </value>                       
        </member>
        <member name="P:Neurotec.Images.NPixelFormat.ChannelCount">
            <summary>
            Gets or sets the number of channels.
            </summary>
            <value>
            The number of channels.
            </value>                            
        </member>
        <member name="P:Neurotec.Images.NPixelFormat.ChannelFormat">
            <summary>
            Gets or sets the format of the channel.
            </summary>
            <value>
            The format of the channel.
            </value>                               
        </member>
        <member name="P:Neurotec.Images.NPixelFormat.BitsPerChannel">
            <summary>
            Gets or sets the number of bits per channel.
            </summary>
            <value>
            The number of bits per channel.
            </value>                                    
        </member>
        <member name="P:Neurotec.Images.NPixelFormat.IsIndexed">
            <summary>
            Checks whether current NPixelFormat value is indexed.
            </summary>
            <value>
            <i>true</i> if current NPixelFormat is indexed, <i>false</i> if not. 
            </value>                                                             
        </member>
        <member name="P:Neurotec.Images.NPixelFormat.BitsPerIndex">
            <summary>
            Gets or sets the number of bits per index.
            </summary>
            <value>
            The number of bits per index.
            </value>                                  
        </member>
        <member name="P:Neurotec.Images.NPixelFormat.MaxPaletteLength">
            <summary>
            Gets or sets the maximum palette length.
            </summary>
            <value>
            The maximum palette length.
            </value>                                
        </member>
        <member name="P:Neurotec.Images.NPixelFormat.IsSeparated">
            <summary>
            Checks whether current NPixelFormat value is separated.
            </summary>
            <value>
            <i>true</i> if current NPixelFormat is separated, <i>false</i> if not. 
            </value>                                                               
        </member>
        <member name="P:Neurotec.Images.NPixelFormat.PlaneCount">
            <summary>
            Gets or sets the number of the planes.
            </summary>
            <value>
            The number of the planes.
            </value>                              
        </member>
        <member name="P:Neurotec.Images.NPixelFormat.BitsPerValue">
            <summary>
            Gets or sets the number of bits per value.
            </summary>
            <value>
            The number of bits per value.
            </value>                                  
        </member>
        <member name="P:Neurotec.Images.NPixelFormat.BitsPerPaletteEntry">
            <summary>
            Gets or sets the number of bits per palette entry.
            </summary>
            <value>
            The number of bits per palette entry.
            </value>                                          
        </member>
        <member name="P:Neurotec.Images.NPixelFormat.BytesPerChannel">
            <summary>
            Gets or sets the number of bytes per channel.
            </summary>
            <value>
            The number of bytes per channel.
            </value>                                     
        </member>
        <member name="P:Neurotec.Images.NPixelFormat.BytesPerValue">
            <summary>
            Gets or sets the number of bytes per value.
            </summary>
            <value>
            The number of bytes per value.
            </value>                                   
        </member>
        <member name="P:Neurotec.Images.NPixelFormat.BytesPerPaletteEntry">
            <summary>
            Gets or sets the number of bytes per palette entry.
            </summary>
            <value>
            The number of bytes per palette entry.
            </value>                                           
        </member>
        <member name="T:Neurotec.Images.NRgb">
            <summary>
            Represents an RGB color.
            </summary>    
        </member>
        <member name="M:Neurotec.Images.NRgb.#ctor(System.Byte,System.Byte,System.Byte)">
            <summary>
            Initializes a new instance of the NRgb structure.
            </summary>
            <param name="red">The blue component value of this NRGB.</param>
            <param name="green">The green component value of this NRGB.</param>
            <param name="blue">The red component value of this NRGB. </param>  
        </member>
        <member name="M:Neurotec.Images.NRgb.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of NRGB class.
            </summary>
            <param name="value">RGB value array.</param>
        </member>
        <member name="M:Neurotec.Images.NRgb.ToString">
            <summary>
            Retrieves a string representation of NRgb object.
            </summary>
            <returns>
            String representation of NRgb object.
            </returns>                                       
        </member>
        <member name="M:Neurotec.Images.NRgb.ToString(System.String)">
            <summary>
            Retrieves string representation of NRgb object.
            </summary>
            <param name="format">Reserved.</param>
            <returns>String representation of NRgb object.</returns>
        </member>
        <member name="M:Neurotec.Images.NRgb.ToArray">
            <summary>
            Retrieves a byte array representation of NRgb object.
            </summary>
            <returns>
            Byte array representing NRgb object.
            </returns>                                           
        </member>
        <member name="P:Neurotec.Images.NRgb.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Images.NRgb.Red">
            <summary>
            Gets the red component value of this NRgb structure.
            </summary>
            <value>
            The red component value of this NRgb.
            </value>                                            
        </member>
        <member name="P:Neurotec.Images.NRgb.Green">
            <summary>
            Gets the green component value of this NRgb structure.
            </summary>
            <value>
            The green component value of this NRgb.
            </value>                                              
        </member>
        <member name="P:Neurotec.Images.NRgb.Blue">
            <summary>
            Gets the blue component value of this NRgb structure.
            </summary>
            <value>
            The blue component value of this NRgb.
            </value>                                             
        </member>
        <member name="T:Neurotec.Images.NRgbImage">
            <summary>
            Provides functionality for managing 24-bit RGB images.
            </summary>
            <remarks>
            This class provides advanced functionality, such as
            individual pixel value retrieval for image with pixel format
            equal to Rgb. 
            </remarks>                                                  
        </member>
        <member name="P:Neurotec.Images.NRgbImage.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Images.NRgbImage.Item(System.UInt32,System.UInt32)">
            <summary>
            Gets or sets pixel value in NRgbImage.
            </summary>
            <param name="x">The X coordinate of a pixel</param>
            <param name="y">The Y coordinate of a pixel</param>
            <returns>
            Value of a pixel with specified coordinates. 
            </returns>                                         
        </member>
        <member name="P:Neurotec.Images.NRgbImage.MinValue">
            <summary>
            Gets or sets a minimum value of a pixel.
            </summary>
        </member>
        <member name="P:Neurotec.Images.NRgbImage.MaxValue">
            <summary>
            Gets or sets a maximum value of a pixel.
            </summary>
        </member>
        <member name="T:Neurotec.Images.PngInfo">
            <summary>
            Provides infromation about PNG format images.
            </summary>                                   
        </member>
        <member name="F:Neurotec.Images.PngInfo.DefaultCompressionLevel">
            <summary>
            Specifies default Png compression level.
            </summary>                              
        </member>
        <member name="P:Neurotec.Images.PngInfo.NativeType">
            <summary>
            Gets or sets
            </summary>
            <value>
            The function that retrieves NType object for the enclosing type.
            </value>                                                        
        </member>
        <member name="P:Neurotec.Images.PngInfo.CompressionLevel">
            <summary>
            Gets or sets compression level of a PNG image.
            </summary>
            <value>
            NInt value defining the compression level.
            </value>                                      
        </member>
        <member name="T:Neurotec.Images.Png">
            <summary>
            Provides functionality for loading and saving images in Png
            format.
            </summary>                                                 
        </member>
        <member name="F:Neurotec.Images.Png.DefaultCompressionLevel">
            <summary>
            Specifies default Png compression level.
            </summary>                              
        </member>
        <member name="M:Neurotec.Images.Png.LoadImage(System.String)">
            <summary>
            Creates NImage object from Png file.
            </summary>
            <param name="fileName">A string that contains the name of
                                   the file.</param>
            <returns>
            A NImage object. 
            </returns>                                               
        </member>
        <member name="M:Neurotec.Images.Png.LoadImage(System.IntPtr,System.Int32)">
            <summary>
            Creates NImage object from memory buffer.
            </summary>
            <param name="pBuffer">Pointer to memory buffer.</param>
            <param name="bufferSize">Size of memory buffer.</param>
            <returns>
            NImage object. 
            </returns>                                               
        </member>
        <member name="M:Neurotec.Images.Png.LoadImage(System.Byte[])">
            <summary>
            Creates NImage object from byte array.
            </summary>
            <param name="buffer">Byte array</param>
            <returns>
            NImage object. 
            </returns>                             
        </member>
        <member name="M:Neurotec.Images.Png.LoadImage(Neurotec.IO.NBuffer)">
            <summary>
            Creates NImage object from memory buffer.
            </summary>
            <param name="buffer">Memory buffer.</param>
            <returns>NImage object.</returns>
        </member>
        <member name="M:Neurotec.Images.Png.LoadImage(System.IO.Stream)">
            <summary>
            Creates NImage object from memory stream.
            </summary>
            <param name="stream">Memory stream which contains image
                                 data.</param>
            <returns>
            Created NImage object. 
            </returns>                                             
        </member>
        <member name="M:Neurotec.Images.Png.SaveImage(Neurotec.Images.NImage,System.String)">
            <summary>
            NImage object to file in Png format.
            </summary>
            <param name="image">A NImage object.</param>
            <param name="fileName">A string that contains the name of the
                                   \file.</param>                        
        </member>
        <member name="M:Neurotec.Images.Png.SaveImage(Neurotec.Images.NImage,System.Int32,System.String)">
            <summary>
            Saves NImage object to file in Png format with specified bit
            rate.
            </summary>
            <param name="image">A NImage object.</param>
            <param name="compressionLevel">Specifies compression level
                                           of Png image.</param>
            <param name="fileName">A string that contains the
                                   name of the file.</param>            
        </member>
        <member name="M:Neurotec.Images.Png.SaveImage(Neurotec.Images.NImage)">
            <summary>
            Saves NImage object to byte array in Png format.
            </summary>
            <param name="image">A NImage object.</param>
            <returns>
            A byte array. 
            </returns>                                      
        </member>
        <member name="M:Neurotec.Images.Png.SaveImage(Neurotec.Images.NImage,System.Int32)">
            <summary>
            Saves NImage object to byte array in Png format with
            specified bit rate.
            </summary>
            <param name="image">A NImage object.</param>
            <param name="compressionLevel">Specifies comrpession level
                                           of Png image.</param>
            <returns>
            A byte array. 
            </returns>                                                
        </member>
        <member name="M:Neurotec.Images.Png.SaveImage(Neurotec.Images.NImage,System.IO.Stream)">
            <summary>
            Saves NImage object to stream in Png format.
            </summary>
            <param name="image">A NImage object.</param>
            <param name="stream">The data stream used to save the image.</param>
        </member>
        <member name="M:Neurotec.Images.Png.SaveImage(Neurotec.Images.NImage,System.Int32,System.IO.Stream)">
            <summary>
            Saves NImage object to stream in Png format with specified
            bit rate.
            </summary>
            <param name="image">A NImage object.</param>
            <param name="compressionLevel">Specifies compression level
                                           of Png image.</param>
            <param name="stream">The data stream used to save
                                 the image.</param>                   
        </member>
        <member name="T:Neurotec.Images.TiffInfo">
            <summary>
            Provides infromation about TIFF format images.
            </summary>                                    
        </member>
        <member name="P:Neurotec.Images.TiffInfo.NativeType">
            <summary>
            Gets or sets
            </summary>
            <value>
            The function that retrieves NType object for the enclosing type.
            </value>                                                        
        </member>
        <member name="T:Neurotec.Images.Tiff">
            <summary>
            Provides functionality for loading and saving images in TIFF
            format.
            </summary>                                                  
        </member>
        <member name="M:Neurotec.Images.Tiff.LoadImage(System.String)">
            <summary>
            Creates NImage object from TIFF file.
            </summary>
            <param name="fileName">A string that contains the name of
                                   the file.</param>
            <returns>
            A NImage object. 
            </returns>                                               
        </member>
        <member name="M:Neurotec.Images.Tiff.LoadImage(System.IntPtr,System.Int32)">
            <summary>
            Creates NImage object from memory buffer.
            </summary>
            <param name="pBuffer">Pointer to memory buffer.</param>
            <param name="bufferSize">Size of memory buffer.</param>
            <returns>
            NImage object. 
            </returns>                                               
        </member>
        <member name="M:Neurotec.Images.Tiff.LoadImage(System.Byte[])">
            <summary>
            Creates NImage object from byte array.
            </summary>
            <param name="buffer">Byte array</param>
            <returns>
            NImage object. 
            </returns>                             
        </member>
        <member name="M:Neurotec.Images.Tiff.LoadImage(Neurotec.IO.NBuffer)">
            <summary>
            Loads an image from specified buffer.
            </summary>
            <param name="buffer">The specified buffer.</param>
            <returns>The loaded NImage.</returns>
        </member>
        <member name="M:Neurotec.Images.Tiff.LoadImage(System.IO.Stream)">
            <summary>
            Creates NImage object from memory buffer.
            </summary>
            <param name="stream">Memory stream which contains Tiff image
                                 data.</param>
            <returns>
            Loaded NImage object. 
            </returns>                                                  
        </member>
        <member name="T:Neurotec.Images.WsqInfo">
            <summary>
            Provides information about Wsq images. 
            </summary>                             
        </member>
        <member name="F:Neurotec.Images.WsqInfo.DefaultBitRate">
            <summary>
            Default WSQ bit rate. 
            </summary>            
        </member>
        <member name="F:Neurotec.Images.WsqInfo.ImplementationNeurotechnologyWin32_x86">
            <summary>
            Indicates Win32-x86 implementation.
            </summary>
        </member>
        <member name="F:Neurotec.Images.WsqInfo.ImplementationNeurotechnologyWin64_x64">
            <summary>
            Indicates Win64-x64 implementation.
            </summary>
        </member>
        <member name="F:Neurotec.Images.WsqInfo.ImplementationNeurotechnologyDebian_i386">
            <summary>
            Indicates Debian i386 implementation.
            </summary>
        </member>
        <member name="F:Neurotec.Images.WsqInfo.ImplementationNeurotechnologyDebian_amd64">
            <summary>
            Indicates Debian amd64 implementation.
            </summary>
        </member>
        <member name="F:Neurotec.Images.WsqInfo.ImplementationNeurotechnologyMacOSX_Intel">
            <summary>
            Indicates MacOSX Intel implementation.
            </summary>
        </member>
        <member name="F:Neurotec.Images.WsqInfo.ImplementationNeurotechnologyMacOSX_Intel64">
            <summary>
            Indicates MacOSX Intel64 implementation.
            </summary>
        </member>
        <member name="F:Neurotec.Images.WsqInfo.ImplementationNeurotechnologyMacOSX_PowerPC">
            <summary>
            Indicates MacOSX PowerPC implementation.
            </summary>
        </member>
        <member name="P:Neurotec.Images.WsqInfo.NativeType">
            <summary>
            Gets or sets
            </summary>
            <value>
            The function that retrieves NType object for the enclosing type.
            </value>                                                        
        </member>
        <member name="P:Neurotec.Images.WsqInfo.BitRate">
            <summary>
            Gets or sets WSQ image bit rate (Compression level).
            </summary>
            <value>
            WSQ image bit rate.
            </value>
            <remarks>
            WSQ images can be saved compressed. Compression is controlled
            using bit rate which can be calculated using this formula:
            11.25/N where N is compression ratio. Typical compression
            ratios:
            <xtable>
            Compression ratio   Bit rate
            ------------------  ---------
            1:15                0.75
            1:5                 2.25
            1:N                 11.25/N
            </xtable>
            </remarks>                                                   
        </member>
        <member name="P:Neurotec.Images.WsqInfo.ImplementationNumber">
            <summary>
            Gets or sets WSQ image implementation number.
            </summary>
            <value>
            WSQ image implementation number.
            </value>                                     
        </member>
        <member name="P:Neurotec.Images.WsqInfo.HasNistCom">
            <summary>
            Sets or checks whether the WSQ info file has a NIST comment.
            </summary>
        </member>
        <member name="P:Neurotec.Images.WsqInfo.NistCom">
            <summary>
            Retrieves the NIST comment of the WSQ info file.
            </summary>
        </member>
        <member name="T:Neurotec.Images.Wsq">
            <summary>
            Provides functionality for loading and saving images in WSQ
            format.
            </summary>                                                 
        </member>
        <member name="F:Neurotec.Images.Wsq.DefaultBitRate">
            <summary>
            Default WSQ bit rate. 
            </summary>            
        </member>
        <member name="M:Neurotec.Images.Wsq.LoadImage(System.String)">
            <summary>
            Creates NImage object from specified file
            </summary>
            <param name="fileName">Name of a file where WSQ data is
                                   saved.</param>
            <returns>
            NImage object. 
            </returns>                                             
        </member>
        <member name="M:Neurotec.Images.Wsq.LoadImage(System.IntPtr,System.Int32)">
            <summary>
            Creates NImage object from memory buffer.
            </summary>
            <param name="pBuffer">Pointer to memory buffer.</param>
            <param name="bufferSize">Size of memory buffer.</param>
            <returns>
            NImage object. 
            </returns>                                               
        </member>
        <member name="M:Neurotec.Images.Wsq.LoadImage(System.Byte[])">
            <summary>
            Creates NImage object from byte array.
            </summary>
            <param name="buffer">Byte array</param>
            <returns>
            NImage object. 
            </returns>                             
        </member>
        <member name="M:Neurotec.Images.Wsq.LoadImage(Neurotec.IO.NBuffer)">
            <summary>
            Loads an image from a specified buffer.
            </summary>
            <param name="buffer">The source buffer.</param>
            <returns>The loaded image.</returns>
        </member>
        <member name="M:Neurotec.Images.Wsq.LoadImage(System.IO.Stream)">
            <summary>
            Creates NImage object from memory stream.
            </summary>
            <param name="stream">Memory stream which contains data for
                                 WSQ file.</param>
            <returns>
            NImage object.
            </returns>                                                
        </member>
        <member name="M:Neurotec.Images.Wsq.SaveImage(Neurotec.Images.NImage,System.String)">
            <summary>
            Saves NImage object to file in WSQ format.
            </summary>
            <param name="image">A NImage object.</param>
            <param name="fileName">A string that contains the name of the
                                   \file.</param>                        
        </member>
        <member name="M:Neurotec.Images.Wsq.SaveImage(Neurotec.Images.NImage,System.Single,System.String)">
            <summary>
            Saves NImage object to file in WSQ format with specified bit
            rate.
            </summary>
            <param name="image">A NImage object.</param>
            <param name="bitRate">A bit rate (compression level).</param>
            <param name="fileName">A string that contains the name of the
                                   \file.</param>
            <remarks>
            bitRate can be set to DefaultBitRate (0.75) that corresponds
            to 15:1 compression. The lower the bit rate is, the higher is
            the compression level and vice versa. Another common bit rate
            is 2.25 for 5:1 compression.
            </remarks>                                                   
        </member>
        <member name="M:Neurotec.Images.Wsq.SaveImage(Neurotec.Images.NImage)">
            <summary>
            Saves NImage object to file in WSQ format.
            </summary>
            <param name="image">A NImage object.</param>
            <returns>
            NBuffer object which contains saved data.
            </returns>                                  
        </member>
        <member name="M:Neurotec.Images.Wsq.SaveImage(Neurotec.Images.NImage,System.Single)">
            <summary>
            Saves NImage object to byte array in WSQ format with
            specified bit rate.
            </summary>
            <param name="image">A NImage object.</param>
            <param name="bitRate">A bit rate (compression level).</param>
            <returns>
            A byte array.
            </returns>
            <remarks>
            bitRate can be set to DefaultBitRate (0.75) that corresponds
            to 15:1 compression. The lower the bit rate is, the higher is
            the compression level and vice versa. Another common bit rate
            is 2.25 for 5:1 compression.
            </remarks>                                                   
        </member>
        <member name="M:Neurotec.Images.Wsq.SaveImage(Neurotec.Images.NImage,System.IO.Stream)">
            <summary>
            Saves NImage object to stream in WSQ format.
            </summary>
            <param name="image">A NImage object.</param>
            <param name="stream">The data stream used to save the image.</param>
        </member>
        <member name="M:Neurotec.Images.Wsq.SaveImage(Neurotec.Images.NImage,System.Single,System.IO.Stream)">
            <summary>
            Saves NImage object to stream in WSQ format with specified
            bit rate.
            </summary>
            <param name="image">A NImage object.</param>
            <param name="bitRate">A bit rate (compression level).</param>
            <param name="stream">The data stream used to save the image.</param>
            <remarks>
            <paraattr align="justify">
            bitRate can be set to DefaultBitRate (0.75) that corresponds
            to 15:1 compression. The lower the bit rate is, the higher is
            the compression level and vice versa. Another common bit rate
            is 2.25 for 5:1 compression.
            </paraattr>
            </remarks>                                                          
        </member>
        <member name="T:Neurotec.Media.NAudioFormat">
            <summary>
            Defines digital audio file formats and provides methods for
            creating and manipulating audio types using Neurotechnology
            SDK.
            
            
            </summary>                                                 
        </member>
        <member name="T:Neurotec.Media.NMediaFormat">
            <summary>
            Provides methods to retrieve information about media formats.
            </summary>                                                   
        </member>
        <member name="M:Neurotec.Media.NMediaFormat.Equals(System.Object)">
            <summary>
            Checks whether the current media format equals the specified media format object.
            </summary>
            <param name="obj">Media format object.</param>
            <returns>NTrue if the media formats are eqaual; else NFalse.</returns>
        </member>
        <member name="M:Neurotec.Media.NMediaFormat.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Neurotec.Media.NMediaFormat.IsCompatibleWith(Neurotec.Media.NMediaFormat)">
            <summary>
            Checks if media format is compatible with other media format.
            </summary>
            <param name="other">Other media format to check if it is
                                compatible with the first one. </param>
            <returns>
            true, if both media formats are compatible; false, otherwise.
            
            </returns>                                                   
        </member>
        <member name="M:Neurotec.Media.NMediaFormat.op_Equality(Neurotec.Media.NMediaFormat,Neurotec.Media.NMediaFormat)">
            <summary>
            Equality operator used to check if specified operands are
            equal.
            </summary>
            <param name="value1">The first value to check.</param>
            <param name="value2">The second value to check.</param>
            <returns>
            true if the values of its operands are equal, false
            otherwise. 
            </returns>                                               
        </member>
        <member name="M:Neurotec.Media.NMediaFormat.op_Inequality(Neurotec.Media.NMediaFormat,Neurotec.Media.NMediaFormat)">
            <summary>
            The inequality operator used to check if specified operands
            are not equal.
            </summary>
            <param name="value1">The first value to check.</param>
            <param name="value2">The second value to check.</param>
            <returns>
            true if the values of its operands are different, false
            otherwise. 
            </returns>                                                 
        </member>
        <member name="M:Neurotec.Media.NMediaFormat.Equals(Neurotec.Media.NMediaFormat)">
            <summary>
            Checks whether the current media format equal the other media format.
            </summary>
            <param name="other">The other media format.</param>
            <returns>NTrue if the formats are equal; else NFalse.</returns>
        </member>
        <member name="P:Neurotec.Media.NMediaFormat.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Media.NMediaFormat.MediaType">
            <summary>
            Gets or sets media type from/for specified NMediaFormat.
            </summary>
            <value>
            One of media type values. At the moment only Audio and Video
            can be used. 
            </value>                                                    
        </member>
        <member name="P:Neurotec.Media.NMediaFormat.MediaSubtype">
            <summary>
            Gets or sets media subtype from/for specified media format.
            </summary>
            <value>
            Subtype constant to set.
            
            
            
            
            </value>                                                   
        </member>
        <member name="F:Neurotec.Media.NAudioFormat.Unknown">
            Unknown audio format.
        </member>
        <member name="F:Neurotec.Media.NAudioFormat.Pcm">
            Uncompressed PCM audio. 
        </member>
        <member name="F:Neurotec.Media.NAudioFormat.Float">
            Uncompressed IEEE floating-point audio.
        </member>
        <member name="F:Neurotec.Media.NAudioFormat.Dts">
            Digital Theater Systems (DTS) audio.
        </member>
        <member name="F:Neurotec.Media.NAudioFormat.Drm">
            Encrypted audio data used with secure audio path.
        </member>
        <member name="F:Neurotec.Media.NAudioFormat.Msp1">
            MSP1 audio format.
        </member>
        <member name="F:Neurotec.Media.NAudioFormat.Mpeg">
            MPEG-1 audio.
        </member>
        <member name="F:Neurotec.Media.NAudioFormat.MP3">
            MPEG Audio Layer-3 (MP3).
        </member>
        <member name="F:Neurotec.Media.NAudioFormat.DolbyAC3Spdif">
            Dolby AC-3 audio over Sony/Philips Digital Interface
            (S/PDIF).                                           
        </member>
        <member name="F:Neurotec.Media.NAudioFormat.RawAac1">
            Advanced Audio Coding (AAC) (Raw audio data).
        </member>
        <member name="F:Neurotec.Media.NAudioFormat.WMAudioV8">
            Windows Media Audio 8 codec, Windows Media Audio 9 codec, or
            Windows Media Audio 9.1 codec.                              
        </member>
        <member name="F:Neurotec.Media.NAudioFormat.WMAudioV9">
            Windows Media Audio 9 Professional codec or Windows Media
            Audio 9.1 Professional codec.                            
        </member>
        <member name="F:Neurotec.Media.NAudioFormat.WMAudioLossless">
            Windows Media Audio 9 Lossless codec or Windows Media Audio
            9.1 codec.                                                 
        </member>
        <member name="F:Neurotec.Media.NAudioFormat.WmaSpdif">
            Windows Media Audio 9 Professional codec over S/PDIF. 
        </member>
        <member name="F:Neurotec.Media.NAudioFormat.Adts">
            Audio Data Transport Stream (ADTS) stream.
        </member>
        <member name="F:Neurotec.Media.NAudioFormat.Aac">
            Advanced Audio Coding (AAC).
            <remarks>
            The audio stream can contain raw AAC data or AAC data in an
            Audio Data Transport Stream (ADTS) stream.
            </remarks>                                                 
        </member>
        <member name="M:Neurotec.Media.NAudioFormat.MediaSubtypeToString(System.Int32)">
            <summary>
            Converts media sybtype to string.
            </summary>
            <param name="value">Subtype value (int).</param>
            <returns>
            String which contains subtype string value. 
            </returns>                                      
        </member>
        <member name="M:Neurotec.Media.NAudioFormat.MediaSubtypeToString(System.Int32,System.String)">
            <summary>
            Converts media sybtype to string.
            </summary>
            <param name="value">Subtype value (int).</param>
            <param name="format">Reserved.</param>
            <returns>String which contains subtype string value. </returns>
        </member>
        <member name="M:Neurotec.Media.NAudioFormat.#ctor">
            <summary>
            Creates new instance of NAudioFormat. 
            </summary>                            
        </member>
        <member name="P:Neurotec.Media.NAudioFormat.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Media.NAudioFormat.ChannelCount">
            <summary>
            Gets or sets audio channel count set in NAudioFormat.
            </summary>
            <value>
            Audio channel count. 
            </value>                                             
        </member>
        <member name="P:Neurotec.Media.NAudioFormat.SampleRate">
            <summary>
            Gets or sets digital audio sample rate supported by
            NAudioFormat.
            </summary>
            <value>
            \Sample rate supported by NAudioFormat. The value is sample
            rate in hertz (Hz).
            </value>                                                   
        </member>
        <member name="P:Neurotec.Media.NAudioFormat.BitsPerChannel">
            <summary>
            Gets or sets bits per channel value for NAudioFormat.
            </summary>
            <value>
            Bits per channel.
            </value>                                             
        </member>
        <member name="T:Neurotec.Media.NMedia">
            <summary>
            Provides information about NMedia library.
            </summary>                                
        </member>
        <member name="F:Neurotec.Media.NMedia.DllName">
            <summary>
            Name of DLL containing unmanaged part of this class.
            </summary>                                          
        </member>
        <member name="P:Neurotec.Media.NMedia.NativeModule">
            <summary>
            Defines the native module of the object.
            </summary>
        </member>
        <member name="T:Neurotec.Media.NMediaReader">
            <summary>
            Provides methods which can be used to read media data.
            </summary>                                            
        </member>
        <member name="M:Neurotec.Media.NMediaReader.NMediaReaderGetSource(Neurotec.Interop.HNObject,Neurotec.Interop.HNObject@)">
            <summary>
            \ \ 
            </summary>
            <param name="hReader">_nt_</param>
            <param name="hValue">_nt_</param>
            <returns>
            No tables or formatting elements here!!!
            </returns>
            <remarks>
            NObjectUnref shall be called on returned objects when they are no longer used to prevent memory
            leaks.
            </remarks>                                                                                     
        </member>
        <member name="M:Neurotec.Media.NMediaReader.#ctor(Neurotec.Media.NMediaSource,Neurotec.Media.NMediaType,System.Boolean,System.UInt32)">
            <summary>
            Creates new instance of NMediaReader.
            </summary>
            <param name="source">Media source from which
                                 NMediaReader will be created.</param>
            <param name="mediaTypes">Media types supported by
                                     NMediaReader. Can be Audio and
                                     Video (only one at a time or both).
                                     </param>
            <param name="isLive">Flag indicating if media source is
                                 live. If set to true media from
                                 source will be read in real time
                                 (from devices). In this case video
                                 or audio samples will be dropped
                                 until user calls ReadAudioSample or
                                 ReadVideoSample functions. If user
                                 calls these functions too quickly
                                 they are blocked until new video
                                 frame or audio sample appears.<para></para>If
                                 set to false video frames or audio
                                 samples are not dropped and user
                                 can read them in any speed (gets
                                 all samples/frames). When set to
                                 false, NMediaReader works only with
                                 video/audio data saved in files. </param>
            <param name="flags">Flags controlling NMediaReader. </param>
            <remarks>
            These flags can be used (for flags parameter):
              * FlagDoNotUseDirectShow
              * FlagDoNotUseWindowsMediaFoundation
              * FlagPreferDirectShow
            These flags work only on Windows OS. 
            </remarks>                                                        
        </member>
        <member name="M:Neurotec.Media.NMediaReader.#ctor(System.String,Neurotec.Media.NMediaType,System.Boolean,System.UInt32)">
            <summary>
            Creates new instance of NMediaReader from specified file.
            </summary>
            <param name="fileName">\File name. The specified file
                                   should contain media source.</param>
            <param name="mediaTypes">Media types supported by
                                     NMediaReader. Can be Audio and
                                     Video (only one at a time or both).</param>
            <param name="isLive">Flag indicating if media source is
                                 live. If set to true media from
                                 source will be read in real time
                                 (from devices). In this case video
                                 or audio samples will be dropped
                                 until user calls ReadAudioSample or
                                 ReadVideoSample functions. If user
                                 calls these functions too quickly
                                 they are blocked until new video
                                 frame or audio sample appears.<para></para>If
                                 set to false video frames or audio
                                 samples are not dropped and user
                                 can read them in any speed (gets
                                 all samples/frames). When set to
                                 false, NMediaReader works only with
                                 video/audio data saved in files. </param>
            <param name="flags">Flags controlling NMediaReader.</param>
            <remarks>
            These flags can be used (for flags parameter):
              * FlagDoNotUseDirectShow
              * FlagDoNotUseWindowsMediaFoundation
              * FlagPreferDirectShow
            These flags work only on Windows OS. 
            </remarks>                                                          
        </member>
        <member name="M:Neurotec.Media.NMediaReader.#ctor(System.Uri,Neurotec.Media.NMediaType,System.Boolean,System.UInt32)">
            <summary>
            Creates new instance of NMediaReader from specified Url.
            </summary>
            <param name="url">Uniform resource identifier (URI)
                              which contains URL address (address
                              of IP camera). </param>
            <param name="mediaTypes">Media types supported by
                                     NMediaReader. Can be Audio and
                                     Video (only one at a time or both).
                                     </param>
            <param name="isLive">Flag indicating if media source is
                                 live. If set to true media from
                                 source will be read in real time
                                 (from devices). In this case video
                                 or audio samples will be dropped
                                 until user calls ReadAudioSample or
                                 ReadVideoSample functions. If user
                                 calls these functions too quickly
                                 they are blocked until new video
                                 frame or audio sample appears.<para></para>If
                                 set to false video frames or audio
                                 samples are not dropped and user
                                 can read them in any speed (gets
                                 all samples/frames). When set to
                                 false, NMediaReader works only with
                                 video/audio data saved in files. </param>
            <param name="flags">Flags controlling NMediaReader.</param>
            <remarks>
            These flags can be used (for flags parameter):
              * FlagDoNotUseDirectShow
              * FlagDoNotUseWindowsMediaFoundation
              * FlagPreferDirectShow
            These flags work only on Windows OS. 
            </remarks>                                                        
        </member>
        <member name="M:Neurotec.Media.NMediaReader.#ctor(System.String,Neurotec.Media.NMediaType,System.Boolean,System.Boolean,System.UInt32)">
            <summary>
            Creates new instance of NMediaReader from specified file or
            Url.
            </summary>
            <param name="fileNameOrUrl">String representation of file
                                        name or URL. The specified file
                                        should contain media source.</param>
            <param name="mediaTypes">Media types supported by
                                     NMediaReader. Can be Audio and
                                     Video (only one at a time or
                                     both).</param>
            <param name="isLive">Flag indicating if media source
                                 is live. If set to true media
                                 from source will be read in real
                                 time (from devices). In this
                                 case video or audio samples will
                                 be dropped until user calls
                                 ReadAudioSample or
                                 ReadVideoSample functions. If
                                 user calls these functions too
                                 quickly they are blocked until
                                 new video frame or audio sample
                                 appears.<para></para>If set to
                                 false video frames or audio
                                 samples are not dropped and user
                                 can read them in any speed (gets
                                 all samples/frames). When set to
                                 false, NMediaReader works only
                                 with video/audio data saved in
                                 files. </param>
            <param name="isUrl">Flag indicating if media source
                                is from Url (IP camera).</param>
            <param name="flags">Flags controlling NMediaReader.</param>
            <remarks>
            These flags can be used (for flags parameter):
              * FlagDoNotUseDirectShow
              * FlagDoNotUseWindowsMediaFoundation
              * FlagPreferDirectShow
            These flags work only on Windows OS. 
            </remarks>                                                      
        </member>
        <member name="M:Neurotec.Media.NMediaReader.#ctor(Neurotec.Media.NMediaSource,Neurotec.Media.NMediaType,System.Boolean)">
            <summary>
            Creates new instance of NMediaReader.
            </summary>
            <param name="source">Media source from which
                                 NMediaReader will be created.</param>
            <param name="mediaTypes">Media types supported by
                                     NMediaReader. Can be Audio and
                                     Video (only one at a time or both).
                                     </param>
            <param name="isLive">Flag indicating if media source is
                                 live. If set to true media from
                                 source will be read in real time
                                 (from devices). In this case video
                                 or audio samples will be dropped
                                 until user calls ReadAudioSample or
                                 ReadVideoSample functions. If user
                                 calls these functions too quickly
                                 they are blocked until new video
                                 frame or audio sample appears.<para></para>If
                                 set to false video frames or audio
                                 samples are not dropped and user
                                 can read them in any speed (gets
                                 all samples/frames). When set to
                                 false, NMediaReader works only with
                                 video/audio data saved in files. </param>    
        </member>
        <member name="M:Neurotec.Media.NMediaReader.#ctor(System.String,Neurotec.Media.NMediaType,System.Boolean)">
            <summary>
            Creates new instance of NMediaReader from specified file.
            </summary>
            <param name="fileName">\File name. The specified file
                                   should contain media source.</param>
            <param name="mediaTypes">Media types supported by
                                     NMediaReader. Can be Audio and
                                     Video (only one at a time or both).</param>
            <param name="isLive">Flag indicating if media source is
                                 live. If set to true media from
                                 source will be read in real time
                                 (from devices). In this case video
                                 or audio samples will be dropped
                                 until user calls ReadAudioSample or
                                 ReadVideoSample functions. If user
                                 calls these functions too quickly
                                 they are blocked until new video
                                 frame or audio sample appears.<para></para>If
                                 set to false video frames or audio
                                 samples are not dropped and user
                                 can read them in any speed (gets
                                 all samples/frames). When set to
                                 false, NMediaReader works only with
                                 video/audio data saved in files. </param>      
        </member>
        <member name="M:Neurotec.Media.NMediaReader.#ctor(System.Uri,Neurotec.Media.NMediaType,System.Boolean)">
            <summary>
            Creates new instance of NMediaReader from specified Url.
            </summary>
            <param name="url">Uniform resource identifier (URI)
                              which contains URL address (address
                              of IP camera). </param>
            <param name="mediaTypes">Media types supported by
                                     NMediaReader. Can be Audio and
                                     Video (only one at a time or both).
                                     </param>
            <param name="isLive">Flag indicating if media source is
                                 live. If set to true media from
                                 source will be read in real time
                                 (from devices). In this case video
                                 or audio samples will be dropped
                                 until user calls ReadAudioSample or
                                 ReadVideoSample functions. If user
                                 calls these functions too quickly
                                 they are blocked until new video
                                 frame or audio sample appears.<para></para>If
                                 set to false video frames or audio
                                 samples are not dropped and user
                                 can read them in any speed (gets
                                 all samples/frames). When set to
                                 false, NMediaReader works only with
                                 video/audio data saved in files. </param>    
        </member>
        <member name="M:Neurotec.Media.NMediaReader.#ctor(System.String,Neurotec.Media.NMediaType,System.Boolean,System.Boolean)">
            <summary>
            Creates new instance of NMediaReader from specified file or
            Url.
            </summary>
            <param name="fileNameOrUrl">String representation of file
                                        name or URL. The specified file
                                        should contain media source.</param>
            <param name="mediaTypes">Media types supported by
                                     NMediaReader. Can be Audio and
                                     Video (only one at a time or
                                     both).</param>
            <param name="isLive">Flag indicating if media source
                                 is live. If set to true media
                                 from source will be read in real
                                 time (from devices). In this
                                 case video or audio samples will
                                 be dropped until user calls
                                 ReadAudioSample or
                                 ReadVideoSample functions. If
                                 user calls these functions too
                                 quickly they are blocked until
                                 new video frame or audio sample
                                 appears.<para></para>If set to
                                 false video frames or audio
                                 samples are not dropped and user
                                 can read them in any speed (gets
                                 all samples/frames). When set to
                                 false, NMediaReader works only
                                 with video/audio data saved in
                                 files. </param>
            <param name="isUrl">Flag indicating if media source
                                is from Url (IP camera).</param>            
        </member>
        <member name="M:Neurotec.Media.NMediaReader.Start">
            <summary>
            Starts NMediaReader.
            </summary>          
        </member>
        <member name="M:Neurotec.Media.NMediaReader.Stop">
            <summary>
            Stops NMediaReader.
            </summary>         
        </member>
        <member name="M:Neurotec.Media.NMediaReader.Pause">
            <summary>
            Pauses specified NMediaReader.
            </summary>                    
        </member>
        <member name="M:Neurotec.Media.NMediaReader.ReadAudioSample(System.TimeSpan@,System.TimeSpan@)">
            <summary>
            Reads audio sample to NSoundBuffer
            </summary>
            <returns>
            NSoundBuffer which contains audio sample
            </returns>
            <remarks>
            Before using this method user should start NMediaReader using
            Neurotec.Media.NMediaReader.Start method.
            
            For more information on how to use this method see ReadAudio
            and ReadAudioFromDevice tutorials.
            </remarks>
            <param name="timeStamp">Time stamp (from the beginning).
                                    100ns units.</param>
            <param name="duration">Audio sample duration (100ns units).</param>
        </member>
        <member name="M:Neurotec.Media.NMediaReader.ReadAudioSample">
            <summary>
            Reads audio sample to NSoundBuffer
            </summary>
            <returns>
            NSoundBuffer which contains audio sample
            </returns>
            <remarks>
            Before using this method user should start NMediaReader using
            Neurotec.Media.NMediaReader.Start method.
            
            For more information on how to use this method see ReadAudio
            and ReadAudioFromDevice tutorials.
            
            
            </remarks>                                                   
        </member>
        <member name="M:Neurotec.Media.NMediaReader.ReadVideoSample(System.TimeSpan@,System.TimeSpan@)">
            <summary>
            Reads video sample using NMediaReader.
            </summary>
            <returns>
            NImage which contains video sample (frame).
            </returns>
            <remarks>
            Before using this method user should start NMediaReader using
            Neurotec.Media.NMediaReader.Start.
            
            For more information on how to use this method see ReadVideo
            and ReadVideoFromDevice tutorials.
            </remarks>
            <param name="timeStamp">Time stamp (from the beginning).
                                    100ns units. </param>
            <param name="duration">Video sample duration (100ns units).</param>
        </member>
        <member name="M:Neurotec.Media.NMediaReader.ReadVideoSample">
            <summary>
            Reads video sample using NMediaReader.
            </summary>
            <returns>
            NImage which contains video sample (frame).
            </returns>
            <remarks>
            Before using this method user should start NMediaReader using
            Neurotec.Media.NMediaReader.Start.
            
            For more information on how to use this method see ReadVideo
            and ReadVideoFromDevice tutorials.
            
            
            </remarks>                                                   
        </member>
        <member name="P:Neurotec.Media.NMediaReader.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Media.NMediaReader.Source">
            <summary>
            Gets media source (file or device) of the NMediaReader.
            </summary>
            <value>
            Media source which type is NMediaSource.
            </value>                                               
        </member>
        <member name="P:Neurotec.Media.NMediaReader.IsLive">
            <summary>
            Checks if media source which is used by NMediaReader is live.
            </summary>
            <value>
            true if media source is live; false otherwise.
            </value>                                                     
        </member>
        <member name="P:Neurotec.Media.NMediaReader.State">
            <summary>
            Gets NMediaReader state.
            </summary>
            <value>
            One of NMediaState values.
            </value>                  
        </member>
        <member name="P:Neurotec.Media.NMediaReader.Length">
            <summary>
            Gets file length when NMediaReader source is file.
            </summary>
            <value>
            Time interval (TimeSpan) representing file length.
            </value>                                          
        </member>
        <member name="P:Neurotec.Media.NMediaReader.Position">
            <summary>
            Gets or sets NMediaReader position in media source (file).
            </summary>
            <value>
            Time interval (TimeSpan) representing NMediaReader position
            in media source.
            </value>                                                   
        </member>
        <member name="T:Neurotec.Media.NMediaSource">
            <summary>
            Provides methods for working with media source.
            </summary>                                     
        </member>
        <member name="F:Neurotec.Media.NMediaSource.FlagDoNotUseDirectShow">
            Used when user prefers not to use DirecShow for NMediaSource.
        </member>
        <member name="F:Neurotec.Media.NMediaSource.FlagDoNotUseWindowsMediaFoundation">
            Used when user prefers not to use Windows Media Foundation
            for NMediaSource.                                         
        </member>
        <member name="F:Neurotec.Media.NMediaSource.FlagPreferDirectShow">
            Used when user prefers to use DirectShow for NMediaSource.
        </member>
        <member name="F:Neurotec.Media.NMediaSource.FlagAllowDuplicateDevices">
            This field is used to allow enumerating duplicate devices. If
            this field was set and the same device is accessible through
            DirectShow and Windows Media Foundation (Windows 7) then this
            device will be enumerated twice.
            
            
                                                                         
        </member>
        <member name="M:Neurotec.Media.NMediaSource.EnumDevices(Neurotec.Media.NMediaType)">
            <summary>
            Enumerates all source devices by specified media type.
            </summary>
            <param name="mediaType">Device media type. </param>
            <returns>
            Devices array of NMediaSource type. 
            </returns>                                            
        </member>
        <member name="M:Neurotec.Media.NMediaSource.EnumDevices(Neurotec.Media.NMediaType,System.UInt32)">
            <summary>
            Enumerates all source devices by specified media type.
            </summary>
            <param name="mediaType">Device media type. </param>
            <param name="flags">Flags controlling NMediaSource. </param>
            <returns>
            Devices array of NMediaSource type. 
            </returns>                                                  
        </member>
        <member name="M:Neurotec.Media.NMediaSource.FromFile(System.String)">
            <summary>
            Creates NMediaSource from specified file.
            </summary>
            <param name="fileName">String containing file name. </param>
            <returns>
            Media source from file.
            </returns>                                                  
        </member>
        <member name="M:Neurotec.Media.NMediaSource.FromFile(System.String,System.UInt32)">
            <summary>
            Creates NMediaSource from specified file.
            </summary>
            <param name="fileName">String containing file name. </param>
            <param name="flags">Flags controlling NMediaSource.</param>
            <returns>
            Media source from file.
            </returns>
            <remarks>
            Created NMediaSource is used by NMediaReader to read data.
            
            These flags can be used (for flags parameter):
              * FlagDoNotUseDirectShow
              * FlagDoNotUseWindowsMediaFoundation
              * FlagPreferDirectShow
            \Note: these flags work only on Windows OS.
            
            
            </remarks>                                                  
        </member>
        <member name="M:Neurotec.Media.NMediaSource.FromUrl(System.String)">
            <summary>
            Gets the media source from specified URL.
            </summary>
            <param name="url">The URL containing the media source.</param>
            <returns>The media source.</returns>
        </member>
        <member name="M:Neurotec.Media.NMediaSource.FromUrl(System.String,System.UInt32)">
            <summary>
            Gets the media source from specified URL.
            </summary>
            <param name="url">The URL containing the media source.</param>
            <param name="flags">Flags controlling NMediaSource.</param>
            <returns>The media source.</returns>
        </member>
        <member name="M:Neurotec.Media.NMediaSource.FromUrl(System.Uri)">
            <summary>
            Gets the media source from specified URL.
            </summary>
            <param name="url">The URL containing the media source.</param>
            <returns>The media source.</returns>
        </member>
        <member name="M:Neurotec.Media.NMediaSource.FromUrl(System.Uri,System.UInt32)">
            <summary>
            Gets the media source from specified URL.
            </summary>
            <param name="url">The URL containing the media source.</param>
            <param name="flags">Flags controlling NMediaSource.</param>
            <returns>The media source.</returns>
        </member>
        <member name="M:Neurotec.Media.NMediaSource.Equals(System.Object)">
            <summary>
            Checks whether the current NMediaSource equals the specified object.
            </summary>
            <param name="obj">The specified object.</param>
            <returns>NTrue, if objects are equal; else NFalse.</returns>
        </member>
        <member name="M:Neurotec.Media.NMediaSource.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Neurotec.Media.NMediaSource.GetFormats(Neurotec.Media.NMediaType)">
            <summary>
            Gets the media formats of specified media type.
            </summary>
            <param name="mediaType">The specified media type.</param>
            <returns>Array of media formats.</returns>
        </member>
        <member name="M:Neurotec.Media.NMediaSource.GetCurrentFormat(Neurotec.Media.NMediaType)">
            <summary>
            Gets the current media format of the specified media type.
            </summary>
            <param name="mediaType">The specified media type.</param>
            <returns>The current media format.</returns>
        </member>
        <member name="M:Neurotec.Media.NMediaSource.SetCurrentFormat(Neurotec.Media.NMediaType,Neurotec.Media.NMediaFormat)">
            <summary>
            Sets the current media format of the specified media type to specified value.
            </summary>
            <param name="mediaType">The specified media type.</param>
            <param name="format">New media format value.</param>
        </member>
        <member name="M:Neurotec.Media.NMediaSource.op_Equality(Neurotec.Media.NMediaSource,Neurotec.Media.NMediaSource)">
            <summary>
            Checks whether two NMediaSource values are equal.
            </summary>
            <param name="value1">First NMediaSource value.</param>
            <param name="value2">Second NMediaSource value.</param>
            <returns>NTrue, if NMediaSource values are equal; else NFalse.</returns>
        </member>
        <member name="M:Neurotec.Media.NMediaSource.op_Inequality(Neurotec.Media.NMediaSource,Neurotec.Media.NMediaSource)">
            <summary>
            Checks whether two NMediaSource values are not equal.
            </summary>
            <param name="value1">First NMediaSource value.</param>
            <param name="value2">Second NMediaSource value.</param>
            <returns>NTrue, if NMediaSource values are not equal; else NFalse.</returns>
        </member>
        <member name="M:Neurotec.Media.NMediaSource.Equals(Neurotec.Media.NMediaSource)">
            <summary>
            Determines whether the specified NMediaSource is equal to the
            current NMediaSource.
            </summary>
            <param name="other">The NMediaSource object to compare with
                                the current NMediaSource.</param>
            <returns>
            true if the specified NMediaSource is equal to the current
            NMediaSource; otherwise, false.
            </returns>                                                   
        </member>
        <member name="P:Neurotec.Media.NMediaSource.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Media.NMediaSource.Id">
            <summary>
            Gets the ID of the current media source.
            </summary>
        </member>
        <member name="P:Neurotec.Media.NMediaSource.DisplayName">
            <summary>
            Gets the display name of the current media source.
            </summary>
        </member>
        <member name="P:Neurotec.Media.NMediaSource.MediaType">
            <summary>
            Gets the media type of the current media source.
            </summary>
        </member>
        <member name="T:Neurotec.Media.NMediaType">
            <summary>
            Enumerates media type values.
            </summary>                   
        </member>
        <member name="F:Neurotec.Media.NMediaType.None">
            <summary>
            Media type was not recognized.
            </summary>
        </member>
        <member name="F:Neurotec.Media.NMediaType.Audio">
            <summary>
            Indicates that media type is audio.
            </summary>
        </member>
        <member name="F:Neurotec.Media.NMediaType.Video">
            <summary>
            Indicates that media type is video.
            </summary>
        </member>
        <member name="T:Neurotec.Media.NMediaState">
            <summary>
            Enumerates media state values.
            </summary>                    
        </member>
        <member name="F:Neurotec.Media.NMediaState.Stopped">
            <summary>
            Indicates stopped media stream.
            </summary>
        </member>
        <member name="F:Neurotec.Media.NMediaState.Paused">
            <summary>
            Indicates paused media stream.
            </summary>
        </member>
        <member name="F:Neurotec.Media.NMediaState.Running">
            <summary>
            Indicates running media stream.
            </summary>
        </member>
        <member name="T:Neurotec.Media.NVideoInterlaceMode">
            Represents video interlace mode.
        </member>
        <member name="F:Neurotec.Media.NVideoInterlaceMode.Unknown">
            <summary>
            Unknown video mode.
            </summary>
        </member>
        <member name="F:Neurotec.Media.NVideoInterlaceMode.Interlaced">
            <summary>
            Interlaced video mode.
            </summary>
        </member>
        <member name="F:Neurotec.Media.NVideoInterlaceMode.Progressive">
            <summary>
            Progressive video mode.
            </summary>
        </member>
        <member name="T:Neurotec.Media.NMediaTypes">
            <summary>
            Provides methods to check if media type is valid.
            </summary>                                       
        </member>
        <member name="M:Neurotec.Media.NMediaTypes.IsMediaTypeValid(Neurotec.Media.NMediaType)">
            <summary>
            Checks whether the specified media type is valid.
            </summary>
            <param name="value">The media type.</param>
            <returns>NTrue if the media type is valid; else NFalse.</returns>
        </member>
        <member name="M:Neurotec.Media.NMediaTypes.IsMediaTypeValidSingle(Neurotec.Media.NMediaType)">
            <summary>
            Checks if the single value passed to a method is a valid
            media type.
            </summary>
            <param name="value">One of NMediaTypes values to check. </param>
            <returns>
            true if specified value is valid; false, otherwise.
            </returns>                                                      
        </member>
        <member name="M:Neurotec.Media.NMediaTypes.IsVideoInterlaceModeValid(Neurotec.Media.NVideoInterlaceMode)">
            <summary>
            Checks whether the video interlace mode is valid.
            </summary>
            <param name="value">The video interlace mode.</param>
            <returns>NTrue, if the video interlace mode is valid; else NFalse.</returns>
        </member>
        <member name="P:Neurotec.Media.NMediaTypes.NMediaTypeNativeType">
            <summary>
            Defines the native type of the media type.
            </summary>
        </member>
        <member name="P:Neurotec.Media.NMediaTypes.NMediaStateNativeType">
            <summary>
            Defines the native type of the media state.
            </summary>
        </member>
        <member name="P:Neurotec.Media.NMediaTypes.NVideoInterlaceModeNativeType">
            <summary>
            Defines the native type of the video interlace mode.
            </summary>
        </member>
        <member name="P:Neurotec.Media.NMediaTypes.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="T:Neurotec.Media.NExtraChannel">
            <summary>
            Enumerates extra channel options.
            </summary>
        </member>
        <member name="F:Neurotec.Media.NExtraChannel.None">
            <summary>
            No extra channel.
            </summary>
        </member>
        <member name="F:Neurotec.Media.NExtraChannel.Alpha">
            <summary>
            Alpha channel.
            </summary>
        </member>
        <member name="F:Neurotec.Media.NExtraChannel.PAlpha">
            <summary>
            PAlpha channel.
            </summary>
        </member>
        <member name="T:Neurotec.Media.NChannelFormat">
            <summary>
            Enumerates channel format options.
            </summary>
        </member>
        <member name="F:Neurotec.Media.NChannelFormat.UnsignedInteger">
            <summary>
            Unsigned integer (uint).
            </summary>
        </member>
        <member name="F:Neurotec.Media.NChannelFormat.SignedInteger">
            <summary>
            Signed integer (int).
            </summary>
        </member>
        <member name="F:Neurotec.Media.NChannelFormat.FloatingPoint">
            <summary>
            Floating point number (float).
            </summary>
        </member>
        <member name="T:Neurotec.Media.NSampleFormat">
            <summary>
            Provides methods to retrieve information about sample formats. 
            </summary>
        </member>
        <member name="F:Neurotec.Media.NSampleFormat.MaxChannelCount">
            <summary>
            Defines the maximum number of channels.
            </summary>
        </member>
        <member name="M:Neurotec.Media.NSampleFormat.IsExtraChannelValid(Neurotec.Media.NExtraChannel)">
            <summary>
            Checks whether the specified extra channel is valid.
            </summary>
            <param name="value">The extra channel.</param>
            <returns>NTrue if the channel is valid; else NFalse.</returns>
        </member>
        <member name="M:Neurotec.Media.NSampleFormat.IsChannelFormatValid(Neurotec.Media.NChannelFormat)">
            <summary>
            Checks whether the specified channel format is valid.
            </summary>
            <param name="value">The channel format.</param>
            <returns>NTrue if the channel format is valid; else NFalse.</returns>
        </member>
        <member name="P:Neurotec.Media.NSampleFormat.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Media.NSampleFormat.NExtraChannelNativeType">
            <summary>
            Defines the native type of the extra channel.
            </summary>
        </member>
        <member name="P:Neurotec.Media.NSampleFormat.NChannelFormatNativeType">
            <summary>
            Defines the native type of the channel format.
            </summary>
        </member>
        <member name="T:Neurotec.Media.NVideoFormat">
            <summary>
            Class represents video format. Each video source supports one
            or more video formats. Video format is used to decode
            (encode) video stream and extract (encode) each video frame.
            </summary>                                                   
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.Unknown">
            Value for unknown video format.
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.Rgb24">
            Value for video format RGB, 24 bpp.
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.Argb32">
            Value for video format RGB, 32 bpp with alpha channel.
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.Rgb32">
            Value for video format RGB, 32 bpp.
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.Rgb555">
            Value for video format RGB 555, 16 bpp.
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.Rgb565">
            Value for video format RGB 565, 16 bpp.
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.Rgb8">
            Value for video format RGB, 8bpp.
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.L8">
            Value for video format L8.
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.L16">
            Value for video format L16.
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.AI44">
            Value for video format AI44.
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.Ayuv">
            Value for video format AYUV.
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.Yuy2">
            Value for video format YUY2.
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.Yvyu">
            Value for video format YVYU.
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.Yvu9">
            Value for video format YVU9.
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.Uyvy">
            Value for video format UYVY.
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.NV11">
            Value for video format NV11.
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.NV12">
            Value for video format NV12.
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.YV12">
            Value for video format YV12.
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.I420">
            Value for video format I420.
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.Iyuv">
            Value for video format IYUV.
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.Y210">
            Value for video format Y210.
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.Y216">
            Value for video format Y216.
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.Y410">
            Value for video format Y40.
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.Y416">
            Value for video format Y416.
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.Y41P">
            Value for video format Y41P.
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.Y41T">
            Value for video format Y41T.
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.Y42T">
            Value for video format Y42T.
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.P210">
            Value for video format P210.
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.P216">
            Value for video format P216.
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.P010">
            Value for video format P010.
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.P016">
            Value for video format P016.
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.V210">
            Value for video format V210.
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.V216">
            Value for video format V216.
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.V410">
            Value for video format V40.
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.MP43">
            Value for video format Microsoft MPEG 4 codec version 3.
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.MP4S">
            Value for video format ISO MPEG 4 codec version 1.
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.M4S2">
            Value for video format MPEG-4 part 2 video.
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.MP4V">
            Value for video format MPEG-4 part 2 video.
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.Wmv1">
            Value for video format Windows Media Video codec version 7.
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.Wmv2">
            Value for video format Windows Media Video 8 codec.
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.Wmv3">
            Value for video format Windows Media Video 9 codec.
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.Wvc1">
            Value for video format SMPTE 421M (&quot;VC-1&quot;).
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.Mss1">
            Value for video format Windows Media Screen codec version 1.
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.Mss2">
            Value for video format Windows Media Video 9 Screen codec.
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.Mpg1">
            Value for video format MPEG-1 video.
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.Dvsl">
            Value for video format SD-DVCR (525-60 or 625-50).
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.Dvsd">
            Value for video format SDL-DVCR (525-60 or 625-50).
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.Dvhd">
            Value for video format HD-DVCR (1125-60 or 1250-50).
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.DV25">
            Value for video format DVCPRO 25 (525-60 or 625-50).
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.DV50">
            Value for video format DVCPRO 50 (525-60 or 625-50).
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.Dvh1">
            Value for video format DVC/DV Video.
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.Dvc">
            Value for video format DVC/DV Video.
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.H264">
            Value for video format H.264.
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.Mjpg">
            Value for video format Motion JPEG.
        </member>
        <member name="F:Neurotec.Media.NVideoFormat.DX50">
            Value for video format DX50.
        </member>
        <member name="M:Neurotec.Media.NVideoFormat.MediaSubtypeToString(System.Int32)">
            <summary>
            Creates media subtype representing string.
            </summary>
            <param name="value">Video format value.</param>
            <returns>
            Media subtype representing string.
            </returns>                                     
        </member>
        <member name="M:Neurotec.Media.NVideoFormat.MediaSubtypeToString(System.Int32,System.String)">
            <summary>
            Creates media subtype representing string.
            </summary>
            <param name="value">Video format value.</param>
            <param name="format">Reserved.</param>
            <returns>Media subtype representing string.</returns>
        </member>
        <member name="M:Neurotec.Media.NVideoFormat.#ctor">
            <summary>
            Default NVideoFormat constructor. NVideoFormat object can be
            constructed to setup video device in user defined format.
            </summary>                                                  
        </member>
        <member name="P:Neurotec.Media.NVideoFormat.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Media.NVideoFormat.Width">
            \ \ 
            <summary>
            Gets or sets video format frame width.
            </summary>
            <value>
            Value represents video frame width in pixels.
            </value>                                     
        </member>
        <member name="P:Neurotec.Media.NVideoFormat.Height">
            <summary>
            Gets or sets video format frame height.
            </summary>
            <value>
            Value represents video frame height in pixels.
            </value>                                      
        </member>
        <member name="P:Neurotec.Media.NVideoFormat.FrameRate">
            <summary>
            Gets or sets video format frame rate.
            </summary>
            <value>
            Value represents video frames per second rate.
            </value>                                      
        </member>
        <member name="P:Neurotec.Media.NVideoFormat.InterlaceMode">
            <summary>
            Gets or sets video format <see cref="T:Neurotec.Media.NVideoInterlaceMode" text="interlace mode"/>.
            </summary>
            <value>
            Value represents video interlace mode. 
            </value>                                                                                          
        </member>
        <member name="P:Neurotec.Media.NVideoFormat.PixelAspectRatio">
            \ \ 
            <summary>
            Gets or sets video format pixel aspect ratio.
            </summary>
            <value>
            Value represents pixel aspect ratio.
            </value>                                     
        </member>
        <member name="T:Neurotec.Sound.NSoundBuffer">
            <summary>
            Provides functionality for work with sound buffer.
            </summary>                                        
        </member>
        <member name="F:Neurotec.Sound.NSoundBuffer.FlagAllSrc">
            For internal use.
        </member>
        <member name="F:Neurotec.Sound.NSoundBuffer.FlagAllDstAndSrc">
            For internal use.
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.#cctor">
            For internal use.
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.Copy(Neurotec.Sound.NSoundFormat,System.Int32,Neurotec.IO.NBuffer,System.Int32,System.Int32,Neurotec.Sound.NSoundFormat,System.Int32,Neurotec.IO.NBuffer,System.Int32,System.Int32,System.Int32)">
            <summary>
            Copies the source sound buffer to the destination sound buffer.
            </summary>
            <param name="srcSoundFormat">Source sound format.</param>
            <param name="srcSampleRate">Source sample rate.</param>
            <param name="srcSamples">NBuffer containing source samples.</param>
            <param name="srcSampleCount">Source sample count.</param>
            <param name="srcSampleIndex">Source sample index.</param>
            <param name="dstSoundFormat">Destination sound format.</param>
            <param name="dstSampleRate">Destination sample rate.</param>
            <param name="dstSamples">NBuffer containing destination samples.</param>
            <param name="dstSampleCount">Destination sample count.</param>
            <param name="dstSampleIndex">Destination sample index.</param>
            <param name="sampleCount">Number of samples.</param>
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.Copy(Neurotec.Sound.NSoundFormat,System.Int32,Neurotec.IO.NBuffer,System.Int32,System.Int32,Neurotec.Sound.NSoundFormat,System.Int32,Neurotec.IO.NBuffer,System.Int32,System.Int32,System.Int32,System.UInt32)">
            <summary>
            Copies the source sound buffer to the destination sound buffer.
            </summary>
            <param name="srcSoundFormat">Source sound format.</param>
            <param name="srcSampleRate">Source sample rate.</param>
            <param name="srcSamples">NBuffer containing source samples.</param>
            <param name="srcSampleCount">Source sample count.</param>
            <param name="srcSampleIndex">Source sample index.</param>
            <param name="dstSoundFormat">Destination sound format.</param>
            <param name="dstSampleRate">Destination sample rate.</param>
            <param name="dstSamples">NBuffer containing destination samples.</param>
            <param name="dstSampleCount">Destination sample count.</param>
            <param name="dstSampleIndex">Destination sample index.</param>
            <param name="sampleCount">Number of samples.</param>
            <param name="flags">Must be zero.</param>
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.Copy(Neurotec.Sound.NSoundFormat,System.Int32,System.Array,System.Array,Neurotec.IO.NBuffer,System.Int32,System.Int32,Neurotec.Sound.NSoundFormat,System.Int32,System.Array,System.Array,Neurotec.IO.NBuffer,System.Int32,System.Int32,System.Int32,System.UInt32)">
            <summary>
            Copies the source sound buffer to the destination sound buffer.
            </summary>
            <param name="srcSoundFormat">Source sound format.</param>
            <param name="srcSampleRate">Source sample rate.</param>
            <param name="srcMinValue">The minimum sound sample value of the source sound buffer.</param>
            <param name="srcMaxValue">The maximum sound sample value of the source sound buffer.</param>
            <param name="srcSamples">NBuffer containing source samples.</param>
            <param name="srcSampleCount">Source sample count.</param>
            <param name="srcSampleIndex">Source sample index.</param>
            <param name="dstSoundFormat">Destination sound format.</param>
            <param name="dstSampleRate">Destination sample rate.</param>
            <param name="dstMinValue">The minimum sound sample value of the destination sound buffer.</param>
            <param name="dstMaxValue">The maximum sound sample value of the destination sound buffer.</param>
            <param name="dstSamples">NBuffer containing destination samples.</param>
            <param name="dstSampleCount">Destination sample count.</param>
            <param name="dstSampleIndex">Destination sample index.</param>
            <param name="sampleCount">Number of samples.</param>
            <param name="flags">Must be zero.</param>
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.Copy(Neurotec.Sound.NSoundBuffer,System.Int32,Neurotec.Sound.NSoundBuffer,System.Int32,System.Int32)">
            <summary>
            Copies specified sound interval of the NSoundBuffer to other
            NSoundBuffer object.
            </summary>
            <param name="srcSoundBuffer">NSoundBuffer object to copy.</param>
            <param name="sampleIndex">Start of the interval to copy.</param>
            <param name="dstSoundBuffer">A destination NSoundBuffer object.
                                   Specified interval will be
                                   copied to this object. </param>
            <param name="dstSampleIndex">The index in the destination sample array where to copy.</param>
            <param name="sampleCount">Count of samples to copy.</param>
            <exception cref="T:System.ArgumentNullException">srcSoundBuffer or dstSoundBuffer
                                                    has null value.</exception>
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.GetWrapper(Neurotec.Sound.NSoundFormat,System.Int32,System.Int32,Neurotec.IO.NBuffer)">
            <summary>
            Creates Neurotec.Sound.NSoundBuffer object wrapper.
            </summary>
            <param name="soundFormat">The buffer sound format.</param>
            <param name="sampleRate">The buffer sample rate.</param>
            <param name="sampleCount">The sample count to wrap.</param>
            <param name="samples">The buffer with sound data.</param>
            <returns>
            Neurotec.Sound.NSoundBuffer object.
            </returns>
            <seealso cref="T:Neurotec.Sound.NSoundFormat"/>
            <seealso cref="P:Neurotec.Sound.NSoundBuffer.SampleRate"/>                             
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.GetWrapper(Neurotec.Sound.NSoundFormat,System.Int32,System.Int32,Neurotec.IO.NBuffer,System.UInt32)">
            <summary>
            Creates Neurotec.Sound.NSoundBuffer object wrapper.
            </summary>
            <param name="soundFormat">The buffer sound format.</param>
            <param name="sampleRate">The buffer sample rate.</param>
            <param name="sampleCount">The sample count to wrap.</param>
            <param name="samples">The buffer with sound data.</param>
            <param name="flags">Bitwise combination of zero or
                                more flags that controls behavior
                                of the function. This parameter is
                                reserved, must be zero.</param>
            <returns>
            Neurotec.Sound.NSoundBuffer object.
            </returns>
            <seealso cref="T:Neurotec.Sound.NSoundFormat"/>
            <seealso cref="P:Neurotec.Sound.NSoundBuffer.SampleRate"/>                               
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.GetWrapper(Neurotec.Sound.NSoundFormat,System.Int32,System.Int32,Neurotec.IO.NBuffer,System.Int32,System.Int32)">
            <summary>
            Creates Neurotec.Sound.NSoundBuffer object wrapper.
            </summary>
            <param name="soundFormat">The buffer sound format.</param>
            <param name="sampleRate">The buffer sample rate.</param>
            <param name="srcSampleCount">The source sample count.</param>
            <param name="samples">The buffer with sound data.</param>
            <param name="sampleIndex">Starting point in buffer from
                                      witch to create sound buffer
                                      wrapper.</param>
            <param name="sampleCount">The sample count to wrap.</param>
            <returns>
            Neurotec.Sound.NSoundBuffer object.
            </returns>
            <seealso cref="T:Neurotec.Sound.NSoundFormat"/>
            <seealso cref="P:Neurotec.Sound.NSoundBuffer.SampleRate"/>                                 
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.GetWrapper(Neurotec.Sound.NSoundFormat,System.Int32,System.Int32,Neurotec.IO.NBuffer,System.Int32,System.Int32,System.UInt32)">
            <summary>
            Creates Neurotec.Sound.NSoundBuffer object wrapper.
            </summary>
            <param name="soundFormat">The buffer sound format.</param>
            <param name="sampleRate">The buffer sample rate.</param>
            <param name="srcSampleCount">The source sample count.</param>
            <param name="samples">The buffer with sound data.</param>
            <param name="sampleIndex">Starting point in buffer from
                                      witch to create sound buffer
                                      wrapper.</param>
            <param name="sampleCount">The sample count to wrap.</param>
            <param name="flags">Bitwise combination of zero or
                                more flags that controls
                                behavior of the function. This
                                parameter is reserved, must be
                                zero.</param>
            <returns>
            Neurotec.Sound.NSoundBuffer object.
            </returns>  
            <seealso cref="T:Neurotec.Sound.NSoundFormat"/>
            <seealso cref="P:Neurotec.Sound.NSoundBuffer.SampleRate"/>  		
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.GetWrapper(Neurotec.Sound.NSoundBuffer,System.Int32,System.Int32)">
            <summary>
            Creates Neurotec.Sound.NSoundBuffer object wrapper.
            </summary>
            <param name="srcSoundBuffer">Sound buffer that can be
                                         wrapped.</param>
            <param name="sampleIndex">Starting point in sound buffer
                                      from witch to create sound
                                      buffer wrapper.</param>
            <param name="sampleCount">The sample count to wrap.</param>
            <returns>
            Neurotec.Sound.NSoundBuffer object.
            </returns>                                                 
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.GetWrapper(Neurotec.Sound.NSoundBuffer,System.Int32,System.Int32,System.UInt32)">
            <summary>
            Creates Neurotec.Sound.NSoundBuffer object wrapper.
            </summary>
            <param name="srcSoundBuffer">Sound buffer that can be
                                         wrapped.</param>
            <param name="sampleIndex">Starting point in sound buffer
                                      from witch to create sound
                                      buffer wrapper.</param>
            <param name="sampleCount">The sample count to wrap.</param>
            <param name="flags">Bitwise combination of zero or
                                more flags that controls
                                behavior of the function. This
                                parameter is reserved, must be
                                zero.</param>
            <returns>
            Neurotec.Sound.NSoundBuffer object.
            </returns>                                                 
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.Create(Neurotec.Sound.NSoundFormat,System.Int32,System.Int32)">
            <summary>
            Creates sound buffer.
            </summary>
            <param name="soundFormat">One of the values Neurotec.Sound.NSoundFormat.</param>
            <param name="sampleRate">The buffer sample rate.</param>
            <param name="sampleCount">The buffer sample count.</param>
            <returns>
            Created sound buffer.
            </returns>
            <seealso cref="T:Neurotec.Sound.NSoundFormat"/>
            <seealso cref="P:Neurotec.Sound.NSoundBuffer.SampleRate"/>  
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.Create(Neurotec.Sound.NSoundFormat,System.Int32,System.Int32,System.UInt32)">
            <summary>
            Creates sound buffer.
            </summary>
            <param name="soundFormat">One of the values
                                      Neurotec.Sound.NSoundFormat.</param>
            <param name="sampleRate">The buffer sample rate.</param>
            <param name="sampleCount">The buffer sample count.</param>
            <param name="flags">Bitwise combination of zero or
                                more flags that controls behavior
                                of the function. This parameter is
                                reserved, must be zero.</param>
            <returns>
            Created sound buffer.
            </returns>
            <seealso cref="T:Neurotec.Sound.NSoundFormat"/>
            <seealso cref="P:Neurotec.Sound.NSoundBuffer.SampleRate"/>                                  
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.FromData(Neurotec.Sound.NSoundFormat,System.Int32,System.Int32,Neurotec.IO.NBuffer)">
            <summary>
            Creates sound buffer from Neurotec.IO.NBuffer.
            </summary>
            <param name="soundFormat">The buffer sound format.</param>
            <param name="sampleRate">The buffer sample rate.</param>
            <param name="sampleCount">The buffer sample count.</param>
            <param name="samples">The buffer with sound data.</param>
            <returns>
            Created sound buffer.
            </returns>
            <seealso cref="T:Neurotec.Sound.NSoundFormat"/>
            <seealso cref="P:Neurotec.Sound.NSoundBuffer.SampleRate"/>                         
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.FromData(Neurotec.Sound.NSoundFormat,System.Int32,System.Int32,Neurotec.IO.NBuffer,System.UInt32)">
            <summary>
            Creates sound buffer from Neurotec.IO.NBuffer.
            </summary>
            <param name="soundFormat">The buffer sound format.</param>
            <param name="sampleRate">The buffer sample rate.</param>
            <param name="sampleCount">The buffer with sound data.</param>
            <param name="samples">The buffer with sound data.</param>
            <param name="flags">Bitwise combination of zero or
                                more flags that controls behavior
                                of the function. This parameter is
                                reserved, must be zero.</param>
            <returns>
            Created sound buffer.
            </returns>
            <seealso cref="T:Neurotec.Sound.NSoundFormat"/>
            <seealso cref="P:Neurotec.Sound.NSoundBuffer.SampleRate"/>                                
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.FromData(Neurotec.Sound.NSoundFormat,System.Int32,System.Int32,Neurotec.IO.NBuffer,System.Int32,System.Int32)">
            <summary>
            Creates sound buffer from Neurotec.IO.NBuffer .
            </summary>
            <param name="soundFormat">The buffer sound format.</param>
            <param name="sampleRate">The buffer sample rate.</param>
            <param name="srcSampleCount">The source buffer sample count.</param>
            <param name="samples">The buffer with sound data.</param>
            <param name="sampleIndex">Starting point in buffer from
                                      witch to create buffer.</param>
            <param name="sampleCount">The number of sample count to
                                      create.</param>
            <returns>
            Created sound buffer.
            </returns>
            <seealso cref="T:Neurotec.Sound.NSoundFormat"/>
            <seealso cref="P:Neurotec.Sound.NSoundBuffer.SampleRate"/>                                         
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.FromData(Neurotec.Sound.NSoundFormat,System.Int32,System.Int32,Neurotec.IO.NBuffer,System.Int32,System.Int32,System.UInt32)">
            <summary>
            Creates sound buffer from Neurotec.IO.NBuffer.
            </summary>
            <param name="soundFormat">The buffer sound format.</param>
            <param name="sampleRate">The buffer sample rate.</param>
            <param name="srcSampleCount">The source buffer sample count.</param>
            <param name="samples">The buffer with sound data.</param>
            <param name="sampleIndex">Starting point in buffer from
                                      witch to create buffer.</param>
            <param name="sampleCount">The number of sample count to
                                      create.</param>
            <param name="flags">Bitwise combination of zero or
                                more flags that controls
                                behavior of the function. This
                                parameter is reserved, must be
                                zero.</param>
            <returns>
            Created sound buffer.
            </returns>
            <seealso cref="T:Neurotec.Sound.NSoundFormat"/>
            <seealso cref="P:Neurotec.Sound.NSoundBuffer.SampleRate"/>                                     
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.FromSoundBuffer(Neurotec.Sound.NSoundFormat,Neurotec.Sound.NSoundBuffer)">
            <summary>
            Creates sound buffer from other sound buffer.
            </summary>
            <param name="soundFormat">The buffer sound format.</param>
            <param name="srcSoundBuffer">The sound buffer.</param>
            <returns>
            Created sound buffer.
            </returns>
            <seealso cref="T:Neurotec.Sound.NSoundFormat"/>          
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.FromSoundBuffer(Neurotec.Sound.NSoundFormat,Neurotec.Sound.NSoundBuffer,System.UInt32)">
            <summary>
            Creates sound buffer from other sound buffer.
            </summary>
            <param name="soundFormat">The buffer sound format.</param>
            <param name="srcSoundBuffer">The sound buffer in sound
                                         buffer.</param>
            <param name="flags">Bitwise combination of zero or
                                more flags that controls
                                behavior of the function. This
                                parameter is reserved, must be
                                zero.</param>
            <returns>
            Created sound buffer.
            </returns>
            <seealso cref="T:Neurotec.Sound.NSoundFormat"/>             
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.FromSoundBuffer(Neurotec.Sound.NSoundFormat,Neurotec.Sound.NSoundBuffer,System.Int32,System.Int32)">
            <summary>
            Creates sound buffer from other sound buffer.
            </summary>
            <param name="soundFormat">The buffer sound format.</param>
            <param name="srcSoundBuffer">The sound buffer.</param>
            <param name="sampleIndex">Starting point in buffer from
                                      witch to create sound buffer.</param>
            <param name="sampleCount">The sample count to create in
                                      sound buffer.</param>
            <returns>
            Created sound buffer.
            </returns>
            <seealso cref="T:Neurotec.Sound.NSoundFormat"/>
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.FromSoundBuffer(Neurotec.Sound.NSoundFormat,Neurotec.Sound.NSoundBuffer,System.Int32,System.Int32,System.UInt32)">
            <summary>
            Creates sound buffer from other sound buffer.
            </summary>
            <param name="soundFormat">The buffer sound format.</param>
            <param name="srcSoundBuffer">The sound buffer.</param>
            <param name="sampleIndex">Starting point in buffer from
                                      witch to create sound buffer.</param>
            <param name="sampleCount">The sample count to create in
                                      sound buffer.</param>
            <param name="flags">Bitwise combination of zero or
                                more flags that controls
                                behavior of the function. This
                                parameter is reserved, must be
                                zero.</param>
            <returns>
            Created sound buffer.
            </returns>
            <seealso cref="T:Neurotec.Sound.NSoundFormat"/>
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.FromFile(System.String)">
            <summary>
            Creates a sound buffer from the specified file.
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns>Created sound buffer.</returns>
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.FromFile(System.String,System.UInt32)">
            <summary>
            Creates a sound buffer from the specified file.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="flags">Reserved; must be zero.</param>
            <returns>Created sound buffer.</returns>
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.FromMemory(System.Byte[])">
            <summary>
            Creates a sound buffer from the specified byte array.
            </summary>
            <param name="buffer">The byte array.</param>
            <returns>Created sound buffer.</returns>
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.FromMemory(Neurotec.IO.NBuffer)">
            <summary>
            Creates a sound buffer from the specified NBuffer.
            </summary>
            <param name="buffer">The NBuffer.</param>
            <returns>Created sound buffer.</returns>
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.FromMemory(Neurotec.IO.NBuffer,System.UInt32)">
            <summary>
            Creates a sound buffer from the specified NBuffer.
            </summary>
            <param name="buffer">The NBuffer.</param>
            <param name="flags">Reserved; must be zero.</param>
            <returns>Created sound buffer.</returns>
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.FromMemory(Neurotec.IO.NBuffer,System.UInt32,System.Int32@)">
            <summary>
            Creates a sound buffer from the specified NBuffer.
            </summary>
            <param name="buffer">The NBuffer.</param>
            <param name="flags">Reserved; must be zero.</param>
            <param name="size">[out] Size of the NBuffer.</param>
            <returns>Created sound buffer.</returns>
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.FromStream(System.IO.Stream)">
            <summary>
            Creates a sound buffer from the specified stream.
            </summary>
            <param name="stream">The stream.</param>
            <returns>Created sound buffer.</returns>
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.FromStream(System.IO.Stream,System.UInt32)">
            <summary>
            Creates a sound buffer from the specified stream.
            </summary>
            <param name="stream">The stream.</param>
            <param name="flags">Reserved; must be zero.</param>
            <returns>Created sound buffer.</returns>
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.CopyFrom(Neurotec.Sound.NSoundFormat,System.Int32,System.Int32,Neurotec.IO.NBuffer,System.Int32)">
            <summary>
            Copies the data from the specified sound buffer to the current sound buffer.
            </summary>
            <param name="srcSoundFormat">Source sound format.</param>
            <param name="srcSampleRate">Source sample rate.</param>
            <param name="srcSampleCount">Source sample count.</param>
            <param name="srcSamples">NBuffer containing source samples.</param>
            <param name="sampleIndex">Sample index.</param>
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.CopyFrom(Neurotec.Sound.NSoundFormat,System.Int32,System.Int32,Neurotec.IO.NBuffer,System.Int32,System.UInt32)">
            <summary>
            Copies the data from the specified sound buffer to the current sound buffer.
            </summary>
            <param name="srcSoundFormat">Source sound format.</param>
            <param name="srcSampleRate">Source sample rate.</param>
            <param name="srcSampleCount">Source sample count.</param>
            <param name="srcSamples">NBuffer containing source samples.</param>
            <param name="sampleIndex">Sample index.</param>
            <param name="flags">Must be zero.</param>
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.CopyFrom(Neurotec.Sound.NSoundFormat,System.Int32,System.Int32,Neurotec.IO.NBuffer,System.Int32,System.Int32,System.Int32)">
            <summary>
            Copies the data from the specified sound buffer to the current sound buffer.
            </summary>
            <param name="srcSoundFormat">Source sound format.</param>
            <param name="srcSampleRate">Source sample rate.</param>
            <param name="srcSampleCount">Source sample count.</param>
            <param name="samples">NBuffer containing the samples.</param>
            <param name="srcSampleIndex">Source sample index.</param>
            <param name="sampleIndex">Sample index.</param>
            <param name="sampleCount">Sample count.</param>
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.CopyFrom(Neurotec.Sound.NSoundFormat,System.Int32,System.Int32,Neurotec.IO.NBuffer,System.Int32,System.Int32,System.Int32,System.UInt32)">
            <summary>
            Copies the data from the specified sound buffer to the current sound buffer.
            </summary>
            <param name="srcSoundFormat">Source sound format.</param>
            <param name="srcSampleRate">Source sample rate.</param>
            <param name="srcSampleCount">Source sample count.</param>
            <param name="samples">NBuffer containing the samples.</param>
            <param name="srcSampleIndex">Source sample index.</param>
            <param name="sampleIndex">Sample index.</param>
            <param name="sampleCount">Sample count.</param>
            <param name="flags">Must be zero.</param>
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.CopyFrom(Neurotec.Sound.NSoundFormat,System.Int32,System.Array,System.Array,System.Int32,Neurotec.IO.NBuffer,System.Int32,System.Int32,System.Int32,System.UInt32)">
            <summary>
            Copies the data from the specified sound buffer to the current sound buffer.
            </summary>
            <param name="srcSoundFormat">Source sound format.</param>
            <param name="srcSampleRate">Source sample rate.</param>
            <param name="minValue">The minimum sound sample value of the sound buffer.</param>
            <param name="maxValue">The maximum sound sample value of the sound buffer.</param>
            <param name="srcSampleCount">Source sample count.</param>
            <param name="samples">NBuffer containing the samples.</param>
            <param name="srcSampleIndex">Source sample index.</param>
            <param name="sampleIndex">Sample index.</param>
            <param name="sampleCount">Sample count.</param>
            <param name="flags">Must be zero.</param>
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.Append(Neurotec.Sound.NSoundBuffer)">
            <summary>
            Appends sound buffer to this instance.
            </summary>
            <param name="soundBuffer">The sound buffer to append.</param>
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.Append(Neurotec.Sound.NSoundFormat,System.Int32,System.Int32,Neurotec.IO.NBuffer)">
            <summary>
            Appends sound buffer to this instance.
            </summary>
            <param name="soundFormat">The buffer sound format.</param>
            <param name="sampleRate">The buffer sample rate.</param>
            <param name="sampleCount">The buffer sample count.</param>
            <param name="samples">The buffer with sound data.</param>
            <seealso cref="T:Neurotec.Sound.NSoundFormat"/>
            <seealso cref="P:Neurotec.Sound.NSoundBuffer.SampleRate"/>  
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.Append(Neurotec.Sound.NSoundFormat,System.Int32,System.Int32,Neurotec.IO.NBuffer,System.UInt32)">
            <summary>
            Appends sound buffer to this instance.
            </summary>
            <param name="soundFormat">The buffer sound format.</param>
            <param name="sampleRate">The buffer sample rate.</param>
            <param name="sampleCount">The buffer sample count.</param>
            <param name="samples">The buffer with sound data.</param>
            <param name="flags">Bitwise combination of zero or
                                more flags that controls behavior
                                of the function. This parameter is
                                reserved, must be zero.</param>       
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.Append(Neurotec.Sound.NSoundFormat,System.Int32,System.Array,System.Array,System.Int32,Neurotec.IO.NBuffer,System.UInt32)">
            <summary>
            Appends sound buffer to this instance.
            </summary>
            <param name="soundFormat">The buffer sound format.</param>
            <param name="sampleRate">The buffer sample rate.</param>
            <param name="minValue">The minimum sound sample value of the sound buffer.</param>
            <param name="maxValue">The maximum sound sample value of the sound buffer.</param>
            <param name="sampleCount">The buffer sample count.</param>
            <param name="samples">The buffer with sound data.</param>
            <param name="flags">Bitwise combination of zero or
                                more flags that controls behavior
                                of the function. This parameter is
                                reserved, must be zero.</param>
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.Clear">
            <summary>
            Clears sound buffer.
            </summary>          
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.CopyTo(Neurotec.Sound.NSoundBuffer,System.Int32)">
            <summary>
            Copies sound buffer to destination sound buffer.
            </summary>
            <param name="dstSoundBuffer">The destination sound buffer.</param>
            <param name="dstSampleIndex">The index in the destination
                                         buffer where to copy.</param>        
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.CopyTo(Neurotec.Sound.NSoundFormat,System.Int32,System.Int32,Neurotec.IO.NBuffer,System.Int32)">
            <summary>
            Copies sound buffer to Neurotec.IO.NBuffer.
            </summary>
            <param name="dstSoundFormat">The destination buffer sound
                                         format.</param>
            <param name="dstSampleRate">The destination buffer sample rate.</param>
            <param name="dstSampleCount">The destination buffer sample
                                         count.</param>
            <param name="dstSamples">The destination buffer.</param>
            <param name="dstSampleIndex">The index in the destination
                                         buffer where to copy.</param>
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.CopyTo(Neurotec.Sound.NSoundFormat,System.Int32,System.Int32,Neurotec.IO.NBuffer,System.Int32,System.UInt32)">
            <summary>
            Copies sound buffer to Neurotec.IO.NBuffer.
            </summary>
            <param name="dstSoundFormat">The destination buffer sound
                                         format.</param>
            <param name="dstSampleRate">The destination buffer sample rate.</param>
            <param name="dstSampleCount">The destination buffer sample
                                         count.</param>
            <param name="dstSamples">The destination buffer.</param>
            <param name="dstSampleIndex">The index in the destination
                                         buffer where to copy.</param>
            <param name="flags">Bitwise combination of zero or
                                more flags that controls
                                behavior of the function. This
                                parameter is reserved, must be
                                zero.</param>                         
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.CopyTo(System.Int32,Neurotec.Sound.NSoundFormat,System.Int32,System.Int32,Neurotec.IO.NBuffer,System.Int32,System.Int32)">
            <summary>
            Copies sound buffer to Neurotec.IO.NBuffer.
            </summary>
            <param name="sampleIndex">The sample index.</param>
            <param name="dstSoundFormat">The destination buffer sound format.</param>
            <param name="dstSampleRate">The destination buffer sample rate.</param>
            <param name="dstSampleCount">The destination buffer sample count.</param>
            <param name="dstSamples">The destination buffer.</param>
            <param name="dstSampleIndex">The index in the destination buffer where to copy.</param>
            <param name="sampleCount">The sample count.</param>
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.CopyTo(System.Int32,Neurotec.Sound.NSoundFormat,System.Int32,System.Int32,Neurotec.IO.NBuffer,System.Int32,System.Int32,System.UInt32)">
            <summary>
            Copies sound buffer to Neurotec.IO.NBuffer.
            </summary>
            <param name="sampleIndex">The sample index.</param>
            <param name="dstSoundFormat">The destination buffer sound format.</param>
            <param name="dstSampleRate">The destination buffer sample rate.</param>
            <param name="dstSampleCount">The destination buffer sample count.</param>
            <param name="dstSamples">The destination buffer.</param>
            <param name="dstSampleIndex">The index in the destination buffer where to copy.</param>
            <param name="sampleCount">The sample count.</param>
            <param name="flags">Bitwise combination of zero or
                                more flags that controls
                                behavior of the function. This
                                parameter is reserved, must be
                                zero.</param>
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.CopyTo(System.Int32,Neurotec.Sound.NSoundFormat,System.Int32,System.Array,System.Array,System.Int32,Neurotec.IO.NBuffer,System.Int32,System.Int32,System.UInt32)">
            <summary>
            Copies sound buffer to Neurotec.IO.NBuffer.
            </summary>
            <param name="sampleIndex">The sample index.</param>
            <param name="dstSoundFormat">The destination buffer sound format.</param>
            <param name="dstSampleRate">The destination buffer sample rate.</param>
            <param name="dstMinValue">The minimum sound sample value of the destination sound buffer.</param>
            <param name="dstMaxValue">The maximum sound sample value of the destiantion sound buffer.</param>
            <param name="dstSampleCount">The destination buffer sample count.</param>
            <param name="dstSamples">The destination buffer.</param>
            <param name="dstSampleIndex">The index in the destination buffer where to copy.</param>
            <param name="sampleCount">The sample count.</param>
            <param name="flags">Bitwise combination of zero or
                                more flags that controls
                                behavior of the function. This
                                parameter is reserved, must be
                                zero.</param>
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.Crop(System.Int32,System.Int32)">
            <summary>
            Crops sound buffer.
            </summary>
            <param name="sampleIndex">The index in the sample array
                                      where to copy.</param>
            <param name="sampleCount">The buffer sample count.</param>
            <returns>
            Cropped sound buffer. 
            </returns>                                                
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.Save(System.String)">
            <summary>
            Saves the sound buffer to the specified file.
            </summary>
            <param name="fileName">The name of the file.</param>
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.Save(System.String,Neurotec.NObject,System.UInt32)">
            <summary>
            Saves the sound buffer to the specified file.
            </summary>
            <param name="fileName">The name of the file.</param>
            <param name="reserved">Reserved for future use.</param>
            <param name="flags">Reserved; must be zero.</param>
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.Save(Neurotec.NObject)">
            <summary>
            Saves the sound buffer to NBuffer.
            </summary>
            <param name="reserved">Reserved for future use.</param>
            <returns>NBuffer to which the NSoundBuffer was saved.</returns>
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.Save(Neurotec.NObject,System.UInt32)">
            <summary>
            Saves the sound buffer to NBuffer.
            </summary>
            <param name="reserved">Reserved for future use.</param>
            <param name="flags">Reserved; must be zero.</param>
            <returns>NBuffer to which the NSoundBuffer was saved.</returns>
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.Save(System.IO.Stream,Neurotec.NObject)">
            <summary>
            Saves the sound buffer to the specified stream.
            </summary>
            <param name="stream">The stream to which the sound buffer will be saved.</param>
            <param name="reserved">reserved for future use.</param>
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.Save(System.IO.Stream,Neurotec.NObject,System.UInt32)">
            <summary>
            Saves the sound buffer to the specified stream.
            </summary>
            <param name="stream">The stream to which the sound buffer will be saved.</param>
            <param name="reserved">reserved for future use.</param>
            <param name="flags">Reserved; must be zero.</param>
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.GetSample(System.Int32)">
            <summary>
            Retrieves the sample specified by index.
            </summary>
            <param name="sampleIndex">Index of the sample.</param>
            <returns>The sound sample.</returns>
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.SetSample(System.Int32,System.Array)">
            <summary>
            Sets the value of the sample specified by index.
            </summary>
            <param name="sampleIndex">Index of the sample.</param>
            <param name="value">New value of the sample.</param>
        </member>
        <member name="M:Neurotec.Sound.NSoundBuffer.GetSamples">
            <summary>
            Gets sound samples.
            </summary>
            <returns>NBuffer containing sound samples.</returns>
        </member>
        <member name="P:Neurotec.Sound.NSoundBuffer.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Sound.NSoundBuffer.SoundFormat">
            <summary>
            Gets Neurotec.Sound.NSoundFormat.
            </summary>
            <value>
            Neurotec.Sound.NSoundFormat.
            </value>                         
        </member>
        <member name="P:Neurotec.Sound.NSoundBuffer.SampleRate">
            <summary>
            Gets the number of samples per second.
            </summary>
            <value>
            The number of samples per second.
            </value>                              
        </member>
        <member name="P:Neurotec.Sound.NSoundBuffer.Length">
            <summary>
            Gets or sets the number of samples actually contained in the sound
            buffer.
            </summary>
            <value>
            The number of samples actually contained in the sound buffer.
            </value>                                                     
        </member>
        <member name="P:Neurotec.Sound.NSoundBuffer.Capacity">
            <summary>
            Gets or sets the number of samples that the sound buffer can
            contain.
            </summary>
            <value>
            The number of samples that the sound buffer can contain. 
            </value>                                                    
        </member>
        <member name="P:Neurotec.Sound.NSoundBuffer.SamplesSize">
            <summary>
            Gets the size of sound buffer.
            </summary>
            <value>
            The size of sound buffer.
            </value>                      
        </member>
        <member name="P:Neurotec.Sound.NSoundBuffer.LongSamplesSize">
            <summary>
            Gets the size of sound buffer.
            </summary>
            <value>
            The size of sound buffer.
            </value>                      
        </member>
        <member name="P:Neurotec.Sound.NSoundBuffer.NativeSamplesSize">
            <summary>
            Gets the size of sound buffer.
            </summary>
            <value>
            The size of sound buffer.
            </value>                      
        </member>
        <member name="P:Neurotec.Sound.NSoundBuffer.MinValue">
            <summary>
            Gets or sets the minimum sound sample value of the sound buffer.
            </summary>
        </member>
        <member name="P:Neurotec.Sound.NSoundBuffer.MaxValue">
            <summary>
            Gets or sets the maximum sound sample value of the sound buffer.
            </summary>
        </member>
        <member name="T:Neurotec.Sound.NSoundType">
            <summary>
            Enumerates sound types.
            </summary>
        </member>
        <member name="F:Neurotec.Sound.NSoundType.Undefined">
            <summary>
            Undefined sound.
            </summary>
        </member>
        <member name="F:Neurotec.Sound.NSoundType.Mono">
            <summary>
            Mono sound.
            </summary>
        </member>
        <member name="F:Neurotec.Sound.NSoundType.Stereo">
            <summary>
            Stereo sound.
            </summary>
        </member>
        <member name="T:Neurotec.Sound.NSoundFormat">
            <summary>
            Provides functionality for working with sound format.
            </summary>
            <remarks>
            Image sound format is not limited to these fields. However
            only these fields are provided for usage with this SDK. 
            </remarks>
        </member>
        <member name="F:Neurotec.Sound.NSoundFormat.Undefined">
            Undefined sound format.
        </member>
        <member name="F:Neurotec.Sound.NSoundFormat.Mono8U">
            Mono 8 bit unsigned per sample sound format.
        </member>
        <member name="F:Neurotec.Sound.NSoundFormat.Mono8S">
            Mono 8 bit signed per sample sound format.
        </member>
        <member name="F:Neurotec.Sound.NSoundFormat.Mono16U">
            Mono 16 bit unsigned per sample sound format.
        </member>
        <member name="F:Neurotec.Sound.NSoundFormat.Mono16S">
            Mono 16 bit signed per sample sound format.
        </member>
        <member name="F:Neurotec.Sound.NSoundFormat.Mono32U">
            Mono 32 bit unsigned per sample sound format.
        </member>
        <member name="F:Neurotec.Sound.NSoundFormat.Mono32S">
            Mono 32 bit signed per sample sound format.
        </member>
        <member name="F:Neurotec.Sound.NSoundFormat.Mono64U">
            Mono 64 bit unsigned per sample sound format.
        </member>
        <member name="F:Neurotec.Sound.NSoundFormat.Mono64S">
            Mono 64 bit signed per sample sound format.
        </member>
        <member name="F:Neurotec.Sound.NSoundFormat.Mono32F">
            Mono 32 bit float per sample sound format.
        </member>
        <member name="F:Neurotec.Sound.NSoundFormat.Mono64F">
            Mono 64 bit float per sample sound format.
        </member>
        <member name="F:Neurotec.Sound.NSoundFormat.Stereo8U">
            Stereo 8 bit unsigned per sample sound format.
        </member>
        <member name="F:Neurotec.Sound.NSoundFormat.Stereo8S">
            Stereo 8 bit signed per sample sound format.
        </member>
        <member name="F:Neurotec.Sound.NSoundFormat.Stereo16U">
            Stereo 16 bit unsigned per sample sound format.
        </member>
        <member name="F:Neurotec.Sound.NSoundFormat.Stereo16S">
            Stereo 16 bit signed per sample sound format.
        </member>
        <member name="F:Neurotec.Sound.NSoundFormat.Stereo32U">
            Stereo 32 bit unsigned per sample sound format.
        </member>
        <member name="F:Neurotec.Sound.NSoundFormat.Stereo32S">
            Stereo 32 bit signed per sample sound format.
        </member>
        <member name="F:Neurotec.Sound.NSoundFormat.Stereo64U">
            Stereo 64 bit unsigned per sample sound format.
        </member>
        <member name="F:Neurotec.Sound.NSoundFormat.Stereo64S">
            Stereo 64 bit signed per sample sound format.
        </member>
        <member name="F:Neurotec.Sound.NSoundFormat.Stereo32F">
            Stereo 32 bit float per sample sound format.
        </member>
        <member name="F:Neurotec.Sound.NSoundFormat.Stereo64F">
            Stereo 64 bit float per sample sound format.
        </member>
        <member name="M:Neurotec.Sound.NSoundFormat.IsSoundTypeValid(Neurotec.Sound.NSoundType)">
            <summary>
            \Returns true if given sound type is valid; otherwise returns
            false.
            </summary>
            <param name="value">Sound type value.</param>
            <returns>
            True - if sound type value is valid; otherwise returns false.
            </returns>                                                   
        </member>
        <member name="M:Neurotec.Sound.NSoundFormat.CalcBlockNativeSize(System.Int32,System.Int32)">
            <summary>
            Calculates memory block size by given bits per sample and
            \sample count.
            </summary>
            <param name="bitsPerSample">Bits per sound sample.</param>
            <param name="length">Sound sample count.</param>
            <returns>
            Memory block size in bytes. 
            </returns>                                                
        </member>
        <member name="M:Neurotec.Sound.NSoundFormat.CalcBlockSize(System.Int32,System.Int32)">
            <summary>
            Calculates memory block size by given bits per sample and
            \sample count.
            </summary>
            <param name="bitsPerSample">Bits per sound sample.</param>
            <param name="length">Sound sample count.</param>
            <returns>
            Memory block size in bytes. 
            </returns>                                                
        </member>
        <member name="M:Neurotec.Sound.NSoundFormat.CalcBlockLongSize(System.Int32,System.Int32)">
            <summary>
            Calculates memory block size by given bits per sample and
            \sample count.
            </summary>
            <param name="bitsPerSample">Bits per sound sample.</param>
            <param name="length">Sound sample count.</param>
            <returns>
            Memory block size in bytes.
            </returns>                                                
        </member>
        <member name="M:Neurotec.Sound.NSoundFormat.#ctor(Neurotec.Sound.NSoundType,System.Int32,Neurotec.Media.NChannelFormat,System.Int32)">
            <summary>
            Constructs sound format object.
            </summary>
            <param name="soundType">[in] Sound type.</param>
            <param name="channelCount">[in] Channel count.</param>
            <param name="channelFormat">[in] Sound format.</param>
            <param name="bitsPerChannel">[in] Bits count per sample per
                                         channel.</param>              
        </member>
        <member name="M:Neurotec.Sound.NSoundFormat.Equals(System.Object)">
            <summary>
            Determines whether the specified Object is equal to the
            current Object.
            </summary>
            <param name="obj">The Object to compare with the current
                              Object.</param>
            <returns>
            <i>true</i> if the specified Object is equal to the current
            Object; otherwise, <i>false</i>. 
            </returns>                                                 
        </member>
        <member name="M:Neurotec.Sound.NSoundFormat.GetHashCode">
            <summary>
            Gets the hash code. Is intended for a hash function for a
            particular type. GetHashCode is suitable for use in hashing
            algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current Object. 
            </returns>                                                 
        </member>
        <member name="M:Neurotec.Sound.NSoundFormat.ToString">
            <summary>
            Retrieves string representation of NSoundFormat object.
            </summary>
            <returns>
            String representation of NSoundFormat object.
            </returns>                                             
        </member>
        <member name="M:Neurotec.Sound.NSoundFormat.ToString(System.String)">
            <summary>
            Retrieves string representation of NSoundFormat object.
            </summary>
            <param name="format">Reserved.</param>
            <returns>String representation of NSoundFormat object.</returns>
        </member>
        <member name="M:Neurotec.Sound.NSoundFormat.GetBlockNativeSize(System.Int32)">
            <summary>
            \Returns memory block size for current sound format by given
            sound sample count.
            </summary>
            <param name="length">Sound sample count.</param>
            <returns>
            \Returns memory block size for current sound format by given
            sound sample count. 
            </returns>                                                  
        </member>
        <member name="M:Neurotec.Sound.NSoundFormat.GetBlockSize(System.Int32)">
            <summary>
            \Returns memory block size for current sound format by given
            sound sample count.
            </summary>
            <param name="length">Sound sample count.</param>
            <returns>
            \Returns memory block size for current sound format by given
            sound sample count. 
            </returns>                                                  
        </member>
        <member name="M:Neurotec.Sound.NSoundFormat.GetBlockLongSize(System.Int32)">
            <summary>
            \Returns memory block size for current sound format by given
            sound sample count.
            </summary>
            <param name="length">Sound sample count.</param>
            <returns>
            \Returns memory block size for current sound format by given
            sound sample count.
            </returns>                                                  
        </member>
        <member name="M:Neurotec.Sound.NSoundFormat.op_Explicit(Neurotec.Sound.NSoundFormat)~System.UInt32">
            <summary>
            Gets value field of NSoundFormat object.
            </summary>
            <param name="soundFormat">NSoundFormat object.</param>
        </member>
        <member name="M:Neurotec.Sound.NSoundFormat.op_Explicit(System.UInt32)~Neurotec.Sound.NSoundFormat">
            <summary>
            This conversion operator converts from a uint type to a
            NSoundFormat type
            </summary>
            <param name="value">value to be converted</param>      
        </member>
        <member name="M:Neurotec.Sound.NSoundFormat.op_Equality(Neurotec.Sound.NSoundFormat,Neurotec.Sound.NSoundFormat)">
            <summary>
            Checks if two soundFormats are equal.
            </summary>
            <param name="soundFormat1">First soundFormat to be compared.</param>
            <param name="soundFormat2">second soundFormat to be
                                       compared.</param>
            <returns>
            True if soundFormats are equal, false otherwise. 
            </returns>                                                          
        </member>
        <member name="M:Neurotec.Sound.NSoundFormat.op_Inequality(Neurotec.Sound.NSoundFormat,Neurotec.Sound.NSoundFormat)">
            <summary>
            Checks if two sound formats are not equal.
            </summary>
            <param name="soundFormat1">First sound format to be
                                       compared.</param>
            <param name="soundFormat2">Second sound format to be
                                       compared.</param>
            <returns>
            True if soundFormats are not equal, false if equal. 
            </returns>                                          
        </member>
        <member name="M:Neurotec.Sound.NSoundFormat.GetChannelType">
            <summary>
            Retrieves the current channel type.
            </summary>
            <returns>The current channel type.</returns>
        </member>
        <member name="M:Neurotec.Sound.NSoundFormat.Equals(Neurotec.Sound.NSoundFormat)">
            <summary>
            Checks whether the current sound format equals the other ApduClass object.
            </summary>
            <param name="other">The other sound format object.</param>
            <returns><i>true</i> if the formats are equal, else <i>false</i>.</returns>
        </member>
        <member name="P:Neurotec.Sound.NSoundFormat.NativeType">
            <summary>
            Defines the native type of the object.
            </summary>
        </member>
        <member name="P:Neurotec.Sound.NSoundFormat.NSoundTypeNativeType">
            <summary>
            Defines the native type of the sound type.
            </summary>
        </member>
        <member name="P:Neurotec.Sound.NSoundFormat.IsValid">
            <summary>
            Checks whether current NSoundFormat value is valid.
            </summary>
            <returns>
            <i>true</i> if the object is valid NSoundFormat, <i>false</i>
            if not. 
            </returns>                                                   
        </member>
        <member name="P:Neurotec.Sound.NSoundFormat.SoundType">
            <summary>
            Gets sound type of current sound format.
            </summary>
            <value>
            Value represents sound type of current sound format.
            </value>                                            
        </member>
        <member name="P:Neurotec.Sound.NSoundFormat.ChannelCount">
            <summary>
            Gets channel count of current sound format.
            </summary>
            <value>
            Value represents channel count of current sound format.
            </value>                                               
        </member>
        <member name="P:Neurotec.Sound.NSoundFormat.ChannelFormat">
            <summary>
            Gets channel format of current sound format.
            </summary>
            <value>
            Value represents channel format of current sound format.
            </value>                                                
        </member>
        <member name="P:Neurotec.Sound.NSoundFormat.BitsPerChannel">
            <summary>
            Gets bit count per sound sample per channel.
            </summary>
            <value>
            Value represents bit count per channel. 
            </value>                                    
        </member>
        <member name="P:Neurotec.Sound.NSoundFormat.BitsPerValue">
            <summary>
            Gets bit count per sound sample value. For sound format it is
            the same value as BitsPerSample.
            </summary>
            <value>
            Value represents bit count per sound sample value. 
            </value>                                                     
        </member>
        <member name="P:Neurotec.Sound.NSoundFormat.BitsPerSample">
            <summary>
            Gets bit count per sample.
            </summary>
            <value>
            Value represents bit count per sound sample. 
            </value>                                     
        </member>
        <member name="P:Neurotec.Sound.NSoundFormat.BytesPerChannel">
            <summary>
            Gets byte count per sound sample per channel.
            </summary>
            <value>
            Value represents byte count per sound sample per channel. 
            </value>                                                  
        </member>
        <member name="P:Neurotec.Sound.NSoundFormat.BytesPerValue">
            <summary>
            Gets byte count per sound sample value.
            </summary>
            <value>
            Value represents byte count per sound sample value.
            </value>                                           
        </member>
        <member name="P:Neurotec.Sound.NSoundFormat.BytesPerSample">
            <summary>
            Gets byte count per sound sample.
            </summary>
            <value>
            Value represents byte count per sound sample.
            </value>                                     
        </member>
    </members>
</doc>
